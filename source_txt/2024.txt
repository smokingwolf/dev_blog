TITLE: 2024年！　新年あけまして！
CATEGORY: その他
DATE: 2024-01-01 00:00:00
-----
BODY:
<CENTER>　あけましておめでとうございます！
　ということで2024年、令和6年となりました！

<hr size="1" />
<strong><span style="font-size:x-large;">●新年あけましたイラスト！</span></strong>
<span style="font-size: 80%">※今年の年賀イラストはシルフェイドシリーズよりスケイル（人化＆元） 謎の和装</span>
<img src="../../image/2024/20240101.jpg" style="max-width:500px;" loading="lazy" height="625">



<strong><span style="font-size:x-large;">●今年の抱負</span></strong>
ここ最近、事故なども含めていろいろと体を壊しているので、
今年はさらに注意して生活していきたいです。
リアルも大変になっているとはいえ、
その範囲でうまいこと『片道勇者2』の開発も進めたいですね！
ウディタのバグ修正は去年より減ると思いますので、
その分の時間をあてられるはずです！


他には現状そんな大きな予定はありませんが、介護も含め、
生活の中で急に大変な状況が出てくるかもしれない状況です。
いろいろな心構えをしながら、やれることを進めていきます！
　
それではみなさん、今年も一年、よろしくお願いいたします！</CENTER>
-----
EXTENDED BODY:

-----
--------
TITLE: フリーゲーム関係×2  ＆  『片道勇者』SteamDeck対応
CATEGORY: 開発日誌
DATE: 2024-01-20 10:17:38
-----
BODY:
<CENTER>介護が最近ますます大変になってきて
腰のダメージが回復するどころかずっと増え続けているウルフです。

ここ最近はSteam版『片道勇者（プラス）』のSteam Deck対応をがんばったのと、
ウディタの修正を行っていました。
サポート業務ばっかりでメインの開発が進んでないので心が重い！

今回は「フリーゲーム話」を2つと「Steamのお話」を2つお送りします！

<HR><span style="font-size:large;"><B>●最後の『フリゲ2023』 コメントありがとうございます！</B></span>

<img src="../../image/2024/20240120.jpg" border="1" style="max-width:420px;" loading="lazy" height="506">

『フリゲ2023 (The Final)　あなたのベストフリーゲーム』という、
フリーゲームへのコメントを募るイベントがありまして、
私の作品にも多くのコメントをいただきました！

といいますかリストの作品数がとんでもない！
世界にはこんなにフリーゲームがあふれているんだ！　と驚かされます！
ウディコン作品もいっぱい載ってましたね！

→<B>◆フリゲ2023ページ</B> <a class="double-link red" target="_blank" href="https://web.archive.org/web/20250531071922/https://furige.herokuapp.com/2023/">https://furige.herokuapp.com/2023/ (ｱｰｶｲﾌﾞ)</a>

私のゲームにいただいたコメント集へのリンクは、
見つけられた分で以下の通りでした。
私からのコメントも各作品に送らせていただきましたので、ここでもご紹介！


<span style="font-size: 150%"><B>●シルフェイド見聞録</B></span> <a class="double-link red" target="_blank" href="https://web.archive.org/web/20241007014615/https://furige.herokuapp.com/2023/comment/11119">https://furige.herokuapp.com/2023/comment/11119 (ｱｰｶｲﾌﾞ)</a>
<span style="color: #2962ff">　<span style="font-size: 80%"><B>私のコメント</B>：まだ覚えてくださっている方がたくさんいらっしゃって作者として感激です！
『シルフェイド見聞録』は私にとってほぼ原点の作品でありながら、
当時の未熟さゆえに完結させられていないままの作品です。
私の生きているうちにリブートしたいなという気持ちは本当にありますので、
期待度は低めで、気長にお待ちいただけますと幸いです！</span></span>
→　リブートするなら思い出補正を乗り越える必要があるので、
その壁を乗り越えられると見込めるようになった頃が
プロジェクトの再開タイミングになると思います！　修行あるのみ！


<span style="font-size: 150%"><B>●シルフェイド幻想譚</B></span> <a class="double-link red" target="_blank" href="https://web.archive.org/web/20250619065351/https://furige.herokuapp.com/2023/comment/10600">https://furige.herokuapp.com/2023/comment/10600 (ｱｰｶｲﾌﾞ)</a>
<span style="color: #2962ff">　<span style="font-size: 80%"><B>私のコメント</B>：たくさんの思い出のコメント、本当に感謝の限りです！　
『シルフェイド幻想譚』は自分の思っていた以上に、みなさまの中に
色んな楽しみや思い出を生み出せていたことをコメントから気付かされました。
こういった作風のRPG、生きてる間にもう一本くらい作ってみたいですね。</span></span>
→　これも割と直感寄りで作った1本だったので、
面白さを分析、再構築できるようにして、
もう一本くらいはこういうRPGを狙って作ってみたいです！


<span style="font-size: 150%"><B>●モノリスフィア</B></span> <a class="double-link red" target="_blank" href="https://web.archive.org/web/20250619065714/https://furige.herokuapp.com/2023/comment/10650">https://furige.herokuapp.com/2023/comment/10650 (ｱｰｶｲﾌﾞ)</a>
<span style="color: #2962ff">　<span style="font-size: 80%"><B>私のコメント</B>：たくさんのコメントありがとうございます！　
マウスアクションという新しい挑戦をした一作なのですが、
まだ覚えていてくださる方がいらっしゃって、本当に作ってよかったです！
まだ遊んでおられない方には、今でも新鮮さを感じることができる一本かも
しれませんので、普通のアクションゲームに飽きた人にはよければぜひ！</span></span>
→　これは今リメイクしてSteamとかで出してもいけるのでは？
とちょっと思っています。でも腱鞘炎になる人が増えそうなのが……。


<span style="font-size: 150%"><B>●シルフドラグーンゼロ</B> </span><a class="double-link red" target="_blank" href="https://web.archive.org/web/20250619065909/https://furige.herokuapp.com/2023/comment/11345">https://furige.herokuapp.com/2023/comment/11345 (ｱｰｶｲﾌﾞ)</a>
<span style="color: #2962ff">　<span style="font-size: 80%"><B>私のコメント</B>：まさかこのゲームにもコメントをいただけるなんて！　ありがとうございます！
変なやりこみプレイに対してもクリア後のコメントがあるとちょっとうれしいですよね。</span></span>
→　変なプレイにも反応があるとうれしいですよね！
今後もチャンスがあったら入れていきたいです。


<span style="font-size: 150%"><B>●片道勇者</B></span> <a class="double-link red" target="_blank" href="https://web.archive.org/web/20250619070049/https://furige.herokuapp.com/2023/comment/10843">https://furige.herokuapp.com/2023/comment/10843 (ｱｰｶｲﾌﾞ)</a>
<span style="color: #2962ff">　<span style="font-size: 80%"><B>私のコメント</B>：『闇』（様々な時間制限）に追われながらも、その範囲でやれることを何とかこなしつつ、
持てるものを選びながら進んでいく……それは人生も同じだと思います。
とても長い時間遊んでくださったというコメントがたくさんあって、作者として感謝の限りです！
遊んでくださった皆さま、本当にありがとうございます！　
2023年12月時点ではまだ開発中ですが、有料作品の『片道勇者2』もいずれ
リリースされていると思いますので、もし興味がおありでしたらそちらもぜひ！　ゼヌーラ！</span></span>
→　とても長い時間遊んだ、というコメントが特に目立つ一作でした。
うれしい！　『片道勇者2』も全力を尽くします！


<span style="font-size: 150%"><B>●プラネットハウル</B></span> <a class="double-link red" target="_blank" href="https://web.archive.org/web/20250619071128/https://furige.herokuapp.com/2023/comment/11261">https://furige.herokuapp.com/2023/comment/11261 (ｱｰｶｲﾌﾞ)</a>
<span style="color: #2962ff">　<span style="font-size: 80%"><B>私のコメント</B>：コメントありがとうございます！　こんな突き放したコンセプトのゲーム、楽しんでもらえるかなあ？
と心配でしたが、変な操作ばかりでもしっかり最後まで遊んでくださって、
なおかつ、まだ覚えていてくださる方がいらっしゃったことが非常にうれしいです！
PERYKARN氏によるアツいSFストーリーも必見！
でも私はケモナーというほどケモノ好きじゃないつもりなんですよ！　本当なんです信じて！</span></span>
→　動物とケモ耳キャラがもっと上位に来てるところから派生して
獣人キャラも好きなだけでケモノ好き度合いはほどほどなんですよ信じて！


<B>【ありがとうフリゲ20XX！】</B>
『フリゲ20XX』は、毎年のフリーゲームを知るにあたって
すばらしい場でしたし、私のゲームも評価してもらえるときがあって、
非常に思い出深いイベントでした。

フリーゲームって、注目している場が違ったり、
オススメしてくれる人がいないと面白い作品が出てても
全然気付けないので、こういう投票の場で知ることができるのは
とても貴重だったように思います。

また、ウディコン作品も上位で紹介してもらえることがあって、
そういった面でも助けになっていてありがたかったです！　

色んな作品にコメントを投稿してくださった皆さま、ならびに
これまで長いことフリゲ20XXを開催してくださった運営の皆さま、

　「面白い」と言ってもらえるゲームを今後も作りたいなあ、
という気持ちを思い出させてもらえました。
いただいたコメントを胸に、これからも前進していきたいと思います！

<HR><span style="font-size:large;"><B>●自作ゲームマガジン発売！</B></span>

続いてはこちらもフリーゲームの話題！
今の3分ゲーコンテストの主催の方より、
『自作ゲームマガジン』という自作ゲームの雑誌が作られました！

<span style="font-size: 80%"><B>※コラム寄稿しただけなのに私の名前が大きく載ってて恥ずかしい！</B></span>
<img src="../../image/2024/20240120A.png" border="1" style="max-width:520px;" loading="lazy" height="320">

私もこの活動を応援したかったので、自作ゲーム開発を始める人に向けて、
私の「最初の挫折と、ゲーム開発の第一歩の思い出」のお話を
コラムとして寄稿させていただきました。

どこかで話をした内容の「完全版」みたいな内容なので、
私の本などを読まれた方は部分的にご存じの内容です。

他にも話題に取り上げるべきフリーゲーム情報が載っていて、
電子版なら500円と非常にお安いので、
フリーゲームの話題が気になる方はよければぜひ！

<B><a class="double-link red" target="_blank" href="https://yareyare760-game.wixsite.com/home/magazin"><span style="font-size: 150%">【自作ゲームマガジン紹介ページへ】</span></a></B> <a class="double-link red" target="_blank" href="https://web.archive.org/web/20241114102032/https://yareyare760-game.wixsite.com/home/magazin">(ｱｰｶｲﾌﾞ)</a>

フリーゲームは伝統工芸的ポジションになってるのかも、
みたいな話は皆さまとのお話の中にも出ましたが、
こういう歴史と繋ぐまとめ情報媒体はコンパクトサイズであっても
「続くこと」を期待したいものだと思います。

わがままな希望ではありますが、1年に1回でもこういうのが続いてくれるとうれしいですね！


<B>【ウディコンを本に残すことも考えてみる？】</B>

そういえば「歴史に残す」と言えば、私がいなくなっちゃうと
ウディコンのサイトもなくなっちゃってウディコンがあった証拠が消滅しちゃうので、
いずれ記念として、作品紹介やコメントなどを「書籍」の形で
残してみたりするのもいいのかもしれません。

もはや今となっては、サーバーにデータを置いてあるよりも、
ショップさんに本のデータを置いてもらう方が情報として
長生きさせることができそうな気がします。
私のやることがなくなったら、そういう記念本もちょっと考えてみたいと思います。
AmazonさんちのKindleに出したりするのも慣れてますしね！

<HR><span style="font-size:large;"><B>●SteamでAI生成画像などが利用可能に！？</B></span>

私の記事を継続して読んでくださっている方向けに、いちおうのご連絡です！

以前、「Steamでは、画像生成AIで作られた画像が、買った素材集に
こっそり混ざってるだけでゲームがリジェクト（拒否）されるから恐い！」
みたいなことを申しましたが、先日Steamのルールが変わり、
AI生成物も使用できるようになりました。

<a class="double-link red" target="_blank" href="https://store.steampowered.com/news/group/4145017/view/3862463747997849618">https://store.steampowered.com/news/group/4145017/view/3862463747997849618</a>

この発表の大事な点をおおまかに整理すると、以下のようになると思います。


<span style="color: #d50000"><B>●ゲーム提出時にAIに関するアンケートが求められ、
開発者はゲームの開発および実行においてどのように
AIが使用されているかの説明が要求される（アート/コード/サウンド）。

●AI使用は「事前生成」と「ライブ生成」のそれぞれでカテゴリー分けされる。
「事前生成」は普通のゲーム通りに審査される。
「ライブ生成」だと、変な内容が出ないようにどう対策を講じているのかまで書く必要あり。

●これらの内容は今後も再検討される可能性あり。</B></span>


という雰囲気！
「素材にAI素材がこっそり混じってたりしないかあ」とビクビクしなくてよくなったのは朗報です！

が、AI生成画像などをガッツリ使うかと言われれば、
まだまだ権利的な話題において風当たりが強いので、
今のところはほとんどの画像生成AIは使いにくいままだなあと思っています。

CC0や許諾ありのオプトイン素材だけで学習されている
「きれいなモデル」なら権利的に問題なくなるので、そういうのがあれば、
それに自分の絵を学習させたりして遠慮なく使えて最高なんですけどね！
そういうのも徐々に出始めているみたいなので、今後に期待しています。




<HR><span style="font-size:large;"><B>●Steamの片道勇者、Steam Deckに対応！</B></span>
<a class="double-link red" target="_blank" href="https://store.steampowered.com/app/266210/"><strong>Steamの『片道勇者』</strong></a>が『Steam Deck』という携帯ゲーム機に対応しました！

<span style="font-size: 80%"><strong>↓Steam Deck開発機！　ちなみに左上のは整形外科でもらったロキソニン(痛み止め)テープ</strong></span>
<img src="../../image/2024/20240120B.jpg" border="1" style="max-width:520px;" loading="lazy" height="292">

つい最近、Steam片道勇者の起動ランチャーをなくしたおかげか、
「Steamさんちの審査でDeck上で『プレイ可能』になったけどどうするー？」
とご連絡をいただいたので、慌ててDeck対応の作業をしていました。

このSteam DeckはSteamのゲームを遊べる携帯ゲーム機です。
Windowsのゲームがある程度動くエミュレーター環境で動作しているようで、
Deck対応に向けて私もそこそこ『片道勇者』の修正作業が必要でした。

●<B>フォントの問題</B>：「Arial」と「MS Gothic」は入ってたが「Arial Black」は入ってなかった。
→　この2つは「名前だけ同じ似たフォント」かもしれません。
ほんのちょっとだけ横幅が違う程度の差がありました。
→　【×】ウディタのサンプルゲームでも指定している「Arial Black」は
Steam Deckには入っておらず、代替フォントを入れました。
Windowsフォントも全部入っているわけではなさそうです。
→　【×】また、「ＭＳ ゴシック」と日本語で指定したフォント名は
Steam Deckでは読み込めないようでした。

●<B>サウンド問題</B>：MIDI音源は再生できない。
→　Steam DeckではMIDI形式以外の音源を用意する必要がありました。

●<B>ボタン表記の問題</B>：ボタン表記は、ABYXLRボタン表記にしたほうが評価が高くなる。
→　たとえばキーボード用のまま「Zキー:決定」になっているとか、
Deckボタンのどれか分からないボタン表記「①：決定」などの
ままだと評価が下がるようです。
また、「F4:画面サイズ変更」といった、Deck上では操作がめんどい
キー表記が残ってても評価が下がります。
こういう画面サイズ変更機能などは、できればオプション内に
入れちゃった方がいいでしょうね。


といった感じの課題が発生していました。

結局、Steam　Deck対応状況を「最高評価」にするには
すぐ対応できない課題が多すぎたので、
黄色の「いちおうプレイ可能」扱いのままでの公開となっています。

プレイ体験的には大きな問題はないと思いますので、
Steam Deckをお持ちの方で
「『片道勇者（プラス）』を寝転びながら遊びたい！」
という方はよければぜひどうぞ！

<span style="font-size:x-large;"><a class="double-link red" target="_blank" href="https://store.steampowered.com/app/266210/"><strong>Steam『片道勇者』ストアページへ</strong></a></span>

<HR>
という感じで変わらずサポートで忙しいままですが、やれる限り全力で進めています！

そして自由な時間ができ次第どんどん『片道勇者2』を進めたい！
まもなくシレン6も出ますから、片付けておかねばならないことは
しっかりやっておきたいですね！
やりたいことはいっぱいです！　うおおおお！</CENTER>
-----
EXTENDED BODY:

-----
--------
TITLE: 風来のシレン6に触れて学んだこと【ローグライクお勉強記】
CATEGORY: 開発日誌
DATE: 2024-02-03 10:47:01
-----
BODY:
<CENTER>先日、発売から遅れながらもようやく
『不思議のダンジョン 風来のシレン6 とぐろ島探険録』を
少し遊ばせていただきましたので、忘れないうちにゲーム開発者の視点で
「こういう部分いいですね！」と特に感じたところをメモしておこうと思います。

私も現在、デッキ構築ローグライクRPG『片道勇者2』を開発しているので、
よくできる工夫に気付けたならその意図は取り入れたいですからね！
もちろんゲームのコンセプトは違うので、ちゃんとかみ砕いて
理解した上で意図を取り入れていきたい所存です。

なお、この記事はシレン6のネタバレが満載ですのであらかじめご注意ください。

<span style="color: #2196f3"><span style="font-size: 80%">※「ローグライク」というゲームシステムについてここでは詳しく説明しませんが、
簡単に言うと「マップ上を1歩ずつ移動して、そのマップ上のまま敵に攻撃できたりアイテムを
使ったりするシステム」のRPGです（普通のRPGにおける「戦闘パート」という概念がない）

『風来のシレン6』はターン制で、自分が1歩あるいたり攻撃したりするたび、
全ての敵も1歩動いたり、あるいは1回攻撃してきたりします。
なお、だいたいのローグライクは死ぬとスタート地点に戻されてレベル1からやり直しなので、
「プレイヤーのうまさ」の方を上達させてクリアを目指すゲームジャンルとなっています。
危険な場面でどのアイテムを使うか、どう動くべきか、
そういった適切な判断が求められるのが面白いゲームです！</span></span>


<HR><span style="font-size:large;"><B>◆『風来のシレン６』ですばらしかった点、色々！</B></span>

シレン6、最初のダンジョンクリアとその他ダンジョンの解放くらいまで
遊ばせていただきましたが、今作は
「<B><span style="color: #d50000">プレイヤーの感情面をさらにゆさぶる明確な意図を持った新要素</span></B>」
や、
「<B><span style="color: #d50000">まちがいなく遊びやすさ向上につながる新要素</span></B>」
がとても多かったように感じます！

特に「ゲーム面の仕組みやバランス周りだけでここまで
ドキドキワクワクできる感じの調整ができるのか！」と感心したので、
今回はその辺りも注目していきます。
ローグライクというゲームにおいて
「ゲーム部分で感情を盛り上げる仕組み」が今作はすばらしかったんですよ！

<span style="color: #2196f3"><span style="font-size: 80%">※逆に言うと、過去にたまにあった
「<B>面白くなりそうな気がするから搭載されたっぽいけどこれどうなの？</B>」と
感じてしまう要素が今回全然なかったり、あるいは過去作から省かれたりしていました。
そういった部分をなくしたりするのも難しいはずなんですが、
今作はそこも含めてすごくしっかり取捨選択されている印象でした。</span></span>

<HR>
<span style="font-size:130%;"><B>【バランス】「シレンのHP自然回復上昇」と「敵の攻撃力増加」で
体験がダイナミックに変化！</B></span>

ここはみなさんもおっしゃっている大きなバランス調整点！
過去作と比べ、大幅に「シレンのHP自然回復上昇」と
「敵の攻撃力増加」が行われました。
たぶん「敵の耐久力（倒すための必要打数）」も全体的に上がった気がします。

これによる変化を2つの観点で見ていきます。


<span style="font-size:large;"><strong>【1．戦術幅の増加、判断の楽しさアップ、スリルの生み方のうまさ】</strong></span>
1つめはゲーム面や体験に与えた影響について！
「戦術幅の増加」「判断の楽しさアップ」「スリルの生み方のうまさ」を
挙げていますが、それぞれ細かく見ていきます！

まず「シレンのHP自然回復上昇」と「敵の攻撃力増加」の変更で
どう変わったというと、少ないターンでHP回復が行えるため、
戦闘中の行動として

<B>『敵が隣接した状態のまま、後退していったんHP回復した後、再度敵に攻撃する』</B>

という行動が現実的な選択肢として増えました。
この記事では便宜上、その戦い方を『<B>後退戦</B>』と呼ぶことにします。
この「後退戦」を活用した具体的な戦闘の流れを紹介します。


<B>【後退戦の例】</B>
まず最初に、1歩あるくたびに主人公シレンのHPが2ずつ回復するとします。
（今作ではレベル10になるとこの速度で回復します！）

通路で敵Aと戦ってるとき、敵Aの一打で17ダメージを受けて
自分のHPが残り10になり、
「あと一撃当たれば敵Aを倒せるけど、次に自分が
攻撃を外したら敵Aの反撃で死ぬ！」という状況になりました。

自分が後ろの通路に一歩下がって自HPが10→12に回復するのを確認し、
あと4歩下がって20まで回復させて、
敵Aの一撃（17）に耐えられる安全マージンを確保しました。
こうすればシレンが次に攻撃を外しても生き残れるので、安全に戦えるわけです。

もし次のシレンの攻撃が外れて反撃を受けたら、
こちらの残りHPが20→3くらいになってしまうので、
また9歩くらい下がって攻撃します。
「ぐあー通路を9歩も下がるのー！？　9歩以内に
他の敵が来たりしないかヒヤヒヤするー！！」と思いながら！

そう！　理論上は無限にHPを回復し続けながら
戦い続けられるように見えますが、下がるということは
「<B>別の敵が前から来て、戦闘中の敵とはさまれる可能性がある</B>」
というリスクがあるのです！

そのため、「後退できそうな距離」は今作の戦闘で考慮すべき
重要なパラメーターの一つになったのですが、その正確な見積もりは
（ミニマップ上で敵を見られる状況でない限り）非常に困難です。

おまけに、高難易度のフロアに頻発する「1歩先しか見えない通路」内にいる場合は、
移動した後に前から来た敵から先制攻撃を受ける危険性まで発生するので、
安全マージンの取り方はもっと難しくなります。

もっと言えば、この戦法を使うことでよく発生する
「通路で前後マスを敵にはさまれた状況」はおそらくゲーム内で
トップクラスに悪い形で、一手で打てる有効な対策はかなりしぼられてくると思います。

「後退戦」は後退中に何も起きなければ満腹度の限り無限に
ダメージを与えられるハイリターンな技なのですが、
何か起きると非常にハイリスクな戦い方なのです。


<B>【後退戦によるスリルの生み方がすばらしい】</B>
この「後退中に別の敵が前から来て、元の敵とはさまれる可能性がある」
という部分、実際遊び手として体験してみると、
1歩後退するたびに感じる『ヒリ付き具合』がすごい！

この<B><span style="color: #d50000">後退中のスリル</span></B>の生み方が今作において
非常にすばらしいデザインだと感じまして、常に
「逃げてるときに他の敵が来たらヤバいぞ、ヤバいぞ」と思いながら
後退してHPを稼いで戦うプレイをする緊張感を
長く生み出せているのがとてもいいんですよ！

実際は1フロア内の敵の数が少なめのためか、
10歩くらいの後退で挟み撃ちになることはかなり少なく、
「ドキドキさせるんだけども実リソース的にめちゃめちゃにされることは意外とない」
という、私が思うゲームとして理想的な流れにできているのも好みの点です。
まあ「意外とない」だけで、打開策がないときに
1回それが起きたら即座にゲームオーバーなんですけどね！

もちろん調子に乗って長距離後退するとちゃんと挟み撃ちになります。
調子に乗らなくてもすぐ挟まれることがあります。どこまで運頼みするかの見極めが難しい！



<B>【スリルを生む回数を増やすための敵のパラメーター設定】</B>
また、今作は敵の「攻撃力」がかなり上がり、
レベル1で戦う最弱モンスターからの攻撃ですら
こちらが4打でやられてしまうようになりました！
シレンのHPが15しかないのに4ダメージとか出してきます！
最弱のマムル相手でも初期レベルで2体同時に戦ったら普通にやられかねません。

また「敵の耐久力」も、今作は序盤以外のほとんどの敵を倒すための打数が
「2～3打以上」、弱くない敵はほぼ「3打必要」に設定されており、
かつ敵の攻撃力が上がったため、こちらが1～2回ミスしただけで
簡単にピンチになるようになっています。
状態異常をかけてくる敵まで3打必要とか辛い！

このパラメーター設定により、相手次第では1体しかいなくても
「後退戦」が一定確率で発生するようになっていて、
結果として「後退戦」のヒリつき体験はだいぶ長い時間味わえるようになっています。

なおかつ、その状況を生むほど強い相手はだいたい1階層に
1種類以上は出現しているので、緊張感が途切れません。
（もちろん、1回くらい外しても殴り続けるだけで倒せる相手もある程度出ます）


本作は全体を通して「単体の敵なら確実に倒せるから何も恐くないやー」と
なってしまって緊張感がなくならないよう、
意図をもってしっかり敵の強さが設定されている感じがします。
<B>物理攻撃しかしてこない単体相手でも運次第では特別な対応が必要になる</B>、
それがシレン6！

<span style="color: #2196f3"><span style="font-size: 80%">　でも私が、操作するだけで楽しさを感じて満足していた10歳のときにこれを遊んだとしたら、
きっと足を止めてのガチ戦しかしなくて難しすぎて投げてたと思います。
そういう遊び方しかできない人もいることは頭に入れておきたいと思います。
（イベント展示で『片道勇者プラス』のプロト版を幼女に遊んでもらったら方向転換ができずに
一方的に敵にやられてしまっているのを見てトラウマになったことがある私より）</span></span>

<span style="color: #808080"><span style="font-size: 80%">※追記：敵の耐久力が高いと戦闘に文脈が出てくる
ちなみに、種族特攻の武器は「ダメージ1.5倍」になるらしいのですが、これだと
「3打」必要な敵は確実に「2打」以下で倒せるようになります。
特攻が硬い敵に対して確実に1打減らせる安心感があるので、しっかりありがたみがあります！
それでいて一撃では終わらないのでダメージを受ける可能性が依然残るため、
敵が多い場合に無思考に流れ作業で戦う展開も
そんなに発生しません（持ち込み武器などでしたら一撃ですが）。

また、「3打」必要となると、周囲の敵の位置関係も重要になります。
一撃で倒せる敵しかいないなら、部屋の中でも一列に並んでやってきていれば
前から切り伏せるだけですが、1体3ターンかかるなら通路に下がって戦うなど
必要な工夫が増えるわけですからね。
さらにその間に「通路側から敵が来ないか」というスリルも生まれる！

「倒すのにだいたい3打必要」という耐久力は、こういう「効力の見せ方」や
「考えどころ」が生まれるのかー、と、いい肌感覚を学べています。</span></span>



<B>【戦術と判断の幅が増えた！】</B>
前作シレン5では、後半のHP回復速度が低かったので
「逃げながら戦う」ということは滅多になく、
「危機になった時点でとにかくアイテムを使って対応する」という
<B>『アイテム消費してほぼ確実に安全を得る』</B>
という打開策がだいたいの場面で最善手でした。

ですが今回、<B>『ほぼノーコスト＆ハイリスクハイリターン』</B>の
「後退戦」ができるようになったおかげで、
どこまで節約するかの柔軟な択が増加しました！

たとえば強い敵や多くの敵と遭遇した場合でも、
<B>「敵にはさまれるリスクを負いながらアイテム消費なしでの後退戦をする」</B>か、
<B>「今すぐアイテム使って敵を無力化し、急な敵のおかわりにも対応できるようにしておく」</B>
かの悩ましい選択が生まれています。
また、「後退戦」と「アイテム消費」を組み合わせれば、より少ないアイテム消費で片が付くでしょう。

後退戦のリスクの正確な見積もりは非常に難しいので、
何が正しかったのかの評価はコンピューターにも簡単に計算できず、
難しい局面では「誰が考えても同じ解になる」みたいな流れに
なりにくいのが今作の特にアツいところだと感じます。


そして今回、一番大事な点として言いたいのがここ！
伝統的ローグライクゲームはプレイが極まっていくと、
<B><span style="color: #d50000">『より少ないリソースを使って危機を乗り越える判断をしていく』</span></B>
という面白さを味わうゲームになっていくと考えていて、
これまでのシレンでもおおまかには

<B><span style="color: #2962ff">●安全に倒せる敵はその場で通常攻撃で倒す。
●ピンチのときはアイテムを消費するが、その中でもなるべく効果が小さいか
残弾に余裕があるものから使って節約していく。</span></B>

という形でそれを実現していたと思うのですが、その両者のすき間に、今になって

<span style="font-size: 150%"><B><span style="color: #d50000">●一定確率でハイリスクな状況に陥るが
アイテム消費なしで無限ダメージが出せる『後退戦』</span></B></span>

という選択肢を現実的な形で増やしてくるというのが開発手腕としてすごい！

「なるほどこうやって選択肢の択を増やすと面白いのかー！」
と首がはずれるほどうなずいています。
特に「リソース消費なし」だけど「一定確率でかなりマズい状況になる」という点が、
プレイヤー感情としてのドキドキ感やギャンブル感も出せて無駄がない！　ズルい！

この造りは実際に体験してみて非常に面白く感じたので、
こういった「判断の段階の生み方」は自分もうまく作れないか、
よく考えていきたいと思います。

<span style="color: #a0a0a0">※追記：なおフロア内の敵の位置が常に全て分かる『気配察知の腕輪』が取れたら
通路での挟み撃ちを回避しやすくなるため、マズい状況になる頻度をかなり減らせます。
今作、敵の位置が分かることはほぼノーコストで無限の火力を
発揮できるチャンスに繋がるので従来以上に強いです！</span>


<span style="color: #d50000"><B>【まとめ】</B>
●【ゲーム面】戦闘時のピンチにおいて、通常の
「アイテム消費あり+だいたい安全」の『アイテム消費』
という打開策に加え、
「アイテム消費なし+ハイリスク」の『後退しながらの戦闘』
という選択肢の幅が増えて判断を楽しくさせている。

●【感情面】「敵の高攻撃力化」「もっぱら3打必要な敵の耐久力」
「後退による素早い自HP自然回復」の組み合わせにより、
頻繁に「後退しながらの戦闘」が発生し、
スリルの感情を長い時間生み出せている。</span>



<span style="font-size:large;"><strong>【2．画面情報から危険度が分かりやすくなった】</strong></span>

こちらも引き続き「シレンのHP自然回復上昇」と「敵の攻撃力増加」に起因する話で、
画面情報から危険度が分かりやすくなったという話です！


<B>【バランス調整で見た目からの分かりやすさがアップ！】</B>
配信しながら遊んでいる中、「自然回復速度アップ」と「敵の攻撃力アップ」の
修正で感じたのは、実は『見た目の分かりやすさの向上』でした。

1体のモンスターですら自HP満タン状態からガチバトルすると運次第で負ける中、
複数の敵に囲まれたりなんかしたら「通常攻撃で戦うだけじゃ絶対死ぬ！！」
というのが明確に分かるので、配信中も何度か敵に囲まれて
「ギャアアア！」と言ったと思います。

が、バランス自体はさらに厳しくなったように見えて、実は

<span style="color: #d50000"><B>●プレイヤー視点で特別な対応をすべき状況（アイテムの使用しどころ）が
分かりやすくなった。

●視聴者から見ても「ヤバい状況になった」というのが明確に分かる回数が増えた。
（とにかく2体以上の敵に寄られたらキツいので、見ればすぐ分かる）</B></span>

という変化が起きており、これらはとてもいい点に感じました。
この動画時代だと一目で見て状況を把握しやすいというのは大事なので、
これはすばらしい修正のような気がします。



<B>【自然回復速度が遅いゲームだと状況把握が難しくなる？】</B>
ここまでは「自然回復大、敵の攻撃力も大」という前提のゲームの話を
してきましたが、一方で『自然回復速度が遅くてジリジリHPが減っていく中を
うまく生き残るゲーム』って、実は遊ぶ側も見てる側も
なかなかのマニアックさが要求されるのでは、という考えが私の中にあります。

どうなるかというと、以下のようになる場合があります。

<B><span style="color: #d50000">●自然回復速度が遅いゲームは「敵の攻撃力も低めになりがち」で、
敵が複数でも「殴っても強引に勝ちにいける」という可能性が残りやすい。</span>
→　この結果、プレイヤーとしてもアイテムを切るべきかどうかの判断が
かえって難しくなり、プレイヤー側にも視聴者側にとっても
「難解さ」を上げてしまっているケースがある。

<span style="color: #d50000">●自然回復速度が遅いゲームはHP維持のために
「さほど危なく見えない場面でも予防的にアイテムを
切らないといけない場面」が発生しやすい。</span>
→　しかし「危険になる前にHPを減らさないように対応している」様子は
直感的に『ピンチに対してうまくやっている』ようには見えづらく、
視聴者にとっての見どころが分かりにくい！　上級者同士の将棋みたく、
1画面では暗黙の文脈がパッと伝わりづらくなりやすいかも。</B>


これらは「問題点」というよりはゲームの「味」と呼んでおくのが丸そうですが、
こういった点に対し、シレン6では「大きい交戦ごとにだいたい自HPが満タン」に
なっており、「画面内の敵が何体シレンに接近してるか」という部分だけ見れば
危険度が一目で分かります。

2体以上の敵に寄られたら本当にヤバいので実況プレイヤーの方も
「ギャー！」「ヤバい！」って言っちゃうでしょう！
私は言ってました。そういう部分も分かりやすい！

そういった意味でシレン6は<B>「過去作よりデータ的には難しくなったけれど、
アイテム消費などで工夫をすべきポイントは旧作よりも分かりやすくなっている」
「視聴者も見ててピンチが分かりやすい」</B>という印象があり、
ゲームとしても動画コンテンツとしても、よりスッと頭に入ってくる感触がしました。

<span style="font-size: 150%"><span style="color: #d50000"><B>今が危ない状況かどうか、1画面を見て
プレイヤーも視聴者もパッと分かる仕組みになっているか？</B></span></span>

これは動画映えを意識したゲーム開発において、非常に重要な点になると感じます。
自作ゲームも動画映えもなるべく狙っていきたい身としては、
そういった分かりやすさを出すための努力もしたいですね！


<span style="color: #d50000"><B>【まとめ】
●【ゲーム面】「敵の強化」と「ほとんどの戦闘開始時での自HP満タン化」
により、(自然回復が遅いゲームよりも)アイテム使用など
特別な対応をすべきタイミングが画面の状況から分かりやすくなっている。
●【動画配信面】パッと見て、敵の多さだけでまずい状況か否かが直感的に
分かりやすくなったので、視聴者にも親切になった（かもしれない）。</B></span>

<HR>
<span style="font-size:130%;"><B>【バランス】特に条件を必要とせずプレイヤー有利になる要素があってうれしい！</B></span>

ここから先は細かいお話です！

シレン6では、以下のボーナス要素があって、
私に「ラッキー！」と感じさせる効用が強かったです！
さらにこれらのボーナス要素は、特別なアイテムなしに入手可能です！

<span style="color: #d50000"><B>●高確率でアイテムが出るキラキラ：
通路や部屋の端にたいてい3個くらいのキラキラが埋まってることがあり、
通常攻撃すると割といいアイテムが2～3個手に入ります。たまに敵や罠も出ます。</B></span>

<span style="font-size: 80%">↓こういったキラキラを攻撃するとアイテムや敵が！　いいアイテムが出やすい気もしますが気のせい？</span>
<img src="../../image/2024/20240203C.jpg" border="1" style="max-width:520px;" loading="lazy" height="334"> 
　
<span style="color: #d50000"><B>●柱の部屋：壊すとアイテムが出やすい「柱」が9個並んでる部屋などが
出てきてワクワクします。たぶんこれもたまに敵が出ます。</B></span>


一方、これまでのシレンでは、

<B>●壁を掘れる場合だけ入れる隠し部屋
→　アイテムやお金が大量に落ちているが、穴を掘るためのツルハシなどが必要。

●アイテムが3つ落ちている、水路に囲まれた小島
→　場所替えの杖やマップ改変系アイテムで入る、割と良いアイテムが多い印象。</B>

といった『特定アイテムを持っている場合だけ入れるお得な場所』が
用意されていたのですが、前述のように必要アイテムなしで
「探索だけで色々と特別なボーナスが手に入る（と感じられる）パターン」は
ほぼなかったか少なかった気がするので、今回のように
「探索するだけでもらえるボーナス」が新鮮でした。

こういう要素は「うれしさ」感情を増してゲームにメリハリを生み出すのに
役立っていると感じたので、ぜひとも参考にしたいですね！


そして思ったのが、<B><span style="color: #d50000">おいしい展開に出会うのに、「ツルハシを持ってる」などの「特別な前提条件」なんて別にいらなかったんだ！</span></B> ということ！

もちろん「前提条件がそろってるときだけうれしい要素」があると
狙っていく意欲が生まれて楽しいのですが、何割かのボーナスは
前提条件なしでもらえても何にも問題なかった！
確かにソーシャルゲームの「ログインボーナス」だって、「ログインする」という
低コストな行為でもらえるものですが、嬉しいと言えばちゃんと嬉しいですもんね。


<B>【アイテム発生量の裏側について考える】</B>

ちなみにこの流れを見て思ったのが、ゲーム開発側は
<span style="color: #d50000"><B>「全体のバランスが同じまま、こんな風に『喜ばしい体験』だけを
増やすこともできるんだよなあ」</B></span>ということでした。

たとえばすでに「地面ドロップ分」だけで完全にバランスが取れた
ローグライクゲームがあったとき、「喜び要素」をそこからバランスを
あまり変えずに足すこともできます。

それは<B>「【通常の1Fあたりのアイテム取得数】を減らして全体のレア度を
下げ、【お手軽入手可能なボーナス分】にレア度の高いアイテムを回して、
総合的に普通通りのバランスになるようにする」</B>という単純な工夫！
誰でも思いつくけどたぶん意外とやれてない！

でもこうすれば、<span style="color: #d50000"><B>バランスほぼそのままで
プレイヤーへの「ラッキー！」という感情だけを増やすことだけができます！</B></span>。
どうせ同じ総リソースをプレイヤーに渡すなら
『もっとも喜ばれるあげかた』をした方が体験としてもいいですよね。

こんな風に<B><span style="color: #d50000">『大きくバランスを変えずにラッキー感だけを追加で生み出せないか』</span></B>
という意図を持っておくことは、ゲーム開発において非常に有用だと感じます。
今後もこれを意識して、同じものしかあげてなくても「喜び度」を
たっぷり上げていく工夫も考えていきたいですね！
TRPGでゲームマスターなどをやるときも、こういうテクニックは使えそうです。


<span style="color: #d50000"><B>【まとめ】
●【感情面】特別なアイテムを用意せずとも、探索しているだけで割と良い目の
アイテムが複数一気に取れる展開があり、プレイヤー感情的にうれしさが増加！

●【開発側視点のバランス】開発側としては、普段出てくるアイテムを少しだけしぼって
ボーナス分に回すことで、全体のバランスをたもったままプレイヤーの
「ラッキー！」感だけを上げることができる(かも)！</B></span>

<HR>
<span style="font-size:130%;"><B>【バランス】神器という複数付与つき装備を見つけたときのちょっとした興奮！</B></span>

シレン6は低確率ながら、最初から付与効果が複数付いている
強力な装備が手に入るようになりました。最大付与枠も多いそうです。
明らかに特別な武器なので、これはうれしい要素ですね！

が、それよりも「あ、これいい！」と思ったのが、
<B>マップ画面上でも光っていて遠くからでも「おっ！」と気付ける</B>
ようになっていること！
近付くと「フィーン！」という感じの何か出たっぽい音もする！
これはハック＆スラッシュ系ゲームでレアアイテムが出たときの伝統的演出！

こんな風に

<span style="color: #d50000"><B>『レアアイテムを目立つようにお知らせして、
拾うまでのディレイを生むことでプレイヤーをワクワクさせる』</B></span>

という仕組みは、テンション上がりタイムを少しでも
長く生み出すために重要な方法です！　分かってるー！
色んなところから細かくワクワクできる要素を取り入れているのが
すごいしっかりしてるなあ、と感じました。自分も見習いたい！

<span style="font-size: 80%"><span style="color: #2196f3">　私の『片道勇者』でも特殊な付与が複数付いた装備はさらっと登場しますが、
「いっぱい付与が付いてることが遠くから分かるようになってる方が絶対にワクワクできる」ので、
私もそういうワクワク感強化の方向性はしっかり取り入れた方がいいなあ、と感じました。
他にも、「敵だらけのダンジョンの宝箱に強装備が入っている」と遠くから分かるようになれば、
コストを支払って取りに行くか悩めるようになったりして楽しいでしょうしね！
</span></span>

なお、神器の性能は「普通より高い基本攻撃力＆印の枠数多め」
という感じだったので、合成ベースとして使うと強い感じでした。
驚異的に強すぎるというほどではありませんが、
「いいベース装備の神器を1本取れると強化の過程をグッと短縮できる」
という印象で、取れるとしっかりうれしいアイテムになっています！


<span style="color: #d50000"><B>【まとめ】
●【バランス面】特殊能力がいっぱい付いてたり能力枠が多く性能も高い神器が
まれに登場し、遠目に見ても分かるようになっている。
見つけたときにテンションが上がる程度にちゃんと強い。

●【感情面】明確なレアアイテムが遠くから見えたり
音で知らせてくれるとしっかりテンションが上がる！</B></span>

<HR>
<span style="font-size:130%;"><B>【バランス】『デッ怪』が登場する、スリルある
ステルス攻略フロアが登場、「夜」システムの進化系？</B></span>

過去作のシレン5では「夜システム」という、時間が経つと夜になって
めちゃめちゃ強い敵だらけになる代わりに、シレン側も回数制限ありで
強力な技を使えるようになるという状況が一定頻度で発生する局面がありました。

基本的には「敵になるべく合わないように進んでね」「技を活用して進んでね」
というステージだったと思いますが、それまでのプレイの文脈と
だいぶ切り離された状況になる部分もあり、好みが分かれるシステムでした。

今回はその夜システムと似た立ち位置のシステムなのか、
『デッ怪』という存在がダンジョンにまれに登場するようになっています。

『デッ怪』は工夫しないとまともに倒せない巨大な敵で、
攻撃力もすさまじい代わりに、鈍足でしか行動しない敵です。
プレイヤーは「うわああああ！」と言いながら
そのフロア中で『デッ怪』から逃げまわることになります。

『デッ怪』は一定時間で消えますが、『デッ怪ホール』という
ミニマップに常時表示される穴から何度でも召喚されます。
一見、ただのお邪魔キャラクターが出るだけのシステムのように思えます。


<B> 【でもちゃんとリスクとリターンがある挑戦ステージだった】</B>
が！　後で知ったのですが、実はこの『デッ怪』にやられないように
フロアを全部回ると『デッ怪』ホールが消えてほどほどに良いアイテムが
もらえるっぽくて、新たなステルス挑戦フロアという形式になっていることが分かりました。

それを知ると「味変（あじへん）の一つとしてこういうのもアリだなあ！」と思ったのですが、
初回プレイ時はそのメリットや、『デッ怪』ホールのつぶし方に気付きませんでした。

先にゲーム内で教えてもらっていたらワクワクしながら挑めたと思うので、
「目立つように報酬があることを情報公開してもらってもよかったかも？」
とは感じましたが、どこかで説明があったのを見逃したか、
見ても覚えてなかっただけかもしれませんね。


この『デッ怪』は、従来の「夜システム」で目指したかったかもしれない
『強い敵がいる中をドキドキしながら進む楽しみ』の方向性をそのままに、
より面白さが生まれる形にブラッシュアップされたものになった印象で、
リスクとリターンが分かるとワクワクできます。

以前狙った内容を良い方向に再構成されている見本として、
これは開発者として勇気をもらえる部分です。
「体験させたい感情」は同じでも、より良いやり方はきっと色々あるんだ！
という希望が持てます。

<HR>
<span style="font-size:130%;"><B>【バランス(これは昔から)】「腐ったおにぎり」という存在の納得感</B></span>

これはたぶん初代からなので、シレン6特有の話ではなく伝統的な話なのですが、
「あーこれは納得感の強いバランスだなあ！」と感じられたので取り上げておきます。

シレンシリーズには、『腐ったおにぎり』という食料アイテムがあります。
デロデロの罠などを受けておにぎり系アイテムが腐るとこうなってしまいます。

食べると「混乱」「睡眠」「目つぶし」「まどわし」「力が3下がる」という
ペナルティのいずれか1つを受けますが、満腹度は一定量回復します。
どうしても食べるものがないときはこれのお世話になるわけですね。

で、何がいいかってこの『腐ったおにぎり』、「ちから-3」みたいな
最も被害が大きいハズレ被害を引く確率って、
おそらく20％しかないっぽいことなんですよ！

他のペナルティも、敵が10ターン以内に来ないところで食べれば
仮に目が見えなくなってもすぐ回復して何の被害も受けませんし、
仮にハズレを引いて「ちから」が下がったとしても、「背中の壺」や
「毒消し草」みたいなアイテムでちからを回復する方法もあります。

そして満腹度自体はちゃんと増えるので、
「2割くらいでしか後遺症リスクがないなら許容できるし、
工夫して食べれば問題が起きにくいのはいいなあ」と私も感じられたので、
良いデメリットの作り方として注目すべき部分だな！
というのを今になって感心していました。


なお、『腐ったおにぎり』をプラス効果の『焼きおにぎり』というアイテムに
変換する方法もあるので、『腐ったおにぎり』を持ち続けるという
選択肢にも意味があります。

こんな風に、「デメリットはほどほどなので気軽に食べることもできる」
「焼けるチャンスを待って置いておく選択肢もある」と、複数の選択肢に
ちゃんとバランスのよいメリットデメリットがあるので、
『腐ったおにぎり』はすばらしいデザインのアイテムだ！　と感じたのでした。

<B>【プラス効果のランダム効果として強い効果も入れられる】</B>
ちなみにこの逆で、『特製おにぎり』という、食べると
「腹減らず状態」「しのび足状態」「拾い識別状態」「HP全回復」という
4つの良い効果の中から1つが抽選されるプラス面のおにぎりもあります。

特にその中の効果の一つ、「拾い識別（そのフロア中、拾ったものを自動識別できる）」
が付くと、高難度の完全未識別ダンジョンで超有利になったりするので、
こちらも興奮度が高いです！

が、おそらく25％でしかそれを引けないので、強すぎるのはそうなんですが
プレイ全体を通して見るとそこまで強すぎるわけでもありません。

こういったランダム効果もうまく設定できると「やった！」と
プレイヤー感情をゆさぶるのに使えそうなので、よく覚えておきたいと思います。

<HR>
<span style="font-size:130%;"><B>【配慮】マップに「通ったマス」が表示される！</B></span>

さて、ここからは配慮のお話！　まずマップに通ったマスが表示されます！
なんてすばらしいんだ！

何がいいって、このゲームは「罠」という見えないトラップが部屋に
存在するため、一回通過したマスは安全地帯になるんですよ。
次からは、一度通ったマスを通れば罠に遭遇することはありません。

が、過去作では通ってきたマスなんていちいち全部覚えているわけもなく、
必死になってそれを覚えている方が探索においていくらか
有利になってしまうというずいぶんな記憶ゲーになっていました。
といいますか、さすがに私は面倒で、記憶することをを諦めていました。

ですが今回は「通ったマス」がミニマップを見れば分かるようになっているので、
記憶力に頼る時代は終わりました！　いい時代です！
そう、「記憶すべき内容」はツールに頼って、我々は
創造的な作業や判断力を要求される作業をやるべきなんですよ！

<HR>
<span style="font-size:130%;"><B>【配慮】戦闘テンポがいい！　メニューもいつも通り瞬間！</B></span>

戦闘テンポがよく、メニューもいつも通り瞬間展開されます！　
攻撃モーションは素早く、『片道勇者』と同じかそれ以上の
戦闘テンポなので遊びやすい！
メニュー表示も一瞬で、メインの操作テンポ周りの
不満点は何も思いつきませんでした。

このあたりは基本といえば基本なんですが、
プレイ時のほぼ全ての操作に影響してくるので最重要部分です！
自分も常々、気をつけていきたい点です。

<HR>
<span style="font-size:130%;"><B>【配慮】一回戦った敵のHPと攻撃力と特殊能力が図鑑で分かる！ 敵ダメージも推定可能！</B></span>

シレン6では、冒険中でも敵の能力を図鑑で簡単に見られるようになりました。
特殊能力についての説明もかなり詳しめに書かれています。

<B><span style="font-size: 80%">　※「そんな仕様あったの！」と言われそうな内容も網羅！</span></B>
<img src="../../image/2024/20240203A.png" border="1" style="max-width:520px;" loading="lazy" height="292">


特にこの図鑑、遠くからでもいいので新たな敵に一度攻撃すれば、
その時点で図鑑から敵のHPや攻撃力などが確認できるようになるのがあまりに強力！

被ダメージも「敵の攻撃力－シレンの盾防御力」で
計算できる感じだったので戦闘の見通しが立てやすくなっており、
ローグライク作品として非常に遊びやすくなっています。
体を張ってダメージを受けて敵データを学んでいく必要性が
薄くなっており、これこそ時間のない現代人向けの素敵な仕様です！

そしてなにより、マップ上から「見渡す」で敵にカーソルを合わせれば
すぐ図鑑にアクセスできるので、HPや攻撃力や特殊能力を
すぐに思い出すことが可能です。
近付いたら超ダメージを与えてくるかもしれない相手もすぐ分かって安全！

「いちいち図鑑を確認する」という工程を要求される部分は
ゲーマー向きかもしれませんが、こだわる人に対するローグライクとしての
「フェアさ」が行きすぎているほどに便利ですばらしすぎる！

ここまでの仕様は私もなかなか真似できない部分ですが、
複雑な能力を持ったモンスターを出現させたり、急に攻撃力の高い
モンスターを出したりするゲームなら、これに近い配慮は
しっかり入れた方がよさそうだと感じます。

<span style="font-size: 80%"><span style="color: #2196f3">　ちなみに『片道勇者プラス』でもこの図鑑ほどできていないにせよ、
大ダメージを与えてくる敵は先に教えないとフェアさが足りないと思ったので
「危険な攻撃力の敵は赤く点滅して遠目にも分かるようになっている」
みたいな配慮を入れて対応していました。</span></span>

<HR>
<span style="font-size:130%;"><B>【配慮】一度見たアイテムの価格や売値が図鑑で分かる！ もう値段を覚えなくていい！</B></span>

上と同じく、アイテムの効果や、
「価格」や「売値」も冒険中に確認できるようになりました！
これまで攻略本を見なければ分からなかったことが
ゲーム内で分かるようになっており、遊び手視点で非常に感動しました。

特に上級難易度のダンジョンでは値段でアイテムの識別をする場面が
増えてくるので、それをチェックできるのはすばらしい！

従来は、なかなかここまでゲーム内での情報公開が
されてこなかった印象があるので、ここに来て殻を一枚やぶってくれた感触があります。
こういったデータ面での配慮は、私も参考にしたいくらいです。

わがままを言うなら、さらに一歩進んで買い物時に
「過去に見たどのアイテムの値段と一致してたか」の候補まで
出てたら超最高でしたが、さすがにそこは自分でチェックしましょうって感じでした。
自分でローグライクを作るときは、そこまでこだわれそうなら
開発こだわりポイントになるかもしれませんね。

<HR>
<span style="font-size:130%;"><B>【配慮】攻略したダンジョンの敵テーブルが見られる！</B></span>

踏破したダンジョンのフロアは、
敵の出現テーブルが見られるようになります！　すごい！

実際に出会ったモンスターだけしか表示されませんが、
前述の通り、敵の詳細スペックも見られるのでもはや攻略本が必要ありません！
なんということだ！
いやそもそもWikiに駆逐されてて攻略本が出せるご時世なのか分かりませんが！

敗北しても、あとからデータを見て攻略プランを練ることができるのはすばらしいと思います。
実装もきっと面倒臭いでしょうに、よくがんばってくれました！　ありがたい！

<HR>
<span style="font-size:130%;"><B>追記：【バランス】通常攻撃は簡単に命中率100％にできないらしく、
良い意味で緊張感ゼロにさせない信念を貫いている</B></span>

どうも今作、これまでにあった『必中の剣』みたいな100％必中の
「武器」や「印（効果）」がだいぶ入手困難になったっぽくて、
通常攻撃戦闘においての「確実性」を実現するのが
かなり難しくなった印象があります。

必中効果、存在するのは存在するらしいのですが、
SNSで見た感じ特定の裏ダンジョンでしか出ないという感触で、
私はいまだに見たことがありません。
2024-2-2時点で攻略サイトを見てみても「必中の印」の情報が
まだ載ってなかったり、あるいはアイコン画像が歯抜けになっている
（攻略班が撮影できてない？）くらいですからよほどなのでしょう。

おそらく確率面の緊張感をゼロにしない意図で
『ノーコストの行動に100％の安心感を作れていた』要素への
アクセスを難しくしたのではないかと思いますが、こういう細かいところまで
対応してるのは『なるべく多い時間、緊張感の維持をさせたい』という
意図を貫いてる感じでしっかりしてるなあ！　と思ってしまいました。

あまり詳しくないのですが、従来は『必中の剣』系は
最初の30Fダンジョンでも割と入手しやすそうなアイテムだった記憶があります。

<B>「100％の確実性を得られるのは『杖や巻物などのアイテムを消費』する場合だけ」</B>
という風にほぼ固めて、<B>『通常攻撃には小さくとも確率的な不安要素を
残したり、攻撃を外した場合のサブプランを想定させるようにして緊張感を生み続ける』</B>！

アクセスしにくくされた要素からも、プレイヤーにどう感じさせたいかの意図が
にじみでていて、強い信念のもとで取捨選択や取得難易度の設定が
行われたのだなというのが感じられます。

<HR>
<span style="font-size:130%;"><B>追記：【バランス】裏ダンジョンがこれまでよりなじみやすそうに感じられる！</B></span>

現在、大量に出てきたクリア後ダンジョンなども眺めているのですが、
今作はクリア後ダンジョンの
「段階的に『もっと不思議』に慣れさせようとしてる配慮」
が優れていそうだったり、
「これなら楽しく遊べそうかな？」感がしっかりにじみでてたりと、
ガチ性よりも面白さにちゃんと振ってる感じがあって、
遊ぶ前からワクワクをかきたてられています。従来作よりもです！

いや、その、これまでの裏ダンジョンって私みたいなライトプレイヤーだと
「元気なときにやろうかな」ってなっちゃってなかなか
触る気力が出なかったところもあるんですよ！
プレイテンポが今回ほどでなかったのが心理的にジワジワと
モチベーションを削っていた、などの要因も密かにあったかもしれませんが。

でも今回は、草や巻物なども未識別になってしまう
「もっと不思議」系のダンジョンでも、一部のダンジョンは
完全に未識別なわけではなく、
「未識別アイテムにカーソルを合わせると3択の識別候補が示されて、
どれかを推測する」という段階が間に入ってたりして
とても遊びやすそうです！　これを考えた人すごい！
<img src="../../image/2024/20240203B.png" border="1" style="max-width:520px;" loading="lazy" height="243">

こういった「なじみやすさを上げようとしている部分」の肌感覚は
プレイに慣れてしまうと忘れがちで、かつ開発側だと真っ先に
意識からはずれやすい部分なので、こういう配慮をすべきであることは
しっかり記憶に焼き付けておきたいと思います。

<HR>
以上、ちょっと遊んで感じた点をとりとめもなく書いてみましたが、いかがだったでしょうか。
私がこう感じたという話なので「いやそこは解釈違いだよー」などは
あるかもしれませんが、たとえ誤解でもゲーム開発の
役に立ちそうな意図をたくさん得られた気がします。

シレン6は全体を通して、「感情をゆさぶる仕組み作り」が従来以上に上手だったり、
「（作るのも手間がかかりそうなのに）あればうれしい補助機能」が
存分に搭載されてたりと、満足の塊みたいな一作でした！

過去作と比べるだけでも、感心するほどたくさんの配慮や、
盛り上げるための様々な仕組みが取り入れられており、
ゲームのブラッシュアップとはこうするんだぞ、
というすばらしいお手本を見せてもらった気がします。


私がどこまで学べるか分かりませんが、
すばらしい意図はいくらでも使えるようになりたい！
できる部分から、吸収できるところはしっかり学んでいきたいと思います。</CENTER>
-----
EXTENDED BODY:

-----
--------
TITLE: 片道勇者2開発+12　仲間処理を作成中！
CATEGORY: 片道勇者2
DATE: 2024-02-17 10:16:44
-----
BODY:
<CENTER>ぬおおお全然進まないぃぃと言いながらも
ぼちぼちやってるウルフです！

たまたまXヶ月以上ぶりに介護活動のない日ができたと思ったら
5倍速くらいで進んでしまい、激しい介護活動で
どうも80％くらい消耗してるっぽいと分かってグオオとなっています。

で、ここ最近は『片道勇者2』の仲間キャラの仮搭載に向けて
いくらか作業をしていましたのでご紹介！

<HR><span style="font-size:x-large;"><B>【片道勇者2　仲間キャラ仮搭載中！】</B></span>

現在は、仲間キャラに必要な素材やテキストを仮にでも何個か作ってみて、
仲間関連にかかる作業の見通しを立てるフェイズを行っています。

どこかで1回やらねばならなかったんですが、キャラのセリフを
書いたりするのが今の状況だとしんどすぎてずっと放置されっぱなしでした。

<span style="font-size: 80%"><B>※↓癒し手ネムリ(前作1の薬師ネムリの孫！)</B></span>
<img src="../../image/2024/20240217.jpg" border="1" style="max-width:520px;" loading="lazy" height="288">

その間は仲間キャラの「イラスト作成」を進めることが多かったのですが、
そんな中、先日ちょっとだけ時間や余力ができたので、
その隙に猛スピードで仲間キャラ1体の
ストーリー周りの設計や処理を書いていました。

おおよそめどが付いてきたので、今作で目指したい
「仲間キャラのお話周りの方針」について整理してみます。

<HR>
<span style="font-size:150%;"><B>【片道勇者2の仲間キャラの「お話」はどうなる？】</B></span>

今回の仲間キャラ作成のお話部分は
<B><span style="color: #d50000">「1周あたりの情報量は前くらいのままに、
前作より情報量やシチュエーションを増やしたい！」</span></B>
が目標です！

前作『片道勇者（プラス）』よりも仲間キャラの遭遇率を上げると同時に、
お話面でもいろいろと増やしたいなと思っています。
もちろん、読むのが面倒にならない程度の置き方を考えながら！
いい感じのハシ休めポジションを維持したいですね。


<B><span style="font-size: 150%">◆出会いのパターンを増やしたい！</span></B>
今回は仲間と遭遇できるシチュエーションを増やすことで、
「狙って使う感」と「飽きにくさ」を増やしたいと考えています。

たとえば「普通にフィールドを歩いている仲間を見つけた」という
シチュエーションとは別に、
<B>「街が敵に襲われてる中で助け出した」</B>みたいな大変な状況でも
仲間と出会うことがあります！

そういった状況で助けたりすると、仲間にするのに必要な
カリスマ（魅力）が少なく済んだり、別のボーナスを
代わりにもらうこともできる、みたいなパターンを用意する予定です。

<B><span style="font-size: 80%">※↓　これは旅の途中、ネムリから救援を求める手紙が届いたシーン</span></B>
<img src="../../image/2024/20240217A.jpg" border="1" style="max-width:320px;" loading="lazy" height="224">

あと、スタート地点に仲間を「住人」として配置して、
「いつもより高いカリスマを消費することでスタート地点から
仲間を連れていくこともできる！」みたいになれば
またプレイ方針が変わってくるでしょう。

1人でも確定で仲間を連れていけるなら、
前作では条件がそろいにくくて狙いづらかった
「仲間前提のビルド」も組みやすいはず！

「でも最初から前作相当の強さの仲間がいると強すぎないかな！？」
と思ったりもするので、バランス調整はうまいことやりたいですね。


<span style="font-size: 150%"><B>◆何度も出会ったら違う話が見られるようにしたい！</B></span>
発想的には別に大した話じゃないのですが、今作は周回を重ねると
「前には聞けなかったお話」が聞けるようにしたいと思っています。

前作では遭遇率がそもそも低かったのもあって
同じ話だけでも何も問題なかった感じはあるのですが、
今回はもっと出会いやすくなる予定ですからね！

具体的には、「すでに1つめの話を全部聞いた状況」で
別の世界でまたその仲間に会ったとき
「その話は聞いたよ / 他の話をしてよ」みたいに言えば
別の話をしてくれるようになります。
とりあえず遭遇率に応じて2～3回分以上用意して、
ほどほどに新鮮味を出していきたいところです。

あと、この手法なら
「1回のプレイでは話すには多い情報量」を
1キャラクターに詰め込んだとしてもプレイごとに
徐々に伝えることができます！
スポイルしなきゃいけないほどの設定や余談が思いついても安心！

最後の方は全体のストーリー的には重要でない話が
多めになったりするかもしれませんがそれはそれで。
ネムリ(2世)が最初から最後までナユタの実への愛を語るだけで
終わるエピソードだって作れます。


<span style="font-size: 150%"><B>◆「仲間に焦点を当てたクエスト」も作りたい！</B></span>
前回は理騎士クエストやら忍者クエストなどがありましたが、
今回は「仲間に焦点を当てたクエスト」も作りたい！
と思っています。これは現状思ってるだけで
設計予定に入れただけの状態です。

というのも、
「知らないキャラに話しかけてクエストを始める」よりは、
<B><span style="color: #d50000">知ってるキャラに話しかけて新クエストが始まった方が
プレイヤーの方もなじみやすいしキャラの深掘りもできて一石二鳥</span></B>です！

人間は基本的に「身内から」助けをもとめられる方が
やる気が出やすいので当然といえば当然なのですが、
それを意識してやってくれているゲームは意外と少ない気がします。

たとえばスマホゲームでも、クエストの始まりが
「プレイアブル（プレイヤーが使用可能な）キャラの誰か」
からの依頼なのか、「知らないモブキャラクター」からの
依頼なのかでちょっとやる気が変わった経験をされたことはないでしょうか。
多くの場合、「知ってるキャラ」からの依頼の方がやる気がでると思います。

ものすごい当然の手法ではありますが、
いざ自分がゲームを作ると、うっかり
「知らない人」ばっかりから依頼を出しがちです。

<B><span style="color: #d50000">『そのクエスト依頼、うまくやって何とか
身内のキャラから出せないかな？』</span></B>

という点はこれからちょっと意識していきたい部分ですね！

<HR><span style="font-size:large;"><B>【余談：矢を専用に装備しなくても弓矢が撃てるようになってます！】</B></span>

以前の記事にコメント欄でいただいたので
こっそり返信してたのですが、実は『片道勇者2』では前作と違い、
弓矢の「矢」を追加装備欄に装備する必要がなくなります！

<img src="../../image/2024/20240217B.png" border="1" style="max-width:420px;" loading="lazy" height="285">

つまり「狩人の弓[120]」を「武器欄」に装備するだけで、
「追加装備」欄に何も付けなくても120発分の
「木の矢」相当の攻撃が撃てるわけですね！

前作では弓と一緒に「追加装備」欄にも
「木の矢×80」みたいなのを装備しないと
弓が撃てませんでしたが、この仕様はちょっと面倒でしたし、
弓だけしか拾えないこともたまにあって悲しいことになりがちでした。

そして「武器」欄だけで弓矢が撃てるようになったということは、
「追加装備」欄に「破壊の腕輪（ダメージ1.3倍）」を付けたりできて、
射手キャラのビルドにさらなる自由度が生まれます！

いちおう「追加装備」欄に「盾」も装備できるようになりますが、
<strong>【「射撃攻撃」と「盾防御」は同じターンには使えない】</strong>
みたいな制約は付くかもしれません。
（ただし「盾」の親戚である「追加装甲」を装備していれば、
射撃攻撃してても防御効果を発揮できます。
こんな風に射撃職は、防御力の稼ぎ方にちょっと制限が出ます）

「追加装備」欄に装着できる「特殊な矢」自体は今作でも搭載予定です。
「炎の矢」とか「爆弾矢」みたいなやつですね！

弓を持ってなくても2マス先まで攻撃できて便利、
という要素はこういう形で継承されます！

<HR>
という感じで、進められる範囲でぼちぼち進めております。
生活は大変ですが、引き続きやれる範囲で
全力を尽くして進めていきます！
確定申告の時期なのでそれも用意しないといけませんね！　うおおお！</CENTER>
-----
EXTENDED BODY:

-----
--------
TITLE: ゲームをクリアせずに途中でやめてしまう理由
CATEGORY: 開発日誌
DATE: 2024-03-02 09:36:46
-----
BODY:
<CENTER>『ゲームをクリアせず途中でやめてしまう理由』、
ゲーム開発者的にちょっと気になりますよね！

と他の方のコメントに乗って言ったら予想外にいっぱい
コメントをいただいてしまったので、
他のゲーム開発者の皆さまにも役立つよう、
いただいたコメントをざっくりまとめさせていただきました！

元データは<a class="double-link red" target="_blank" href="https://twitter.com/WO_LF/status/1760122723223924989"><B>【こちらのポスト(X[旧Twitter])】</B></a>の引用や
リプライからご覧いただけます。

単純な「飽きた」という一言も、
もうちょっと具体性を高めて理解できるといいな、
という思いがあったのですが、そんな願いを超えた
具体的な意見がいっぱいありました！
本当にありがとうございます！


<span style="font-size:large;"><strong>【今回の内容】</strong></span>
<strong><a class="double-link g"  target="_top" href="#20240302A">◆「ゲームを途中でやめてしまった理由」ご意見まとめ</a>
<a class="double-link g"  target="_top" href="#20240302C">◆『最後まで』楽しく遊んでもらいたいのでこれらの問題に対策したい！</a></strong>

<img src="../../image/2024/20240302.jpg" border="1" style="max-width:520px;" loading="lazy" height="517">
<CENTER>
<HR id="20240302A">
<span style="font-size:large;"><B>◆「ゲームを途中でやめてしまった理由」ご意見まとめ</B></span>

皆さまからお寄せいただいた
「ゲームをクリアせず終わった理由」のご意見まとめは以下の通りです！

少し補足した言い方にしているものもありますが、
この項の内容は自由に引用してくださって大丈夫です。

<span style="color: #2962ff"><span style="font-size: 80%">　※「これ1個にまとめていいんじゃ？」という内容もありますが、表現の違いで視点が
多角化するところもあるので、言い方違いもバンバン載せています！
※[×？]と文頭に書いてあるのは、ほぼ同じ言い方のご意見がその数だけあった、という意味です。</span></span>

<HR>
<TABLE><TR><TD align="left">
<span style="font-size:130%;"><B>◆難易度が高すぎる、または低すぎる。その他の難易度的問題</B></span>

難しすぎたり、逆に物足りない、勝てるが
時間ばかりかかるなど、とにかく難易度が
プレイヤーのスキルや期待する感覚に合わない状態。

●[×15]難易度が高すぎる。あるいは進行による難易度の急上昇で挫折した。
　→　自分のプレイスキルが追いつかなくなって楽しみの費用対効果が低下した。
　→　道中は普通に進めたのにボスだけ強すぎてやめた。
　→　死に覚え系のゲームで、敵の動きを覚えるまでの時間や
　　　ストレスがゲームの魅力を上回った。
　→　自キャラ強化ありのアクションゲームで
　　　敵の強化に自分のキャラ的成長が追いつかなくてやめた。
　→　難易度が選べないゲームで、反射神経の問題でクリアできなかった。
　→　難しいのに攻略情報がなくてやめた。
　→　ラスボスが急に強くなりすぎてやる気をなくしてしまった。
●[×2]そもそもゲーム序盤すら難しすぎて自分に合わなかった。
　→　チュートリアルぽいステージすら越えられなかったというコメントも。
●[×3]パズル/謎解きが解けなくて進めなくなった。
●久しぶりに再開すると操作や戦闘のカンが失われているせいで
　難くなりすぎてまともに遊ぶことができず、やめてしまった
　（特に別のゲームと並行して遊んでいるとき）
●育成方法が煩雑すぎてうまくできなかった。
●ザコ戦でも複雑な操作を求められる場面が多くて面倒になった。
●操作が難しくてやめた。
●マップで迷ってやめた。
●敵が弱すぎて何をやっても勝ててしまい、つまらなかった。
●クリア難易度が低すぎる。
●後半になっていきなり強力すぎる要素が出て、（それだけに頼ればいい）
バランス崩壊状態になり、冷めてしまった。
</TD></TR></TABLE>
<HR>
<TABLE><TR><TD align="left">
<span style="font-size:130%;"><B>◆進行における単調さや作業感がある</B></span>

　繰り返しのゲームプレイや、新鮮さの欠如が原因で飽きた。

●[×6]アクションや攻略方法に慣れて（かつ変化がなく）単調さを感じてしまった。
　→　同じことの繰り返しが数回続くと飽きる。少しずつでも
　　　最後まで新要素が登場し続けて欲しい。
　→　メインの進行が単調作業になっていると気付いてやめた。
　→　この先にまだ違うプレイ感覚が待っていると思っている間は続けられる。
　→　「ああ、この先はこれを繰り返していく感じだな」という風に、
　　　ゲームとして先が見えたと思った時点でやめた
　　　（強すぎる攻略パターンを見つけてずっとそればかりやっている、なども）
●[×3]敵が硬くなって時間がかかるようになってやめた。
　→　ゲームが進むにつれて敵を倒すまでの時間が長くなっていき、
　　　面倒さが許容量を超えてやめた。
　→　敵の行動などが変化せず、ただ硬くなっていくだけのゲームで
　　　作業感が強くてやめた。
　→　高難易度にしたら、ただ敵が硬くなって時間がかかるだけで面白くなかった。
●[×2]レベル上げ作業が発生した時点で面倒さを感じてやめた。
●ゲームへの興奮が続かなくなって終了。
●周回前提のゲームの2周目に変化が少なくて飽きてしまった。
●同じダンジョンを2回攻略しなければいけない場所があって面倒だった。
●ゲーム配信者としては作業プレイが発生した時点で(視聴者の見所がなく)
　プレイするハードルが上がってしまう。その間、雑談しなきゃいけなくてつらい。
●チュートリアルが長く、その間にストーリー的に盛り上がるところもなく
　やめてしまった。
</TD></TR></TABLE>
<HR>
<TABLE><TR><TD align="left">
<span style="font-size:130%;"><B>◆時間がかかりすぎる、または時間を見つけるのが難しい、
　無駄な時間の発生</B></span>

　ゲームに要求される時間が多すぎる、生活の優先順位による時間の不足、
無駄な(面白くない)時間を過ごす部分でモチベーションが下がる、など。

●[×3]移動速度が遅くてやめた。
●メッセージ速度が遅くてやめた。
●戦闘がカットインやアニメーションの待ち時間が多くてつらい。
●起動時間やダウンロード時間が長くてアプリから離れてしまった。
●生活の都合でゲームを遊ぶ時間が取れなくなった。ゲームの優先度が下がった。
●そのゲームに要求される時間が長すぎて遊ばなくなった。
　（おそらく飽きの影響もあり）
●どこでもセーブや中断ができず、30分以上の継続プレイを強要するゲームは返品する。
●ダンジョン内でセーブできないゲームだった。
　セーブからセーブまでのスパンが長いと続けられない。
●RPGで、ラストダンジョンはたいてい
　「長そう・セーブポイントが少なそう・途中で戻ってこられなさそう」
　なので、一気に進めないといけないのが面倒でそこで止めてしまった。
●ノベルゲームで、好きなチャプターに移動しての途中再開ができなくて、
　全部のルートを見る前にやめた（最初からやり直ししないとダメなのが厳しかった）
●テーブルゲームで、1プレイするための労力がかかりすぎたのでもうやらなくなった
　（TRPGで表をいっぱい追っていかなければならないゲームなど）
●[×2]ソーシャルゲームで、プレイに投入しなければならない時間と
　　　労力（張り付きイベント）が多くてやめた。
●ゲームオーバー時、死んだ地点まで到達するのに時間がかかって面倒臭くなった。
●オープニングやチュートリアルが長すぎて自由行動に移るまでの時間が長くてやめた。
●先へ進むときの準備が面倒臭くなってやめた。
　（装備やキャラビルドを整えるのが手間、など）
●複数エンドの回収が大変で全部見る前にやめてしまった。
●ストーリーや映像を主に楽しみたいのに戦闘に時間がかかりすぎるのでやめた。
●[×3]会話やデモシーンが長すぎるなど、自分で動かせない時間が長くてやめた。
　→　早く次に進んで欲しいのに会話が長くてくどいのがつらい、なども。
●やたら演出が長すぎてやめた。
●長編のゲームは後回しにして短編をやろう、という生活にしたら
　そのまま長編ゲームの方を触らなくなってしまった。
●ゲーム配信者として、撮れ高が少なく時間がかかりそうだと思ったゲームは
　続きを遊ばなくなってしまう。
●アイテムやキャラの収集が主なゲームで、所持上限に達して
　頻繁に整理しなければならない時間が発生するとやる気が落ちる。
</TD></TR></TABLE>
<HR><TABLE><TR><TD align="left">
<span style="font-size:130%;"><B>◆ストーリーに関する問題 </B></span>

　何らかの理由でストーリーに関する問題が起きてやめてしまったケース。
　ただしストーリーの演出が長い、などは上の「時間の問題」の方に入れています。

●[×4]久々に再開しようと思ったらストーリー内容を忘れていたり
　　　　没入感が失われていて、続ける気が起きなかった。
●[×3]登場する主要人物への感情移入ができなかった。
●[×2]予測可能な展開で興味を引かれなかったのでやめた。
　　　　同じノリで同じ話題が続く場面があった。
●[×2]ストーリーが好みに合わなくてやめた。
●[×2]ラストダンジョン前でゲームをやめてしまった。
<span style="color: #2196f3"><span style="font-size: 80%">　→　筆者コメント：前述の「一気に進めないといけないのが面倒」以外の理由だと、
　「好きなゲームのストーリーを終わらせたくない」「話がこれ以上展開しないと悟って先が全部見えてやめた」
　「もう飽きかけていて、ラストダンジョンの高いハードルがやめるきっかけになった」
　などの理由が考えられそうです。</span></span>
●[×2]先の展開が恐くて進められなくなった
　（キャラクターの関係が永遠に壊れそうな展開が来た、
　　特定キャラが死ぬことが分かった、など）
●好きなキャラが物語上の都合で死んでしまったのでやめた。
●お気に入りのキャラが離脱したり、敵に寝返ったりして冷めてしまった。
●(不満ではなく好きすぎるせいで)物語を終わらせたくなくて
　ゲームから離れてそのまま放置してしまった。
●旧作のキャラが出るゲームで、シナリオやキャラクターへの解釈が不一致でやめた。
●[×3]続きが連載されていない。
<span style="color: #2196f3"><span style="font-size: 80%">　→　筆者コメント：主に私の『シルフェイド見聞録』が連載途中で終わってしまったことへのコメント。
　完遂させられなくて申し訳ありません！　生きてる間にリブートしたいなと考え中です。</span></span>
●生々しすぎる内容、現実味のあるストーリーがつらくてやめてしまった。
●起承転結の「転」が来るまでが長すぎてそこにたどりつく前にやめてしまった。
●文章が読みにくくてやめた。
●（注意書きには書いていない）地雷要素に当たってやめてしまった。
　※地雷要素：その人にとって極端に苦手な展開を指す
●想像していたよりも鬱展開/グロテスク描写/性描写がきつくてやめてしまった。
</TD></TR></TABLE>
<HR><TABLE><TR><TD align="left">
<span style="font-size:130%;"><B>◆次に何をすればいいか分からなくなった</B></span>

●[×5]ゲーム上で次にやるべきことや行く場所がわからなくなって行き詰まった。
　→　RPG、ADV、ノベルゲームだけでなく、画面クリック探索ゲームで
　　　クリックする場所が分からない、なども含む。
●[×2]時間を空けると次に何をするのか分からなくなってしまい、
　　　復帰せずやめてしまった。
●（RPGにおける船などの入手により）急に自由度が上がりすぎて
　どこへ行けばいいか分からなくなった。
●強くなる方法がよく分からなかった。
●技の仕様が分からない、情報も見つからない。
●最初からなんでもできるゲームで何をやっていいか分からない。
　→　チュートリアルがしっかりあって徐々にやれることを
　　　増やしていく形ならあり、との補足あり。
</TD></TR></TABLE>
<HR><TABLE><TR><TD align="left">
<span style="font-size:130%;"><B>◆別のゲームや趣味に興味が移った・生活の優先度の問題でやめた</B></span>

●[×4]好奇心が満足した。
　→　必勝法を見つけて以後はそれを続ける作業になると思った
　→　キャラ重視のゲームで後の展開がどうでもよくなった
　→　クラフト系ゲームでインフラを一通り作ったら満足した
　→　事前に気になっていた点の好奇心が一通り満たされてしまった。
　　　それ以上興味を引く部分がなかった。
●[×2]別の気になっていたゲームに触れて、元のゲームを遊ばなくなった。
●[×2]生活環境の変化で(一時的にでも)ゲームする習慣が取れなくなった。
　→　ここから前述の「再開したら何をすればよいのか分からなくなってて
　　　やめてしまう」につながるケースも多い模様。
●忙しくてそのゲームから離れているうちに再開する意欲がなくなった。
●ゲームが長すぎてフェードアウト（最後まで興味を持続できなかった）
</TD></TR></TABLE>
<HR><TABLE><TR><TD align="left">
<span style="font-size:130%;"><B>◆報酬の与え方の問題</B></span>

●[×3]労力を割いたのにガッカリする展開が続いた。
　→　単純に報酬がしょっぱい。
　→　遠回りしてまで取りに来た宝がハズレだった。
　→　手間のかかるミッションをしても報酬が少なくてやる気がなくなった。
●[×3]特定の報酬を得るための過程が長すぎてゲームごとあきらめた。
　→　敵から低確率でレアなアイテムを盗めるRPGで、一度しか
　　戦闘できないボスが登場するとついつい毎回面倒な盗みリセット作業を
　　してしまい、プレイテンポを損なってゲームごとやめてしまった。
　→　ミニゲームのパーフェクト賞品がゲーム上の強力なアイテムだったが、
　　パーフェクトを取るのが難しすぎて心が折れた。
　→　非常に時間がかかる割に面白くないプレイに報酬があってやめた。
●物語の進行で取り逃した貴重なアイテムが二度と取れなくなったことに気付いて
　ガッカリしてやめた。
</TD></TR></TABLE>
<HR><TABLE><TR><TD align="left">
<span style="font-size:130%;"><B>◆内容が自分に合わなくて中断（Not for meだった） </B></span>

　遊びの方向性やゲームバランスが自分の好みと合わないケース。

●[×5]ゲーム部分が面白く感じなかった。
　→　ゲーム部分が好みに合わなかった。
　→　どういう部分で楽しめばいいのか理解できなかった。
　→　そもそも面白く感じられる部分がなかった。
●戦闘の感覚が自分に合わなかった。
　→　難易度はつらくないが、もっとたくさんアクションしたいのに
　　　スタミナ制限が厳しくてストレスになった、といった好みの部分。
●少しのミスや管理の失敗でやられるゲームで続けられなかった。
　→　クリアできても注意力を消費しすぎるのがしんどい、など。
●(最初から見える)やり込み要素が多すぎて面倒そうでやる気がなくなってしまった。
</TD></TR></TABLE>
<HR><TABLE><TR><TD align="left">
<span style="font-size:130%;"><B>◆操作性・プレイアビリティの問題 </B></span>

　基本的なカメラワークやユーザーインターフェースが不便、遊びにくい、など。

●[×3]3Dゲームで酔って遊べなかった。
●操作が忙しすぎるアクションゲームで指が本当に疲れてしまい、挫折。
●ユーザーインターフェースが使いにくいストレスが、やめた要因の一つになった。
</TD></TR></TABLE>
<HR><TABLE><TR><TD align="left"><span style="font-size:130%;"><B>◆その他</B></span>

●[×2]単純にバグで進めなくなって終了した。
●バグの多さに嫌気が差してやめた。
●パソコンへの過剰な負荷が心配で遊べないゲームがあった。
●開発者の悪意を感じるワナの配置があって信用できなくなった。
●プレイ途中に攻略動画を見たらエンディングまで見てしまって
　自分でプレイする気がなくなった。
●シングルプレイRPGと書いてあったのにソーシャルゲームだったのでやめた。
●ソーシャルゲームなどでプレイ中の情報の出し方が悪くて、
　まだ遊んでない部分をネタバレされて冷めた。
</TD></TR></TABLE>

<HR>
という感じでした！

みなさまから集められるご意見としては
かなり網羅度が高く、最終チェックリストや
途中での見直し用チェックリストとしても使えそうな感じですね。
たくさんの具体的なご意見、誠にありがとうございます！


<HR>
<span style="font-size:large;"><B>◆念のための前提：ゲームを途中でやめるのは
遊び手にとって最適な行動！</B></span>

で、これは念のため申し上げておく前提の話です。
ゲームをクリアせず途中でやめることは「途中放棄」とみなされやすいのですが、
「ゲームの楽しいと感じる部分だけ味わって、面白くないところは捨てる」という、
すばらしい最適行動をしているとも言えます。

これこそある意味、遊び手側のもっともよい遊び方です！
貴重な時間を使っての「遊び」なんですから、
自分にとって楽しいと感じることだけに時間を費やすべきです！

という前提で今回は話を進めていきます！
開発側として「最後まで遊ばないとゆるさ～ん！」みたいなことはありません。
つまらないゲームを途中でやめて生活の質を上げられる人は立派です！
彼らの行動は、

<span style="font-size: 120%"><span style="color: #d50000"><B>【そもそも楽しみ重視のプレイヤーはクリアを目標としていない
ケースも多く、彼らは『ゲームクリア』をエサにして苦痛を
押しつけてくる行為には釣られない】</B></span></span>

と言い換えてもいいでしょう。

「とりあえずよく分からないけどゲームの最後らへんは敵を硬くしておけばいいや」
とか
「引き延ばしをしていて面白くない自覚があるけどボリュームは増やさないと……」
と思ってるゲーム開発者の方はいい機会ですからちょっと考えましょう！
私もゲーム開発がよく分かってないときは本当にそんな感じでしたので！

みんな通る道ですが、できれば問題を起こしやすい箇所を理解して、
あと一歩みんなで前進したいですよね。

<HR id="20240302C">
<span style="font-size:large;"><B>◆『最後まで』楽しく遊んでもらいたいので
これらの問題に対策したい！</B></span>

一方でゲーム開発側はできればゲームを最後まで遊んで欲しいので、
楽しさを『最後まで』たっぷりにしたい！　という願いがあります。

最後まで遊んでもらうにはどうすればいいかのヒントとして、
今回はいただいた内容を参考にしてみましょう。
単純に「やめた理由」の逆をするだけでも、
ちょっとはマシになるはずです！
（実際はこれだけでは全然足りませんし、
あなたの作品で取り入れる必要のない内容もあるでしょう！）

なお、今回は個人制作レベルの『自作ゲーム』開発視点で
話をしていくものとします。


<HR>
<span style="font-size:130%;"><B>●難しすぎる！　または簡単すぎる！対策</B></span>

ここでは「簡単すぎる」のはいったん置いておいて、
「難しすぎるゲームをどうにかする」に焦点を当てて考えます。
その「難しすぎる」状態から『総合的に生み出せる楽しさを最大化しよう』
という観点で見ると、いろいろ工夫しどころが出てきます。

<B>【難易度を変えられるようにする】</B>

「難易度が高すぎて挫折」への対策として誰でも思いつく難易度変更機能！
特に「ストーリー部分と戦闘部分」などといった
複数の「遊び」が入ったゲームに特におすすめの対応手段です。

たとえばストーリーや雰囲気が良いゲームだけど難易度が高いゲームの場合、
難易度を変えられるようにしておくと、ゲームが苦手で
『ストーリーだけでも楽しみたい人』への満足度が高まって
ゲームが与えられる『総合的な楽しさ』が上がります！

実際、硬派なバランスの市販RPGでも
「ストーリーだけ味わいたい人向け」という名目の難易度が
選べるようになってることは、最近増えている感じがします。

それと、「途中で難しすぎることに気付いて離脱」ということを防ぐために、
<B>『ゲームの途中でも難易度を下げられる』</B>という形にするのも重要です。
いまだに開始時にしか難易度設定できないゲームも意外と多いんですよ！

他にも、技術があるならプレイヤーが何度も失敗したら内部的に難易度を下げたり、
逆に余裕がありそうなら上げたりする「難易度自動調整機能」を作る案も考えられそうです。

ただ開発側としては難易度ごとにテストするのが大変なので、
作るのが面倒といえば面倒です！　
そういうときは次の手段を使うことも検討してみましょう。
ただ開発側としては難易度ごとにテストしなきゃいけないので、
面倒といえば面倒です！　
そういうときは次の手段を使うことも検討してみましょう。


<B>【(半)無敵モードを入れる】</B>

難易度は1つで、思い切って「無敵モード」を入れてしまう方法もあります。
ダメージそのものを受けなくなるとか、RPGなのにいくら死んでも
無制限にその場で復活して続けられる、といった方式です。

謎解きやストーリー要素が面白いゲームなら戦闘部分が
こういう形式でも十分に楽しんでもらえますし、
アクションゲームなどだと「攻撃をいくら受けても死なないモード」でも
ゲームしてる感は意外としっかり残ります。
『自分の耐久力がとんでもなく高くなる【半】無敵モード』でも
似た効果が期待できます。

たとえ無敵モードでもアクションゲームなら攻撃を当てる楽しみはあるので、
ゲームを永久に進められないほど不慣れな人にとっては十分な苦戦を味わいつつ、
先に進める満足感がけっこうちゃんと生まれます。
<span style="font-size: 80%">　（といってもヘタな無敵モードの仕組みだとただ死にながら突撃するゾンビアタックするだけになって気分が
よくない場合があるので、多少は何かしら追加の工夫も必要かもしれません。
そういう場合『HP20倍にして半無敵っぽくする』という方が
がんばって耐えようとしたりもできるので、ゲームやってる感が出せるかも？）</span>

こういう(半)無敵システム、私が開催するゲームコンテストの
『ウディコン』でも搭載されている高難易度ゲームが複数あり、
その結果、高難易度にもかかわらず『遊びやすさ』評価が上がって
総合的な満足度が増え、上位に食い込む作品も多いんですよ！
せっかくチューンした高難易度をできればそのままの味で楽しんで欲しいという
気持ちもあるでしょうに、こういう思い切りには頭が下がる思いです。

<span style="color: #2962ff"><span style="font-size: 80%">※一方で、こういう逃げ道はナシにする！　といった道をつらぬくのも全くアリでして、
選ばれた人だけに楽しんでもらうのもゲームの一つの形です。
人が多い市場で広くアピールできるなら『ガチ難易度』という売り文句の方が
かえって話題性が増す可能性もありますし、
『苦戦と栄光』を得たい人の満足感も上がります。</span></span>


<B>【パズルが解けなくても進めるようにしておく】</B>

ゲームによくある「パズル要素」ですが、それがクリアに必須だった場合、
解けないと永遠にメインシナリオが進まない状況が起きてしまいます。

そういうのを避けるため、できれば
<span style="color: #d50000"><B>『パズルは脇道として置いておき、解かなくても進めるようにする』
『パズルを他の手段でも突破できるようにしておく』（作るのは面倒！）</B></span>
という対策を行っておくと、パズルが苦手なプレイヤーの人にとても喜ばれます。

たとえば私のRPG『シルフェイド幻想譚』では、
とあるパズルに悩んでいるとゲーム側が判断した場合
（パズルに対しておこなった総手数が一定を超えたとき）、
アドバイザーから「ゲーム内時間を大きく消費して突破する手段」を
教えてくれるようになっており、実行すると壁を破壊して進むようになっています。

他にも、
「仲間にお金を払って、途中のやり方は分からないけど解いてもらう」
「番人にお金（ワイロ）やアイテムを渡してパズルを解いてないのに通してもらう」
など、ストーリー上、自然に実現できるアイデアもあるはずです。

<span style="font-size: 80%">　↓『シルフェイド幻想譚』でパズルを解かずに時間消費で突破する例（30秒あたりから）</span>
<blockquote class="twitter-tweet"><p lang="ja" dir="ltr">【シルフェイド幻想譚】 「ボタンを押すと隣のマスも色が変わるパズル」において時間さえかければ確実に突破できる方法をトーテムが教えてくれる『シルフェイド幻想譚』をよろしくお願いします！！→◆シル幻公式ページ <a class="double-link red"  target="_top" href="https://t.co/tILXL55eBT">https://t.co/tILXL55eBT</a> <a class="double-link red" hash&amp;ref_src=twsrc%5Etfw"" target="_top" href="https://twitter.com/hashtag/SILSEC?src=">#SILSEC</a><br>◆映像→ <a class="double-link red"  target="_top" href="https://t.co/eUN6iqX2zT">pic.twitter.com/eUN6iqX2zT</a></p>&mdash; SmokingWOLF@片道勇者2開発中/ゲーム開発者 (@WO_LF) <a class="double-link red"  target="_top" href="https://twitter.com/WO_LF/status/918087532654485504?ref_src=twsrc%5Etfw">October 11, 2017</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

あと、そういったコストをかけられない場合の最終手段として、
自作ゲームなら「ゲームの同梱テキストに『パズルが解けない人へ.txt』という
ヒント集や解答集を入れておく」という手もあります。

自作ゲームはプレイヤー数が少なくなりやすい都合上、
攻略法を共有されなくてパズル部分で進めなくなることが本当に多いため、
最後まで遊んで欲しいのならば、ないよりは絶対にあった方がいいと感じます。


<HR>
<span style="font-size:130%;"><B>●進行における単調さや作業感への対策をする</B></span>


一言で「単調さや作業感へ対策しろ」と言われてもなかなか難しいことですが、
工夫できそうな点は色々思いつきます。

<B>【プレイが変わる要素を徐々に解放していく】</B>

もはや言うまでもない話ですが、
「プレイが変化する要素を徐々に解放していく方式」は伝統的な方法ながら
ゲームが単調になってしまうのを防ぐのに非常に有効です！
少しずつ出せばいきなり覚えることがいっぱいになることも少ない！
「最初からやれることが多すぎてどうすればいいか分からない」
という問題にも同時に対策可能！

もし「ゲーム開始時から覚えなきゃいけないことがちょっと多いかなあ」と思ったら、
「進行と共に徐々に解放されていく」形に調整することでこの『新鮮さ』を
生み出しやすくなることでしょう。

<span style="color: #2962ff"><span style="font-size: 80%">※ちなみに、ただのコマンドRPGでもこういった工夫は可能です。
たとえば「最初はアクセサリ枠のアイテムを一切出さずにゲームを進めて、
途中からそのアクセサリ枠のアイテムが色々出てくる」といった形にすることでも、
ちょっとしたゲームの拡張感を出すことができます。

「装備してると新たな技が使えるアクセサリ」が途中から使えるようになるだけでも、
大きな戦術の幅が広がったと感じられるでしょう。
他にも、物語の途中で急に「ターンを消費せずに即時発動できる特殊スキルが使えるようになった」みたいな
展開もワクワクしますし、何なら
「回復魔法が存在しないと思ってた世界で、物語の途中から急に戦闘時の回復が使えるようになった」
みたいな普段は当たり前だったものがようやく使えるようになる展開でも、戦い方に変化が出せるはずです。
よく見れば市販のコマンドRPGでも、スキルを習得させる順番によってそういったプレイの変化を
生み出しているゲームも多いはずです。私もよく学んでいきたいですね。
</span></span>


<B>【進行と共に『遊び方』がちゃんと変わっているかチェックする】</B>

たとえばRPGで
「ちゃんとパラメーターが変わってるからゲームは変化してる！」
と開発者側は思っているとします。

確かに敵も味方も、能力値や技などが変わってダメージは増えてるけど、
実は「プレイ上はずっと同じコマンドや似た系統の技を入力し続けて
敵を倒してるだけで、実質的にやってることが最初からあまり変わってない」
という状況になっていることがたまにあります。

逆に、パラメーターが変わらなくても戦い方の幅が増えたり、
戦い方の基本戦法が変わったり、新たに増えた工夫を楽しんで使えるなら、
いくらかの新鮮さが生まれていると言えるでしょう。
回復と攻撃だけしか使わなかった状態から『状態異常』も駆使するようになったとか、
『補助魔法』で仲間を強化して戦うようになった、途中で新要素が加わって
『フィールド属性』を使った有利不利を狙う必要も出てきた、
などといった変化ですね。

こんな感じで
「プレイヤーの取っている『行動』や『判断』自体に変化が産まれているか」
に着目し、
<B><span style="color: #d50000">『ちゃんと進行と共に遊びの変化を出せているか』</span></B>を
はかることはとても重要です。

<span style="color: #d50000"><B>ダメージなどの数値は変わってるけど、冷静に考えたら
プレイヤーとしての行動がずっと変わってないゲーム</B></span>、
身近にもありませんか？

……という風に整理してみると、私もうまくできてないことが
たびたびある気がしてきました。がんばろう……。


<B>【「敵が硬すぎる問題」は開発上、割と無意識的に発生しやすい】</B>

「敵が硬くて面倒臭い！」というご意見が目立つくらいありました。
より詳細に言い換えると、「敵の攻撃パターンを完全に掴んだ、
あるいは確実に倒す方法が分かっている敵なのに、倒すまでの
必要打数が多すぎて無駄に時間がかかり、面白くない時間が長くなっている」
といった解釈ができると思います。

実はこれ、私の経験上、ゲーム開発者としてはかなりやりがちなことで、
「せっかく作った敵と戦う時間を長く楽しんで欲しい」という思いからか、
あるいは「テスト中は敵が少ない」からか、ついつい敵の耐久力を
高めにしてしまうのです。
逆に、耐久力が過剰に低めになるケースはかなり少ないと思います。

私もシューティングゲームを作ったときに最初に決めた敵のHPの値が高すぎて、
爽快感がないと感じて最終的に敵の耐久力を
最初の半分や1/3にするといったことが実際にありました。

ジャンルにもよりますが、敵が多いアクションゲームなら
ザコ敵は1～3回の敵の攻撃をかわしながら攻撃すれば勝てる、
くらいの硬さで十分でしょうし、戦闘が多いRPGなら
うまくコマンドを選べばザコ敵集団には1～3ターンで勝てる、
というくらいでいい気もします。

一方でボス戦は、コマンドRPGなら全攻撃パターンが2～3巡するくらいで
勝てるのが何となく1つの目安な気がします。
アクションのボスの方は、コンセプトに応じて硬さがまちまちな印象です。

開発に不慣れなほど敵を硬くしてしまいがちな印象があるので、
「作ったゲームの敵が無駄に硬くなってないか」という意識を
常に持っておくといい感じに仕上がるかもしれません。
<span style="font-size: 80%">（なお、戦闘が非常に少ないゲームなら敵がけっこう硬めでも文句が出にくいと思います。
全体を通して「敵との戦闘が無駄な時間だと感じるほど戦闘時間が長くなるのはよくない」というだけで！）</span>

なお、高難易度にすると敵が硬くなりすぎるという問題も挙がっていましたが、
難易度アップで増やす敵の耐久力は控えめにした方が遊びやすい感じがしています。
敵の攻撃力やAIの賢さが上がるだけでも「油断できない度合い」が増すので、
それだけで十分な場合もあるかもしれません。


<B>【レベルアップ作業など、単調になりやすい時間をスキップできるようにする】</B>

もう今のご時世、「レベルアップするためだけの作業」が発生するだけでも
評価が下がりそうな時代なので、そういった作業は高速で
スキップしやすい仕組みが求められる印象です。

たとえば新しめのRPG『ポケットモンスター』シリーズの
スカーレット・バイオレットでは、もはや経験値やアイテム稼ぎを
するためだけの戦闘はバトルシーンに入らずとも
サッと行うことが可能になっています！
（ポケモンを出して野良の敵に向かわせると戦闘パートにも入らず
1戦数秒で戦闘が終わる。ただし適切な属性や勝てる程度のレベルの
ポケモンを当てないと自ポケモンがダメージを受けて消耗する、
というゲーム性がある）

また、私の『片道勇者プラス』でも、ランダムなローグライクゲームゆえに
たまに「移動してるだけの時間」が長く発生しがちで退屈だったので、
「高速移動」機能を付けて退屈時間を減らす対応を取っていました。

みんな忙しくて時間あたりの満足度を上げなければいけないこのご時世、
こういった<span style="color: #d50000"><B>『退屈時間を短縮する』</B></span>仕組みはますます重要になってきそうです。


<HR>
<span style="font-size:130%;"><B>●時間が取れない人向けの対策をする</B></span>

こちらは今のご時世で特に重要な「時間が取れない人向け」の話！

<B>【ダッシュできるようにする/ワープできるようにする】</B>

「移動速度が遅くてやめた」という理由が目立つくらいにありました。
対策は簡単で、特定のボタンを押しっぱなしにすると移動速度が上げる
「ダッシュ機能」を搭載することや、あるいは
「ファストトラベル（ワープ機能）を可能にする」ことです。
こういった機能が喜ばれない状況はほぼありません。
見えている場所や行き方が分かっている場所に移動するだけの時間を
短縮できるなら、多くの人がそうしたいはずです。

あと移動速度の件よりは頻度が低いものの、
「メッセージ速度が遅い」のもやめた理由になったというコメントがありました。
ゆっくり出てるメッセージも追加でワンキー押すと
瞬間表示できるようにするなど、メッセージを高速化する機能も大切です。


<B>【リトライにかかる労力を下げる】</B>

『ゲームオーバー時、死んだ地点までもう一度到達するのに
時間がかかって面倒臭くなった』、
今回いただいたコメントではこういった内容が
思ったより少なかったんですが、実際
『リトライにかかる時間が長い』というのは、
かなりモチベーションの削り度合いが大きい問題だと感じます。

「ボス戦などにリトライするまでの時間はできる限り短くしよう！」
というのは、昨今ますます重要になっていている部分です！
負けたら復帰地点から1分以上走ってボスの場所に戻ってこなきゃいけなかったり、
再戦ごとにいちいちカットできないデモシーンがはさまったりするのは
もう過去の話にしたいところ！

特にこだわりがなければ、

<span style="color: #d50000"><B>『ボスに負けても【再戦する】を押したらすぐボス戦と再戦できる』

『ボス前にセーブがあり、かつデモシーンがスキップ可能』
(RPGなど成長要素があるゲームではこちらの方がレベルアップしに戻りやすいかも)

『難しいエリアはある程度細かくチェックポイントを区切る』</B></span>

といった形にしておくのが、ゲームを離脱されにくい一般的な形だと感じます。


<B>【いつでもゲームを中断できるようにする。】</B>

『いつでもセーブ可能にする』、あるいは
『中断機能を入れる（※一度読み込むと消えるセーブを作ってタイトルに戻る）』
というのは今の忙しい世の中において、意外に重要な機能です。

なぜなら、これらが充実していると短い時間でも気軽に
ゲームを再開できるようになるので、そのゲームに触れる回数が
どう考えても増えるからです！
ガッツリまとまった時間で一気に遊びきらないといけないゲームはもう辛い時代！

ゲーマー視点や開発者視点だと「ゲームに対する時間の制約が少ない」ことがあって
こういったことを忘れがちなので、自分もよく注意したい部分です。


<B>【短い時間で区切りをつけて遊べる1プレイの長さにする】</B>

これもほぼ上と同じ理由ですが、
『1ステージが短めで1プレイ中に終われるようにする』のも重要です。

特にシミュレーションゲーム（以下SLG）だと、
時間が空くとステージ中の文脈を忘れてしまい、再開時に
「次のターン何するんだっけ……」となってしまいやすい問題が起きます。

ゆえに1ステージの長さを「1プレイで区切れる長さ」に調整しておくのは重要です。
目安は1ステージ30分ちょっとくらいでしょうか。
これまでSLG遊ぶときはその辺をあまり意識してなかったので、
今後注意して見ていきたいですね。

何ならSLGでも、1ステージ中に一定のスパンで
「落ち着けるタイミング」を用意するというのも一つの手かもしれません。
15分くらい遊んでステージの半分まで進んだ時点で、
とりあえず前半の敵の突撃が落ち着いて、
こちらが進まないと敵も動かない状態になる
（のでプレイの文脈を忘れててもいくらか安全になる）、
みたいな形にするわけですね。


<B>【時間を空けても再開しやすい仕組みを作る】</B>

時間を空けてもいろいろ思い出せる方法といえば、
復帰するとそれまでのストーリーの「あらすじ」や「次の目標」が出る工夫が
挙げられます。これはとても良い仕組みでした！

私がその機能を最近体験したのは『ドラゴンクエスト11』だったんですが、
ロード時に毎回、直近のストーリーがあらすじとして表示されるように
なっていたのです。
これなら次にやることをすぐ思い出せるので、いつ再開しても安心です！
何なら全部のRPGに欲しい機能！

ついでに言うと戦闘面でも、『ドラゴンクエスト』シリーズは
「オート戦闘」がかなり優秀なため、ゲームの遊び方や基本を忘れていても
オートで任せられるので復帰しやすく、そういう意味でも時間のない人への
配慮に優れているゲームだと感じました。
おおざっぱな味方の役割を覚えてパーティー編成だけしっかりやれれば、
たまにしかプレイしない人でも十分に戦える！
こういう仕組みは本当に助かります。


<HR>
<span style="font-size:130%;"><B>●ストーリー面で工夫する</B></span>

こちらはストーリー面の問題についての対策です。
「お話が予測可能な展開だった」などの問題は物語の作り方の教本やコツを
読んでいただくとして、ゲーム的にカバーできる部分や
ワンポイントでマシにできる話をしていきます。

<B>【久々にやったらストーリー内容を忘れている問題に対して】</B>

さっきも言いましたがゲーム再開時のストーリーの「あらすじ」機能は
物語の復習にとても有用です！
全ての話の復習でなくとも、
「大目標」「今やろうとしていること」
「次にやるべきこと」の3つが出てるだけでも、
そこまでの流れを思い出すにあたって大きな効果を発揮するでしょう。

たとえば、

<span style="color: #d50000"><B>「全人類を洗脳しようとする魔王を倒す旅を続ける<主人公名>たち（※大目標）。
魔王の弱点を知る予言の少女の病を助けるため（※やろうとしてること）、
薬草を採りに行ったものの関所で足止めされてしまった勇者たちは、
関所の門番が要求する景品の『大人の絵本』を手に入れるべく、
カジノへ向かうのだった……（※次にやるべきこと）」</B></span>

くらいの情報量でも、物語を思い出すためのフックがかなりできるはずです。

問題は、定期的にこの「あらすじ」を更新するのが
開発者的にかなり大変なことですが！
また、自由度の高いゲームだと「あらすじ」の文を作るのが
難しくなってしまうという問題もあります。
そういう場合は、「大目標のいくつまで攻略して、残りはこれだよ」という形の
文章にするのが一つの妥協案でしょうか。


<B>【好きなキャラが死んでやる気なくなる問題に対して】</B>

好きなキャラが死んでやる気なくなる問題、
「人気の出そうなキャラはそもそも死なさない」か、
「（すごい面倒だけど）生存ルートも作る」
というのは誰でも一瞬で思いつく案です。

特に「キャラクターが死ぬ可能性」を描きたい場合、
ある程度プレイヤーが達成しやすい「生存ルート」があるだけでも
プレイヤーの人は救われるので、もし都合が合うなら
ぜひ生存ルートも作りましょう！　ゲームですし！

でもその後の分岐のことなどを考え始めると
すごい面倒なんですよね、生存ルート！
なので市販ゲームでも、
<B>「生存させたけど、その後は(いない可能性があるキャラなので)
そこには一応いるけど全然しゃべらなくなる」</B>
といったことが割と起きがちです。

ですが、たとえそういう形であっても「生存ルート」を
作る価値は十分にあると思います。
プレイヤー視点だと「生かせた満足感」が一定以上生まれますし、
どこかでそのキャラの次のセリフが出ることを期待して
やっぱりゲームを続けてしまいやすいですからね。
（一方で、死なせたルートを通った後に生かすルートがあることに
気付いてしまった人は変わらず救済されません）


<B>【会話やデモシーンが長い問題に対して】</B>

こちらは「会話やデモシーンが長くてしんどい！」という内容に対してのお話です。
一つの対策として、
<B><span style="color: #d50000">『強制的に見せられる部分の情報は重要な部分だけにしぼってテンポを上げる』</span></B>
という手があります。
メイン会話におまけ的な内容も全部入れてしまうと、
くどく感じやすくなりますからね！

一方で、「そういったおまけの内容も見たいよ！」という人もいます。
そこで私がおすすめする方法が、
強制シーンから「おまけ的な内容」だけを「分離」しておく方法です。

たとえば私の『シルフェイド幻想譚』というゲームでは開発中、
オープニングを短くするために
<span style="color: #d50000"><B>「オープニングに入れたかった『サブキャラのシーン』を省いて最初の街の住人から
任意で聞けるようにする形に変更し、オープニングは
『ほぼ必要最小限のゲーム的情報』だけ与えて始める形にした」</B></span>
という対策をとりました。

こうしておくことで、ほぼゲーム部分にしか興味のない人にも、
ストーリーにも興味がある人に対しても、両方とも満足度を高めることができます。
ゲーム部分にしか興味のない人はサクサク進んで、
お話に興味がある人には任意で話せる村人にも追加で話してもらって
満足度を上げていくわけですね！

他にも、どこでも使える「相談」コマンドというのもあり、
仲間やアドバイザーと会話して会話成分を補給できるようになっていました。

<B><span style="color: #d50000">「『強制的に発生するシーン』に入れていい情報は本当に大事な内容だけにしぼる！　
それ以外は他の場所に移動させて任意で見られるようにする！」</span></B>
としておくのは、基本でありながらとてもおすすめの考えです。
でも私も実現できてないことが多々ある、地味に難しい部分でもあります。


<B>【ラストダンジョン前でやめてしまう問題に対して】</B>

『ラストダンジョンの直前でやめてしまう』というのは
私のSNS範囲内の間でもたまに聞く話です。
理由はラストダンジョンが面倒だとか、ゲームを終わらせたくないなど、
色々ありそうです。

かくいう私もゲーム終盤まで来ると、
「長くて途中で帰れなさそうな迷宮を探索したい意欲」って
正直あんまりない気がするんですよね！

そこでゲーム的な一つの対策として、
いっそのこと最後のダンジョンを長くしがちな風潮をひと味変えて、
「最後の場へ行くといきなりラスボス連戦が始まる」くらいにした方が
まだいくらかやめどきが減らせるかもしれません。

その例として私が好きなのは『ポケットモンスター』シリーズ！
ポケモンの（ひとまずの）最終戦の舞台はダンジョンじゃなくて
チャンピオンリーグ戦の会場で、
<B><span style="color: #d50000">「入るとラスボス含む強敵との連戦がすぐ始まる」</span></B>
という形になっており、面倒くささもなく、そこまでのプレイの勢いで
挑戦できてしまう感触がありました。
これはプレイヤーが体験したいところだけ楽しめて、すばらしい形だと感じます。

また、この形だと
「散々長いダンジョンをこえてラスボスに勝てなかったらどうしよう」
という不安も「リトライしやすさ」によってカバーできます。
そういった面でストレスを低減させられるラストステージの作り方、
一度考えてみる価値がありそうです。

<HR>
<span style="font-size:130%;"><B>●次に何をすればいいか分からなくなった人への対策をする</B></span>

ここでは時間を空けたりしてやることが分からなくなった人や、
急に行き先が広がってしまって何をすればいいか分からなくなる状況などへの
対策についていくつか述べます。

<B>【「クエスト一覧」機能の搭載】</B>

とりあえず次にやることが分かる仕組みといえば
『クエスト一覧』機能の搭載ですよ！　これはすばらしい発明です！
なんなら時間を空けなくても「次に何をすべきなのか」を
たくさん覚えられない私にはありがたい機能です！

なおゲームに詳しい人には説明するまでもないと思いますが、
『クエスト一覧』とは「今かかえている課題(仕事)」が一覧されているリストで、
たいていのゲームでは、どこでも開けるメニュー画面から見ることができます。
攻略済みのものは表のリストから消えるので、
「いま進行中の課題」だけに注目しやすいようになっていることが多いです。


<B>【「あらすじ」機能の搭載】</B>

もう言及するのは3回目ですが、ロード時にそれまでの物語と
次にやるべき内容が「あらすじ」として表示されるのは、
時間を空けてやることを忘れてしまった人にとって非常に助かる機能です。


<B>【急に行ける場所が開けたときはおすすめの行き先を一つ教える】</B>

オープンワールドゲームのように全方向に歩いて行けるゲームだと、
どこへ行けば分からなくなることがたまにあります。
そうでなくとも、RPGで「船」などを入手すると、
急に海全体を移動できるようになってしまい、そこから
東西南北どこへでも行けるようになっている場合に
どこへ行けばいいか分からなくなってしまいがちです。

こういう場合は
「自由に移動できるようになった時点で
おすすめの行き先を1地点だけでもいいので出す」か、
「船の場合、水辺を道なりに行くともう最初の
おすすめ場所に着いてしまうマップにする」
のが最近のトレンドかもしれません。
行き先が広がってどこにでも行けるようになったとしても、
次の行き先のおすすめくらいは教えてしまった方が
ゲームの離脱率が下がる印象です。

というのも、次のおすすめの行き先が分からない中で
色んな場所を総当たりしていく行為って
「敵が強すぎる」とか「いま行っても意味がない」場所が多かったりして
移動時間が徒労に終わるケースが予想されるので、かなりストレスが高いんですよ！

そういうわけで今のご時世では、自由に移動できるようになった際は、
次の1個くらいはおすすめの行き先を出し続けてもいいのでは、と思っています。


<B>【強くなる方法が分からない問題：何度も伝えるか、目立たせる】</B>

最初の説明を理解できなかったりして強くなる方法が分からなくなる問題！
「そういうことが起きにくいようチュートリアルはしっかり作りましょう！」
としか言えないのですが、重要なことなら、基本を教え直してくれるキャラを
たびたび出したりするのも有効です。
「2つめの街にも強化方法を復習してくれる村人がいる」とかですね。

あるいは説明を理解してない人でも分かるよう、
明らかに育成機能にアクセスしてない場合や、あるいは
成長ポイントを手に入れるたびにメニューに赤い(！)とか出して
育成機能までのアクセスを目立つようにするのもよさそうです。

もしその育成画面に達しても理解が困難なシステムだった場合は、
基本システムをもっと簡略化することを考えた方がいいかもしれません。


またこれと似た話で、
<B><span style="color: #d50000">「戦闘のテクニックを最初にまとめて一気に教えられたせいで、
いくつかの重要な手段に気付かずにプレイしてしまう状態」</span></B>
になることもたまにあります。

特にRPGだと、「ダメージを増やすための一部の機能」を使わなくても
苦戦しながらある程度まで進めてしまう場合が多く、たまにこういう事故が起きます。
「特定のテクニックが明らかにずっと使われていない場合は、
システムメニュー的にまた教えてあげる」など、
そういった配慮も必要かもしれません。


<HR>
<span style="font-size:130%;"><B>●報酬の与え方の問題を考える</B></span>

「報酬がしょっぱくてやる気が出ない！」といったコメントに始まり、
報酬の与え方一つ取ってもいろいろな注意すべき点がありそうでした。

<B>【労力に応じた報酬は必ず渡す】</B>

基本的に、「プレイヤーの払った労力」に対して
報われたと思える報酬分は『必ず』出すのが、開発側としておすすめです！

リアルだとがんばっても報われないこともありますが、
ゲームなら迷宮の行き止まりに行ったらなぜか必ず宝箱が落ちててもいいんです！
「遠回りしてがんばってたどり着いた宝箱が空」なんていうのはもってのほかです！　
次からは遠回りで回収できそうな宝箱を見てもやる気が出なくなったり、
疑心暗鬼になってしまい、プレイヤーの気持ちをアゲるための『宝箱』の機能を
半分失ってしまいます。
（そういう疑心暗鬼になる体験ばかりさせる目的のゲームならいいですけれども）

一方で、「プレイヤーの労力に対しての報酬」の一例として、
たとえば私の『片道勇者』というローグライクRPGでは、
ゲーム終了時にほぼプレイ時間（＝踏破した距離）に比例した量の
「要素アンロック用のポイント」をもらえるようにしています。

「冒険に成功」していればさらにそれが一定量増えますが、
仮にゲームオーバーになっていても
「成功時からちょっと減ったくらいのポイント」がもらえるようになってます。
プレイした時間分くらいは、何か報われたり、積み上げられて欲しいですよね。


<B>【『難しすぎるプレイ』『面白くないプレイ』には大きな報酬を付けない。】</B>

「明らかにいい報酬があるのに難しすぎてクリアが困難」という状態は
プレイヤーの人にとってすごく苦痛です。
開発側はついやってしまいがちですが、
『難しすぎるプレイ』や『面白くないプレイ』に大きな報酬を付けると、
プレイヤーは地獄のような苦しみを味わいながら挑戦し続け、
その途中で心が折れたり、ゲームそのものが面白くなくなってしまったりします。

なので報酬を用意する形としては、
<span style="color: #d50000"><B>「達成しやすいところまでやれば主な報酬が全て出る」
「超難しい完全クリアの報酬は、勲章や実績・記録がもらえるだけ」</B></span>
くらいにするのが、多くの人の感情を納得させやすい、
良い落としどころかもしれないと最近思うようになっています。

よく配慮されたスマホアプリなどはそんな感じになっていて、たとえば以下のように、

<span style="color: #d50000"><B>・中級難易度までのミッションを達成すると
大きな報酬である「ガチャ石」がけっこうもらえる。
・クリアできる人が少ない上級難易度では、ガチャ石の報酬ナシで、
ちょっとしたお金や素材だけがもらえる。</B></span>

というような形になっていることがあり、上級難易度をクリアできない
多くの人に対しても納得感が強くなる仕組みが作られています。

また『ポケットモンスター』なども、図鑑を全種類集めるという
（人によっては面白さと苦痛の境界をこえそうな）
かなり大変なミッションが毎回ありますが、物語的には
そこまで重視されていないので、
割と気軽に無視できるようになっている気がします。


<B>【うっかり背景用のツボやタルにアイテムを入れない。】</B>

これは今回の話題になかったのですが、
モチベーションやプレイ時間を地味に削る要素になってしまうので
挙げさせていただきました。最近SNSでも話題になってましたね。

たとえば、何もなさそうな壁に【たった1回でも】隠し通路があったり、
大量に置かれている破壊可能なツボやタル
（特に何かがキラキラしているわけでもない）
の中に【1回でも】アイテムが入ってたりすると、
プレイヤーは面倒臭いと思っていても以後、
隠し通路やアイテムを見つけられるかもしれないという期待が生まれてしまい、
<B><span style="color: #d50000">【全ての壁や破壊可能なツボやタルを調べなければならなくなってしまいます】</span></B>。

ゲーム開発者視点だと、アクションゲームで壊せる
「無数にあるほぼ背景用のツボ」にもサービス精神でたまに何か
入れたくなる気持ちが出てしまうのですが、背景用なら背景用で、
「背景っぽいのを壊しても絶対に1つもアイテムが出てこないよ」
というルールが統一されている方が、
プレイヤー的に全部調べなくて済むのでありがたいのです。

<HR>
<span style="font-size:130%;"><B>●内容が自分に合わなくて中断、への対策</B></span>

「内容が合わない！」ことへの対策、これはもう『自作ゲーム派』開発者的には、
最初からゲームに触れないでいてもらうのが一番シンプルな策に感じます。
合わない内容を省いても問題ないほどの遊びや配慮をつぎ込めるならいいですが、
自作ゲームはたいてい一点特化型のゲームを作るだけで
精一杯なことが多いですからね。

それでも、いくらかの工夫で遊ぶ人を増やすことは可能です。


<B>【ゲームの紹介ページなどで、好みが分かれる内容も説明しておく】</B>

ゲームの紹介ページに、ゲームの詳しい方向性や好みが分かれそうな部分を
最初に書いておいて、苦手な人は避けてもらうのは手っ取り早い手段です。

特に、「好みが分かれそうな描写」や「好き嫌いがあるシステム」は
紹介ページに先に書いておいた方が、合わない人はゲームに触れる前に避けられるし、
好きな人はより積極的にプレイしてくれるようになるのでとても有用です。

実際のところ、これらを詳しく説明することで
総プレイ数が目に見えて減ることはたぶんそんなにありません。
よほどマニアックすぎる要素でない限り、自作ゲームの世界だと
減った人と増えた人を合わせるとたぶん±0か、
むしろ理解度が上がってプラスになることの方が多い印象です。
プレイヤー数はあまり変わらず、プレイ層として
「『好みに合いそうなプレイヤーの割合』だけ増やせる」
と思ったらお得に感じませんか？

そうやって好き嫌いを含めた正しい紹介を書いておくのは
「レビュー付きのストア」でも特に重要です。
プレイ途中で「合わない要素」に気付いた人は
ネガティブレビューを付けてしまいやすいので、
そうなると作り手にも遊び手にも不幸な結末になってしまいます。

たとえば私のゲーム『シルフェイド幻想譚』は
「ゲーム内で日数制限があり、日数と共に刻々と状況が変わるRPGです」
という点をアピールしているのですが、その結果
「急いで遊ばなきゃいけないRPGは遊びたくない！」という人には
紹介文を見た時点で手に取られなかった、という話もちゃんと耳にしており、
これは「紹介がうまくいったケース」としています。

「自分に合わない要素」がプレイ途中で出てくる前に、
そもそも最初から触らないようにしてあげるのも大事な配慮です。


<B>【苦手になりやすい要素を減らしてプレイできるようにする】</B>

これは余力のある開発者向けの配慮ですが、
表現の面で好みが分かれそうな部分を入れる際は、

<B>●結構ホラーなゲームだけどホラー要素を薄めにするオプションを入れておく。

●「リアルな虫が出たらプレイをやめる！」という人もいるかもしれないので、
「虫をモザイクやネズミに変えられるオプション」を入れておく。</B>

といった配慮も入れられると、表現まわりも人に合わせて適度に調整されて、
遊べる人がより増える可能性があります。
前述の「難易度調整」と同じで、これは「表現の度合いの調整機能」ですね。

難易度のところで言った
<B>「高難易度のせいで遊べない人も、そこをゆるくして
ストーリーだけでも遊べると総合の楽しみは増えるよ！」</B>
の逆で、
<B>「本来の演出がキツい人も、演出をゆるくして
ゲーム部分だけでも遊べると総合的には楽しみが増えるよ！」</B>
をしているわけですね。

ただ、表現部分の調整は難易度調整みたいに
数値を変えるコストだけでは済まないので、ちょっと大変になるかもしれません。
それでもゲームにおいては、幅広いプレイヤーを取り入れようとする開発者努力って
意外と報われますので、やる価値は一定以上あると思います。

ウディコンのゲームでも
「ホラー演出を弱めにできるオプション」が付いたゲームが
けっこう届いておりまして、少しでも遊んでもらう人を増やす努力を感じて
「いい配慮だなー！」と思ったことがあります。


<HR>
<span style="font-size:large;"><B>◆最後に</B></span>

という感じで、いただいた「途中でゲームをやめてしまう理由」に対して
ちょっとした対策を考えてみました。
非常に基本的なことも多いとはいえ、
やっておくとよさそうなことは色々浮かびますね。

今回挙がった理由の多くは、
ゲーム開発者側のエゴでやらかしがちなことだったり、
配慮不足で起きることだったり、
知識さえあれば回避できたりすることも含まれています。
私がここで挙げていない有用な対策もいっぱいあるでしょう。

今回のリストは、開発への気持ちが
「俺の見せたいものを元の味のまま見てくれー！」から
「皆さんが楽しめる面白さの総合量を増やしたい！」になっている人には
参考になる部分も多いはずです。

面白いゲームでもほんの一部の問題のせいでプレイヤー側の熱が
冷めてしまうのはもったいないので、
『自信のあるゲームができた！』と思ったときこそ、
隙なく最後まで楽しんでもらえるよう念には念を込めて、
こういったリストを振り返ってみるのもいいかもしれません。

私も開発途中でたびたびリストを振り返って、
ゲームを途中でやめてしまった人たちのこれらの想いが
いつも陰にあることを思い返そうと思います。

このたびは参考になる貴重なご意見の数々、
本当にありがとうございました！</CENTER>
-----
EXTENDED BODY:

-----
--------
TITLE: ウディタVer3.300でピクチャのZオーダー機能搭載！
CATEGORY: ウディタ
DATE: 2024-03-16 10:08:31
-----
BODY:
<CENTER>今回はウディタ（WOLF RPGエディター）の新機能紹介！
これはちょっとした革命ですよ！

なんとVer3.300でウディタに
『ピクチャのZオーダー機能』が搭載されました！
コマンドは<B>「エフェクト」コマンド内の「ピクチャエフェクト」内</B>にあります！

「Zオーダー」というのは画像を表示する上下関係を指定するための順序設定で、
数値が大きいほどそのピクチャが前面に表示されるようになります。

分かる人にはここまでの紹介で十分だと思いますので、
必要な方はよければ最新版ウディタをDLしにいってください！

<a data-primary="https://silversecond.com/WolfRPGEditor/" class="double-link blue" target="_blank" href="https://smokingwolf.github.io/tool_wolf_rpg_editor/"><span style="font-size: 150%"><B>【WOLF RPGエディター公式ページへ】</B></span></a>


<HR><span style="font-size:large;"><B>◆ウディタ新機能　Zオーダーの具体例</B></span><HR>
そんなわけで今回はピクチャの「Zオーダー」の使い方の具体例をご紹介します！

まずは動画でご紹介！　今回の記事はこの動画の内容と
ちょっとしたオマケを文章で紹介してる感じなので、
この動画だけで終わっても十分です！
<iframe width="500" height="300" src="https://www.youtube.com/embed/YV2TZvAdFtw?si=ZW5Aep9tFAcz8kyw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

<HR>
<span style="font-size:130%;"><B>【Zオーダーの基本】</B></span>

一番シンプルなZオーダーの例を挙げると以下のようになります。

ピクチャを表示した直後の「Zオーダー」は全部「0」です。
あるピクチャのZオーダーを「1」に変えると、
Zオーダー「0」の全てのピクチャより上に表示されます。

逆に「－1」にするとZオーダー「0」の
全てのピクチャより背面に表示されるようになります。

<B><span style="font-size: 80%">↓真ん中のウルファールのZオーダーを1にすると、
ピクチャ番号で負けてても前面表示に！</span></B>
<img src="../../image/2024/20240316A.jpg" border="1" style="max-width:520px;" loading="lazy" height="209">

今回のZオーダー機能は
「こんな感じでピクチャ表示優先度の変更ができるようになったよー」
というだけなんですが、地味な機能でも便利な利用法がいろいろあります！　

<HR>
<span style="font-size:130%;"><B>【Zオーダーを使えば見下ろし型のゲームで
キャラ全員をピクチャで出しても自然な前後関係が簡単に実現可能！】</B></span>

以下の左の画像は、ピクチャ番号0～77にそれぞれ異なるキャラクターのピクチャを
78枚ほど出した画面です！

その各ピクチャの「Zオーダー」として
「そのピクチャの画面Y座標」をセットするだけで、右の画像のような
こんな自然な前後関係が表現できます！　後ろにあるほど背面表示！
（Zオーダーが大きいほど前面に表示されるので、
単純に画面Y座標を入れるだけで簡単にこうすることができます）
　↓
<img src="../../image/2024/20240316.png" loading="lazy" border="1" style="max-width:520px;" height="192">

これまでは、こういったことをやるのにVer3で実装された
「ピクチャのID移動」を毎フレームいっぱい使わないといけなかったため
「処理負荷」も「作成の手間」も大きくなっていましたが、
今後はZオーダーでラクに作れるようになります！

（なおウディタVer2台まで戻ると、あまりにめんどくさすぎて
こういうのをやれる人はごく一部だったでしょう。
それで3D演出を作ってた方には頭が下がります！）


<HR>
<span style="font-size:130%;"><B>【Zオーダーを使えば選んだカードを最前面に出すのも簡単！】</B></span>

そして利用法2つめ！
Zオーダーについて理解できた人ならもはや言うまでもないでしょうけれど、
以下の画面のように、重なってるカードのうち「選択したカード」だけ
最前面に表示することも簡単に実現できます！
<img src="../../image/2024/20240316B.gif" loading="lazy" border="1" style="max-width:520px;" lazy height="268">

これは私の開発中の『片道勇者2』の映像ですが、
元は「ピクチャのコピー」処理で最前面表示を実現していました。

ただ、コピーだと別IDのピクチャができちゃって
そちら専用の処理を作らなきゃいけなくて
処理の統一性を維持しにくかったのです。

新バージョンからは、こういうところでZオーダーを有効に利用して
処理を簡単化できています！
今後も新しいゲームを作ることがあったら
もっといっぱい有効利用していきたいですね！

<HR>
<span style="font-size:130%;"><B>【Zオーダーの裏話！】</B></span>

さて、ここからはZオーダー実装に関しての裏話です！

<span style="font-size: 150%"><B>●負荷の話　Zオーダー使用時の重さはどうなる？</B></span>
負荷の話ですが、Zオーダーを使うと以下の2点で処理負荷が増加します。

<span style="color: #d50000"><B>●1.「Zオーダーの変更」をした、あるいは「Zオーダー使用時にピクチャが増減した」フレームの終わりのみ、
「Zオーダーによるピクチャの表示優先度の再計算」が行われて
「イベント処理時間」が一瞬増える。

●2.Zオーダー使用時はピクチャ表示の処理が従来のものと違う処理に
切り替わるので以後の常時「描画時間」もちょっと増える。</B></span>
<span style="font-size: 80%">　といっても、私の環境ではピクチャを2000枚くらい出してZオーダーを設定しても
描画時間が常時【0.2～0.3ms】増えるくらいでしたので、
PC上ではそこまで負担にはならないと思います
（合計描画時間が16ms以上になると処理落ちし始めますが、
0.3msかかってもそのうちの2%の負荷なのでさほど問題にならないという意味）</span>

なお、「ピクチャが増減せずZオーダーもいじられなかったフレーム」には
無駄な「表示優先度の再計算」はしていないので、従来と同じく
列の前から順にピクチャを出してるだけの「2」の切り替わり後処理も
原理的には従来と全く同じ負荷になると思ったんですが、
ほんのわずかな造りの違いによってうまく最適化できなかったのか
負荷が増えてしまっているようです。
こういうのがあるからプログラミング難しい！

なお、全ピクチャのZオーダーを「0」に戻すと描画処理が旧処理に戻るので、
ちょっとだけ「描画時間」を小さくできると思います。




<span style="font-size: 150%"><B>●Zオーダー変更を1フレーム中にいくらやっても負荷はほぼ一緒！</B></span>
ピクチャエフェクトの「Zオーダーの変更」を1フレーム中に
いくらやっても「Zオーダーによるピクチャの表示優先度の再計算」が
行われるのはフレーム終わりに1回だけなので、
そういう意味の負荷は「一定」です！

なので、「ピクチャのID移動・コピー」を使って前後関係を
調整していたときのように使用回数の面で遠慮される必要はありません！
毎フレーム2000個のピクチャにZオーダーを指定し直しても
それだけならほぼ問題ない負荷みたいなので、バンバン使ってください。




<span style="font-size: 150%"><B>●全体の処理は思ったより軽くできました！＆
旧ゲームには影響がないようにしました</B></span>
Zオーダーの処理負荷の軽減はいろいろがんばりまして、
「ピクチャのIDコピー/移動」しまくるよりも
かなり少ない処理負荷で実装できました！　

ピクチャ全てのZオーダーを毎フレーム変え続けても、
「ピクチャのコピー・移動」しまくって表示の前後関係を
整理するのに比べて半分以下の負荷になるんじゃないでしょうか
（3D演出をされている方の一意見だと、93％の処理数削減と
約8割の処理時間削減に成功してたっぽいコメントもいただきました）

ですが、それでもさっき言った通り私が把握してない負荷も増えてしまっているので、
ゲームエンジン作りって大変だなと思います。
こんな風に色んな機能を足していったら、
なぜかだんだんと重くなっていくんですよ！

それもあって、今回は「Zオーダーを一切使わない場合」は
そのまま以前の軽い描画処理を使うような切り替え処理にしてあります。
少しでも軽くしたい人は最初からピクチャ番号をうまくセットして、
Zオーダーを一切使わないようにすれば負荷も以前通りです！

というよりは、
<B><span style="color: #d50000">『旧ゲームは最新のGame.exeを使っても新機能による負荷増大の影響を受けないのでご安心を！』</span></B>
といったほうが適切かもしれません。
今回の新機能はほぼ無視できるほどの負荷とは言え、
新機能を使わない人まで追加の負荷増大に巻き込むのはかわいそうですしね！

新機能を搭載する際は、構造的に実現できないケースは除いて、
機能を使わない人にはなるべく負荷が上がらないようにする工夫も
可能な限り考えていきたいと思います。
ビジネスノートパソコンでもバリバリ動く軽量さがウディタ3の魅力なので！

<HR>
ということで以上、Zオーダーについてのお話でした！

「ザツにピクチャIDを使って最後にZオーダーで表示順を変える」みたいな
扱い方もできますので、自作システムを作っておられる方の助けになればと思います！
「Zオーダーの変更」処理、使える人はぜひご利用ください！</CENTER>
-----
EXTENDED BODY:

-----
--------
TITLE: ウディタのセキュリティ更新作業中！
CATEGORY: ウディタ
DATE: 2024-03-30 09:57:27
-----
BODY:
<CENTER><HR><span style="font-size:large;"><B>◆ウディタのセキュリティ強化作業！</B></span><HR>
この2週間はウディタのセキュリティ周りの強化作業をやっていました。
でもまだ最新版ウディタには入っていません！
暗号化まわりの検証が大変でもう少しかかりそうです！

ちなみにセキュリティ強化といっても、外から見える使い勝手は
ほぼこれまで通りで、ファイル周りやプロ版のセキュリティが
従来より強化されるのが主だと思います。

実装されても、普通にゲームに触れるユーザーの方には
おそらくほとんど影響はありませんし、ゲーム開発者の方も
いつも通りにしてくださっていれば問題ないと思います。


<span style="font-size: 80%"><B>↓セキュリティ対策初心者が体験したこと4コママンガ</B></span>
<img src="../../image/2024/20240330.jpg" border="1" style="max-width:500px;" loading="lazy" height="689">
<span style="font-size: 80%"><B>ちなみにここで述べられている問題への対策もちゃんとあってセキュリティは奥が深いです。</B></span>


<HR>
<span style="font-size:130%;"><B>【ウディタ　どこのセキュリティが上がるの？】</B></span>

今回はファイル周りの解析難易度が前より上がるというのが大きな点です。
とか言ってると秒で解析されたりすることもあるから困ります。
的確な防御方法が分からないと何やっても一瞬で解析されちゃうんですよ！

そうでなくても、セキュリティにおいて究極的なことを言うと、
ローカルファイルとして存在するEXEは達人が一個一個処理を
ほどいていくと全ての処理が解析されてしまったり、
途中のデータの中味も見られるので、完全な防衛というのはできません。
たとえばEditor側の暗号化処理を1個ずつ解析していったら、
何をどうしてるかが全部見えちゃいますし！

他にも、PC上なら通常では見られないあんな情報や
こんな情報を見ることだって簡単ですし、もっとひどいこともできます。
できる人は何でも破れますが、「手間がかかるからやらない」とか
「やる価値が薄いからやらない」というだけで
見逃されていることが多いのがこの世界なのです。

しかしそれでも、これまでパズルゲーム程度の解析難易度だったのが、
私の脳内当てクイズになる程度には解析が難しくなるはずです。

ひとまずは「初級の攻撃テクニックは一通りふさがれてるかもなー、
調べるのちょっと面倒臭そう」と思うくらいのレベルにするのが今回の目標です。
まだ抜けてたら今後も随時強化されていきます。
<HR>
<span style="font-size:130%;"><B>【ウディタ利用者側としては何が変わるの？　起動時の変化】</B></span>

まだ公開はされていませんが、
最新版予定のVer3.310の暗号化処理を使うと、Game.exe起動時に
全ての.wolfファイル（暗号化フォルダ）を読み込んでから起動するようになります！

前々から軽量な.wolfファイルはそうするようにしてましたが、
今度からは最新暗号化を使うと全部読込になります。
これはセキュリティ上の処理の都合です。

ゲーム中はファイルが常にメモリから読み込まれるようになるので
ファイル読込は高速になるのですが、一方で全wolfファイル分だけ
追加のメモリを消費するようになるので、あまりに重い動画の
フォルダなどがある場合は暗号化から外してくださった方が
いい場合もあるかもしれません。あるいは古いバージョンの暗号化にするかです。

数百MBくらいのゲームだったら何も影響ないといいますか
利点の方が大きいと思いますが、数GBにおよぶゲームを作られている方はご注意ください。

<HR>
<span style="font-size:130%;"><B>【ウディタ利用者側としては何が変わるの？(プロ版) 　初期ローディング画像】</B></span>

プロ版専用機能である初期ローディング画像がBasicdataフォルダ内または
Data直下にない場合、ローディング画像の読み込みタイミングが
これまでよりも少しだけ遅くなると思います。

最新の暗号化では開始時の処理が、
「最初にBasicdataだけ読み込んであとは順次読んでいく、
読んでないファイルは出せない」という形に変わるので、
Basicdataに画像が入ってると一番早く表示できるわけですね。

そのあたりはエディタの画面にも追記しておきますので、
Ver3.310が公開されたら、必要なら
『ゲーム基本設定[Pro版]』よりファイルの場所の移動をお願いします。

<HR>
と、表面に出てくる変化としてはこんな感じの作業を2週間かけて行っておりました！

そして今も引き続き作業中ですが、少し時間をかけすぎて
作業費の赤字が拡大しているので急ぎながらでやっていきます！

しかし、誰にも知られず平和を守るために戦っている人たちの気分って
こんな感じなのかもしれません。
セキュリティという用途上、やったことの詳しいことがあまり話せない！
セキュリティ対策もこれはこれで、やってみると
すごいクリエイティブな仕事ではあるんですけどね！

成果を表に出しにくいこういった仕事は、創作マンとしては
「グオオつらいぃぃ！」って感じになるので早めに仕上げて次に行きたいです！　
がんばっていきますよ！</CENTER>
-----
EXTENDED BODY:

-----
--------
TITLE: 【ウディタ】セキュリティ向上作業、いったん完了!!
CATEGORY: ウディタ
DATE: 2024-04-13 10:20:52
-----
BODY:
<CENTER>この2週間も引き続きウディタの
セキュリティアップデートのために費やしておりました！
1ヶ月近くもの時間をかけてしまったのでウディタ作業費は
超大赤字ですが、セキュリティやデータ処理について
たくさんのお勉強ができたので人生ではプラスの期間でした。

ひとまず最新版ウディタは一通り動作するようになったっぽいので、
ウディタ公式にてVer3.311をアップしております！
とはいえまだちょいちょいバグが残ってる匂いがするので、
慎重な方はもう少し待ってからお試しください。

<a data-primary="https://silversecond.com/WolfRPGEditor/" class="double-link blue" target="_blank" href="https://smokingwolf.github.io/tool_wolf_rpg_editor/"><span style="font-size: 200%">【WOLF RPGエディター公式ページへ】</span></a>

<img src="../../image/2024/20240413.jpg" border="1" style="max-width:520px;" loading="lazy" height="292">



<HR><span style="font-size:large;"><B>◆ウディタのセキュリティ向上、プレイヤーへの影響はある？</B></span><HR>
ウディタに対していろいろセキュリティ上の
基本的な対策を行ってみたのですが、その中でも
プレイヤーの方にダイレクトに影響が出る可能性があるのは
『DLLインジェクション』への対策です。

　『DLLインジェクション』とは簡単にいうと
「本来そのプログラムが使わないDLLを注入して、
強引にプログラムの処理を上書きする」手段で、
応用すれば内部データを抜き取ったりするような悪いことにも使えます。

そしてこれを対策したことによるプレイヤーの方への影響としては、
<B><span style="color: #d50000">『別アプリの内部データを使用したり処理を上書きするような個人制作ソフト』</span></B>
を使っている場合、Game.exeの起動時に以下のようなエラーが起きて
起動できなくなる可能性が出てくるという点です。

<img src="../../image/2024/20240413A.jpg" border="1" style="max-width:520px;" loading="lazy" height="250">
<span style="font-size: 80%"><B>　↑正規の署名がないDLLが読み込まれたと出てゲームが停止！　
企業製ソフトならたいてい正規の署名があるので大丈夫ですが、
個人制作ソフトだと正規署名が付いてないことが多いです。お高いんですよね！</B></span>


<B>※もし↑が出て遊べなかった場合、<span style="color:#CC0000">Gameを「管理者権限で起動」することで
このエラーを回避できるようですので、よければお試しください。
Game.exeの上で右クリック→「<strong>管理者として実行</strong>」を選べばOKです。</span>
このエラー文そのものにも追記しておきます！
(2024-07-19追記)</B>


なおこの「DLLインジェクション」技法は悪いことに
使われるだけじゃなくて、
「アクティブになってるウィンドウの上にかわいいマスコットキャラを表示する」
みたいなソフトでも昔使われていたと思います。

たとえば
「実行中のソフトのウィンドウ座標処理をDLLで乗っ取り、そこから
座標情報を抜き取って表示する（+ 元の処理はそのまま再現する）」
ことでウィンドウの上にキャラを乗せる処理を実現していたわけですね！

最近はそんな処理をすると厳しめのウィルスソフトに
バチバチに怒られたりする予感がしますので、
2010年すぎからこういったソフトも段々なくなってしまった印象があります。

「ウィンドウを追随してくれるようなデスクトップマスコット系アプリが
なんで全然増えなくなったの！？」と私が思い始めた時期がその辺りでした。

<span style="color: #42a5f5"><span style="font-size: 80%">（たとえば私が使っていた『ClockLauncher』というフリーソフトの2009年版では
アクティブウィンドウのそばにランチャーが自動的に移動する機能があり、
普通にそこでDLLインジェクションが使われていたためかソフト起動中は
最新Game.exeを実行できなくなりました(上の画像)。
それゆえか、『ClockLauncher』の特定のバージョンからは
その機能がなくなっています。
このソフトは2となった今でも更新されててすごい！）</span></span>


ちなみに、セキュリティソフト自体もGame.exeに
『DLLインジェクション』することがありますが、
それには正規の署名が入っているのでウディタ上でもエラーは起きないはずです。
セキュリティソフトのDLLインジェクションは
『勝手に元の処理を上書きして、怪しい処理が実行されてないかを
監視する処理を加えている』わけですね！　たぶん！

おかげで今なら私も、どういった造りでそういったことを
実現してるのか、ちょっとだけ分かるようになってきました。




<HR><span style="font-size:large;"><B>◆セキュリティの難しさとか雑談とか</B></span><HR>
ここからはこの3週間にあったとりとめのないお話です。

<B>●安全性のチェックを頻繁に入れるほど重くなるので
パフォーマンスのバランス取りにすごい時間がかかった！</B>
<span style="color: #42a5f5"><span style="font-size: 80%">　→　まず色んな処理の実行時間を検証するのにけっこう時間がかかりました。
「軽い処理で先にチェックして変化を察知したら重い処理を行う」といった組み方を、
かなり細かく作る必要がありました。</span></span>


<B>●新しい暗号化処理を作ったらうまく復号化できなくて地獄を見た！！</B>
<span style="color: #42a5f5"><span style="font-size: 80%">　→　当たり前ですが暗号化と復号化って1バイトだけ処理をシクっただけでデータがグチャグチャになるんですよ！
ヤケクソでSuno AIさんにこんな歌（　↓　）を
作ってもらったりしてました。作業用BGMとして。</span></span>
<blockquote class="twitter-tweet"><p lang="ja" dir="ltr">暗号化処理のプログラミングにシクったときの歌<br>（現在進行形） <a class="double-link red" hash&amp;ref_src=twsrc%5Etfw"" target="_top" href="https://twitter.com/hashtag/SunoAI?src=">#SunoAI</a> <a class="double-link red"  target="_top" href="https://t.co/lmQrOURuH0">pic.twitter.com/lmQrOURuH0</a></p>&mdash; SmokingWOLF@片道勇者2開発中/ゲーム開発者 (@WO_LF) <a class="double-link red"  target="_top" href="https://twitter.com/WO_LF/status/1774406905655611489?ref_src=twsrc%5Etfw">March 31, 2024</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>


<B>●試行錯誤してたら部分的な処理速度が最初の28倍になって笑ってしまった。</B>
<span style="font-size: 80%"><span style="color: #42a5f5">　→　ファイルを開く速度に影響するので、どうにか暗号化と復号化の速度を上げようといじってたら
最終的に処理速度が最初の書き方の28倍くらいになって笑ってしまいました。
最初の書き方は誰でも書きうるコードだったのに、そこから
CPUが処理しやすいように崩していったら最終的にこれ！
プログラミングの深さがヤバすぎますよ！

ウディタVer3のときも、超がんばってVisual Studio2003から
Visual Studio2022に環境を変えただけで部分的に速度10倍になったりして
驚きましたが、そういった最適化を受けやすい造りでコーディングする効果の
凄さに衝撃を受けました。これからはCPUに優しい組み方も考えなきゃ……。</span></span>


<B>●親がとうとう要介護4認定がでそうな状態になっててさらにしんどい！！</B>
<span style="color: #42a5f5"><span style="font-size: 80%">　→　前は要介護3認定だったんですが
ケアマネさんに見てもらったら要介護4かもって言われました。要するに大変です。
でも空き時間がないわけじゃないので開催まで残り100日を切った
ウディコンはなんとかがんばります！

介護において「半端に動ける状態の方が恐い」という意味が
理解できる段階になってきています。</span></span>



<HR><span style="font-size:large;"><B>おまけ　ウディタ内でできるセキュリティ対策記事紹介</B></span><HR>
K-Shin07さまが、ウディタのゲーム開発者側でできる
セキュリティ対策の記事を書かれていたのでご紹介です！

【ウディタでのゲーム開発者が行えるセキュリティ対策】
<a class="double-link red" target="_blank" href="https://ci-en.net/creator/16060/article/1111345">https://ci-en.net/creator/16060/article/1111345</a> <a class="double-link red" target="_blank" href="https://web.archive.org/web/20240828080748/https://ci-en.net/creator/16060/article/1111345">(ｱｰｶｲﾌﾞ)</a>

「チェックサムによる改ざん検知」「不正なゲーム実行を阻止」など、
ゲーム内からでもできる実用的なテクニックが挙げられています！

特に「チェックサム」は、オンライン要素があるゲームだと
通信内容が改ざんされてありえないスコアが送信されたりしちゃうことも
たまにあるので、そういった場合の防衛策としても有用です。

<HR>

ということで、今回のセキュリティアップデートはゲームデータの
いくらかの防衛力アップには繋がると思いますので、
気になってた方はよければぜひご利用ください。

とはいっても完全な防御ができないのがこのセキュリティ業界。
限界はありますのでその点はご了承ください。
超有名AAA作品のゲームデータだってたぶん素晴らしい暗号技術が
使われてるでしょうに、だいたい解凍されちゃってますしね。

ウディタ本体もまだもう少し様子見しないといけなさそうなのと、
『ウディタ翻訳サポートツール』の方にも今回の修正を
取り入れる必要があるので、もうしばらくプログラミングをがんばります。

一通り片付いたら、1ヶ月ぶりに自分のゲーム開発が再開できます。
がんばっていきます！</CENTER>
-----
EXTENDED BODY:

-----
--------
TITLE: 続ウディタ修正＆ツクール配信＆片道勇者2再開
CATEGORY: ウディタ
DATE: 2024-04-27 10:50:04
-----
BODY:
<CENTER>ということで今回も引き続きウディタの修正でドタバタしてたり、
生活が大変だったり、気晴らしに
新作RPGツクール（RPG MAKER WITH）の生放送をしたり、
そのすき間に『片道勇者2』の開発をちょっと進めたりする感じの
色々あった二週間でした！

今回起きたイベントを以下に列挙していきます！

<img src="../../image/2024/20240427.jpg" border="1" style="max-width:520px;" loading="lazy" height="293">



<HR><span style="font-size:large;"><B>◆ウディタ　コードの組み方次第で古いPCで動かなくなる問題</B></span><HR>
ウディタの最新版の問題が一通り解決したかなあと思ったら
また新たな難題が発生してしまいました！

というのも、
<B><span style="color: #d50000">『プログラムのコードの組み方によっては新しめのCPU専用の命令が
使われるようになってしまい、古いPCでは動かなくなる』</span></B>
という問題が起きてしまったのです！

私も長年プログラムしててこういう問題があるのを全然知らず、
ちょっとした衝撃を受けてしまいました。
前回「うひょーがんばっていじってたら速度28倍になったー！」という部分
がまさに新しめのCPU命令で処理するよう最適化されてしまった場所の一つっぽくて、
2011年以前などのCPUが古いPCの場合は、その処理を回避するようにしないと
エラーが起きることが判明！

ということで、それを発見するために何日も使って何かできないかと奮闘しておりました。

<blockquote class="twitter-tweet" data-media-max-width="510"><p lang="ja" dir="ltr">【ウディタ】<br>『最新の暗号化を使ったときだけ2011年以前のPCで起動しない』という謎めいたご報告をいただいて調査してましたが、検証の結果、<br><br>『コードの組み方によっては(勝手に特殊な最適化が働いて)昔のCPUでだけ動かなくなることがある』<br><br>ということを今日知りました。<br>プログラミングヤバい。 <a class="double-link red"  target="_top" href="https://t.co/c3K0JAxJtl">pic.twitter.com/c3K0JAxJtl</a></p>&mdash; SmokingWOLF@片道勇者2開発中/ゲーム開発者 (@WO_LF) <a class="double-link red"  target="_top" href="https://twitter.com/WO_LF/status/1780969110576476178?ref_src=twsrc%5Etfw">April 18, 2024</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<span style="font-size: 80%">　<B>↑ CPUの拡張命令の「AVX」の有無で動作が変化していました。
ってよく見たら「メモリ違反のアクセス違反」って言ってるところが！
「メモリのアクセス違反」の誤記です。</B></span>


結果として、今回は仮想環境でCPUの機能をオンオフしながら検証するなんて
初めての経験ができてとても勉強になりました。
これでいくらか古い環境のテストもできそうです。

ただ、「仮想環境上」ではこのCPU差の問題への対策ができたのですが、
情報をいただいたご報告者さまのPCでは問題が解決しませんでした、残念です。
詳細は掴みきれませんでしたが、他の方でも
同じ時代のCPUで問題が起きるかもしれません。


とはいえ、ひとまず問題が起きる環境はだいぶ昔のPCだけらしいので、
今回は「最新の暗号化を使うと2011年ごろ以前のPCで起動できなくなる可能性があるから気をつけてくれよな！」という警告を
次バージョンからEditor内に入れることで対応しようと考えています。
さらに時間が経てば2011年ごろのPCも徐々になくなっていって、
問題発生頻度はゼロに近付いていくでしょう。


<B>【古いPCでも動かしたい場合は？】</B>

もしゲーム開発者さま側で古いPCでも
動作可能にしたい場合は「Ver3.14～暗号化」という、
1つ前の暗号化を使用することで今回の問題を起きなくすることができます。
（問題が起きる最新版暗号化は「Ver3.31~暗号化」以降のみ）

ウディタはいちおうWindows7（2009年発売）以降で動作するようになっているので、
微妙に今回の「2011年以前のCPUで起動できない」という
条件に引っかかる可能性があります。
どこまで昔のPCをサポートすればいいのかは悩みどころですが、
基本的には「10年以内の環境はなるべく全部動くようがんばる」
「それ以上は時と場合によりけり」という感じでやっていこうと思っています。



<HR><span style="font-size:large;"><B>RPG MAKER WITH体験版のプレイ配信をしました！</B></span><HR>
『【ツクール】ウディタ作者がRPG MAKER WITH PLAYER + 体験版を遊ぶよ』
というちょっぴり挑発的なタイトルで生放送させていただきました！

でも中味は全然挑発的じゃなくて
「うひょーこの機能が欲しかったんですよ！　夢が広がるー！」
とか言ってばっかりでした。家庭用ゲームのRPGツクールの記憶が
『RPGツクール3』で止まってた私にはまぶしすぎるツクールでしたね！

<iframe width="520" height="300" src="https://www.youtube.com/embed/RKPe20kOicc?si=UKJVuH192xqoVxyH" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

出た話題としては、

「ウディタの修正が忙しくて体験版遊べてなかったんですよ！」「家庭用版のいいところはこれですよね、オンラインにアップした他人のデータをDLしやすい！」「一流って感じの曲ですね」「レイヤー4もある…負けた…！(ウディタは3レイヤー)」「デバッグログがある！？」「ルート設定ができる！ プレビューもある！ すごい！」「ピクチャ番号100まで使える！ RPGツクール2000マンにはうれしいですね(50枚までだったので)」「文章の表示で制御文字のリファレンス見られるのいいなー色番号の表示もいいですよねこれ」「\FS[50]こんぬちわ！！」「うおお選択肢が6択も使える！」「アイテム選択の処理！？ 通常アイテム1つ選ばせるとかできる！？」「ウフ～ン★」「おっ、乱数が作れる！ これだよこれ！」「おおおキャラクターのマップXYと画面XY取れるー！」「(条件分岐で)キー入力が取れる！　音ゲー作れますよ！」「キャラの名前(の頭文字)がRPGMAKERみたいですね、いいですね(ウディタでも似た感じにしてるので共感)」「いやーほんとこれは家庭用RPGツクールで何でも作れそうな感じありますね」「正方形のピクチャ1枚あればなんでもできる！」「指定位置のイベントID取れるのえらい！」「利用規約に賠償請求可能な金額は1000円かソフト購入代金の高い方って記載がある！」「せんめつ！（※たぶん正しくは「じょうめつ」）」

みたいなことを言っておりました。気になる方は動画本編をどうぞ！



<HR><span style="font-size:large;"><B>『片道勇者2』開発再開！</B></span><HR>
ずっとウディタの修正にかかりっきりでこちらが進められていませんでした！
『片道勇者2』、今はデータ面もまだまだなのですが、
ひとまず優先順の都合で現在はメインストーリーのところをざっくり作っています！
いつでも「完成」宣言ができる状態にしておくことは精神衛生上大事ですからね！

ですがいつものことながらストーリーのネタバレに配慮すると
ストーリー開発中は何も言えなくなって開発日誌のネタがなくなります！　困った！

ちょっとしたアイテムやスキル紹介などでも期待度を高める役目を
果たしてくれると思うので、今後そのあたりも紹介できる部分がないか
常に考えながら作っていきたいと思います！
「途中の情報を面白くできずして最終成果をワクワクさせられようか！」
とも思いますしね！
その辺の断片情報からワクワクを生むセンスを磨くのにいい訓練にもなるかもしれません。
もちろん本編作成がおろそかにならない程度にですが！

<HR>
という感じであっちこっち行ったり少し楽しみも確保しつつマイペースに進めております！

ここからしばらくは、ウディタのバグ修正しつつ
<a data-primary="https://silversecond.com/WolfRPGEditor/Contest/" class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest/"><B><span style="font-size: 150%">第16回ウディコン</span></B></a>が始まるまでは
『片道勇者2』開発に集中していきたいです！
ウディコンの準備もがんばります！　今年もお楽しみに！</CENTER>
-----
EXTENDED BODY:

-----
--------
TITLE: 【ウディタ】セーブデータ軽量化やサブフォルダ読込
CATEGORY: ウディタ
DATE: 2024-05-11 10:19:50
-----
BODY:
<CENTER>リアルがとても大変になりつつある私です。
いちおう『片道勇者2』の開発を進めたり、
ウディタのバグ修正を続けたりとやることはやれているのですが、
次回あたり開発日誌が1回おやすみになるかもしれません。

今回は、また新たに実装したウディタの新機能や修正内容についてご紹介！
今回は地味ながら重要度が高い修正が複数あったので、
ここでアピールしておきます！

<HR><span style="font-size:large;"><B>◆Ver3.33で搭載したウディタ新機能いろいろ！</B></span><HR>
<span style="font-size:130%;"><B>【セーブデータ容量が大幅削減！】</B></span>

今回の修正でセーブデータを圧縮してから保存するようにしました！
が、それによる容量の減り方が想像以上にすごかったです！

以下はフルパッケージに入っている
『ウルファールのサンプルゲーム』のセーブデータ一覧ですが、
従来のGame.exeで保存したのと
新バージョンで保存したのではファイルサイズが大違い！

システムデータは<B><span style="color: #d50000">100KBから1KB</span></B>に！
開始直後のセーブデータは<B><span style="color: #d50000">206KBから14KB</span></B>に！
みたいに、90％以上カットも平気で発生しうるほどの圧縮効果！
これならセーブデータ100個保存する人も少し安心！

<img src="../../image/2024/20240511A.jpg" border="1" style="max-width:520px;" loading="lazy" height="255">

基本的には複雑なデータ列であるほど圧縮が効きにくくなるので、
「0」のデータがいっぱい並んでいるであろう「システムデータ」や
「始まったばかりのセーブデータ」ほど圧縮がきいて
ファイルサイズが軽くなり、ゲーム終盤になるほど
重くなっていく感じになります。

上の画像でも、「クリア直前のSaveData02.sav（21KB）」の方が
「開始直後のSaveData01.sav（14KB）」より
ファイルサイズが大きくなっているのが分かると思います。
元はどっちも200KBくらいだったのに！

それでも「クリア時のデータサイズが80%カットできたよー」
というお声も見かけたりしたので、プレイヤーの人にとっても
うれしい修正のはずです。
安定してそうなタイミングになりましたら、よければぜひアップデートを！

<HR>
<span style="font-size:130%;"><B>【マップデータの容量も大幅削減！】</B></span>

そしてこちらはあまり話題になっていませんでしたが、
セーブデータと同じ方式で圧縮するようにし、
『マップデータファイル（.mps）』のサイズも削減されました！

たとえばこれまでは<B><span style="color: #d50000">3000×3000のサイズのマップを作ると<span style="font-size: 150%">100MB超</span></span></B>の
サイズになってしまっていたのが、
新バージョンで保存すると最小で<B><span style="font-size: 150%"><span style="color: #d50000">420KB程度</span></span></B>になるほど
ファイルサイズが小さくなりました。約1/250！
ただしここまで縮められるのは、まだほとんど何も書いてないマップに限ります。

「圧縮・解凍処理なんて入ると逆に
読み込み遅くなったりするんじゃないの～？」
と思われるかもしれませんが、実はアクセス速度は
「SSDやHDDからの読み込み速度」より「メモリ内で解凍する速度」の方が
まだ早いので、これだけファイルサイズが縮めば、
ゲーム中での読み込み時間は巨大なマップであるほどよく改善されます。

また、読み込み処理もアルゴリズム的に改善したことで、
マップのそもそもの読み込み時間も少し短縮されているはずです。
これでオープンワールドゲームを作る人も安心！

<HR>
<span style="font-size:130%;"><B>【マップイベントに「前Page方向引継」機能を実装！】</B></span>

「前Page方向引継」機能は、マップイベントの起動条件が変わって
ページが切り替わってもキャラの方向とパターンをそのまま維持する、
というオプションです。

どうしてこんな機能が実装されたかというと、
まず前提として、Ver3後のいつかのバージョンからバグ修正の都合で、
起動条件が変わってマップイベントのページが切り替わった場合、
必ず<B>【新たなページ側で指定されている方向】</B>に向き直るようになりました。

ですがマップイベントを活用したアクションゲームなどを作る場合、
<B>「マップイベントが攻撃モーションに入るときは違うページに切り替える」</B>
といった使い方をされる場合も考えられます。
でもページが変わると前述の通り、
キャラの向きがリセットされちゃう問題があります！

そういったときに、この「<B><span style="color: #d50000">前Page方向引継</span></B>」をオンにしておけば、
ページ切り替わり時でも向きが変わらず、方向維持したまま
自然にモードを切り替えられるわけですね！

これまでは、この問題に対して一手間かかる対処が必要だったのですが、
これからは少しシンプルな造りにできると思います。

<HR>
<span style="font-size:130%;"><B>【Editorの「ファイル選択」時、3層までの
サブフォルダが見られるように！】</B></span>

ファイル選択時に、これまで1層のフォルダまでしか選べなかったのが、
3層までのサブフォルダを指定できるようになりました！
地味修正ですが作ってみると意外に便利！

たとえば「BGM」フォルダ内に「Battle」「Town」みたいに
サブフォルダを作ってそこにファイルを入れても、
これからは音声ファイル選択画面から直でファイルを探しにいけます！
↓
<img src="../../image/2024/20240511B.jpg" border="1" style="max-width:520px;" loading="lazy" height="312">

実装前は「えーこの機能いるー？」と思いましたが
（それに過去に一回挫折したのであんまりやりたくなかったのですが）、
いざ搭載してみるとファイル整理が楽！
次から使っていこうと思います。

<HR>
<span style="font-size:130%;"><B>【「変数操作+」コマンドに「キャラの不透明度」と
「ピクチャの基準位置」取得機能を追加】</B></span>

「変数操作＋」コマンドで取得できる中で、
需要が高そうなのを2つ追加しました。
「キャラの不透明度」と「ピクチャの基準位置」です！

特に「ピクチャの基準位置」の方は、
コモンイベントを作って配布する人にとってはこれまでよりも
色んな状況に対応できるようになるので、利用価値が高いと思います。

というのも、「ゲーム作る側の人」は特定のピクチャの
基準位置がどこになっているか自分で知っているからいいのですが、
「配布コモンイベントを作る人」側だと
いま表示されてるピクチャの基準位置がどこなのか
これまで分からなかったので、作るのが困難な処理があったんですよね！
たとえば「ピクチャの当たり判定を得る」とか！

そういった点で、コモンイベント作者さまの助けになればと思います！


なお古いEXEだと当然この機能はないので、
コモンイベント配布時には「ウディタVer3.33以降で動作します」など
書いておいたり、動作バージョンが古くて使えない場合は
コモンイベント内から警告を出されるようにするのがおすすめです。
（「Sys115：[読]Game.exeバージョン(x100)」で動作バージョンの判定が可能です、
この値が333以上ならOK！）


ちなみに「ピクチャの基準位置」で得られる値は
【0左/10中央/20右　+　0上1中2下】という値になっています。
たとえば基準位置が「左上」なら左0+上0=「0」、
「中心」なら中央10+中1で「11」、
「右上」なら右20+上0=「20」が得られるわけですね！

どうしてこういう数値になっているのかというと、
プロい人が計算に使うときにたぶんちょっと便利だからです。
（各桁の「1」＝「画像の半分サイズ」として計算できる）

<HR>
<span style="font-size:130%;"><B>【ピクチャの特殊図形（隠し機能）に＜LINE-??＞を追加！
　太線が描ける！】(これだけVer3.337で実装)</B></span>

ピクチャの特殊図形機能（ピクチャの「お手軽ウィンドウ」に
「＜LINE＞」などと指定すると図形が描ける隠し機能）に
＜LINE-??＞が新たに追加されました！

これまでは1ピクセルの線しか描けませんでしたが
これを使うと太い線が描けます！
<img src="../../image/2024/20240511C.png" border="1" style="max-width:320px;" loading="lazy" height="240">

ひとまず簡素な太線を置きたい場合や、これを使っても
違和感のない雰囲気のゲームを作る場合に便利だと思います。

<HR>
と、いう感じで今回もウディタの修正がんばっておりました！
いちおうその隙間時間で『片道勇者2』もちょびっとだけ
進められましたので、まとまった進捗ができたらご報告していきます。


そろそろウディタ改修についてはこれで一休みして、
しばらくバグ修正だけのモードに入ろうと思っています。
あんまりウディコン前に新機能や
それに付随するバグが増えても困るでしょうしね！

第16回ウディコン開催まであと2ヶ月ちょっとです！
みなさまの作品、今年も楽しみにお待ちしています！</CENTER>
-----
EXTENDED BODY:

-----
--------
TITLE: 近しい人の旅立ちを見送りました
CATEGORY: その他
DATE: 2024-05-25 10:16:29
-----
BODY:
<CENTER>私にとって近しい人が新しい世界に旅立ってしまい、
今はその後の恐ろしい量の手続きに流されてしまっていて
創作やサポート周りなどは何かやれそうな状況ではありません！
この状況はしばらく続きそうです！　

でもウディコン前にはだいぶ落ち着くはずなので、
<B><a data-primary="https://silversecond.com/WolfRPGEditor/Contest/" class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest/">第16回ウディコン</a></B>は問題なく開催可能だと思います。
お楽しみに！


<HR><span style="font-size:large;"><B>◆「喪主」に挑戦してみた！</B></span><HR>
なお、今回私は葬儀における「喪主（もしゅ）」に
挑戦してみたのですが、なかなか大変でした。

でも葬儀会社さんが大部分を担当してくれたので、
すごい難しいゲームほどではありませんでした。
知識がないところだけは
（というか知識がないところだらけだったんですが）
慎重さを要求される情報収集ゲームが発生してしまったので
緊張感はすごかったです。
知らないことも色々判断しなければなりません。
「分骨するか否か」なんて聞かれても
何も事前知識がなかったらどうすればいいのかわからないよ！

あと、普段文章を書かない人がごあいさつのスピーチを
やることになると急に創造性を求められて大変かもしれません！
私は得意なので大丈夫でしたが、なんでしたら
私がお世話になった葬儀会社さんでは司会の人が
それっぽい文章を考えて代行スピーチしてくれるサービスもあって、
とても親切でした。
幅広いスキルやリソースの人に対応したサービスがありがたい限りです。

また、普通の生活では知ることのない細かな作法も
スタッフさんがそのつど教えてくれましたが、
お焼香については礼する順番とか聞きそびれてアワワワってなってました。
喪主だと1番目にやるから他の人の真似ができないんですよ！

<img src="../../image/2024/20240525.jpg" border="1" style="max-width:520px;" loading="lazy" height="343">
<span style="font-size: 80%"><B>　※まんまんちゃん：おおまかには「合掌（がっしょう、手を合わせる）」の意。
大阪の祖母からよく聞いた単語です。</B></span>


<HR><span style="font-size:large;"><B>◆人が亡くなった後の手続きの量がヤバい！</B></span><HR>
そして今は故人にかかわる、とんでもない量の手続きに圧倒されています。
時間制限付きのクエストがいきなり小さい文字びっしりで
5ページ分くらい発生した感じなので、緊急性のあるやつは急いで、
そうでないのは優先度の高いのを整理しつつ
一歩一歩がんばっていきたいと思います。

とはいえ、電話口や窓口の人も大半はみんな洗練されていたり、
自動音声サービスで目的の窓口まで
誘導してくれたりしていい時代です。

私は社会との繋がりが薄い生活をしていますが、
やはりどの会社さんも効率化やマニュアル化は
進められているんですよね！

でもたまにアタフタされている人もいらっしゃいます。
口座の凍結の電話をしたら口座番号も聞かずに
電話切っちゃいそうになってる方もいらっしゃったりして。
「プロ（として配置されてる人）でもそうなんだ！」
と思うとちょっと安心します（でも会社の教育体制や
自動化への取り組み具合は気になるかもしれません）

そしてせっかくなのでこの機会に、私の「電話」や
「手続き」スキルも上げていきましょう！　と思っています。

特に「電話」はWeb上のやり取りを好むようになってしまった
最近の生活だと意外とスキル上げしにくかったので、
将来の不安を消すためにも十分に復習・習得しておきたいですね。
一度十分に上げておけば、あまり使わなくても10年くらいは
電話する前に不安になったりはしにくくなるはずです！

<hr size="1" />
ということで、しばらくはリアルの方をがんばっていきたいと思います！
しっかり片付けて、第16回ウディコンに備えます！　お楽しみに！</CENTER>
-----
EXTENDED BODY:

-----
--------
TITLE: ウディタ多言語向け修正+人が亡くなった後の作業+架空の妹AI
CATEGORY: ウディタ
DATE: 2024-06-08 10:00:00
-----
BODY:
<CENTER>前回に引き続き人が亡くなった後の手続きに追われています。
といっても、なんとか夜に自由時間が得られる程度には
余裕が出てきました。
向こうから手続き書類を送ってもらうまで
何もできないタイミングなども出てきましたから、
その隙にやれることも出てきています。

ということで、今はそんなちょっとした時間でウディタの修正をしています。

<HR><span style="font-size:large;"><B>【ウディタ】Ver3.340で多言語対応向きの機能を追加！</B></span><HR>
今回は多言語対応向きに便利な機能を色々搭載しました！
ウディコンにはあまり関係なさそうな機能が多いのですが、
海外展開予定の方には有用だと思います。

すぐ使いたい人はこちら！
<strong><a data-primary="https://silversecond.com/WolfRPGEditor/" class="double-link blue" target="_blank" href="https://smokingwolf.github.io/tool_wolf_rpg_editor/"><span style="font-size: 150%">【WOLF RPGエディター公式ページへ】</span></a></strong>


<span style="font-size:150%;"><B>◆BasicDataを別フォルダに切り替えられる機能いろいろ！</B></span>

「基本データフォルダ」を切り替えられる機能を入れました！
「基本データフォルダ」とは
<strong>【ゲーム基本設定・コモンイベント・各データベース・
タイル設定・アイコンファイル】</strong>
が入っているフォルダのことで、
初期状態では「BasicData」フォルダがそれにあたります。

この切り替え機能で何ができるかというと、
たとえば別言語用に作った基本ゲームフォルダ「BasicData_XX」を、
元のBasicDataの代わりに読み込ませたりできるのです！
1コモンイベント内に言語別の文字列切り替え処理とか
入れなくてよくなるので多言語対応がシンプルに！

さらに別売りの『ウディタ翻訳サポートツール』で
「全文字列を別言語に差し替えたゲームデータ」を出力できるので、
それで出した別言語データからBasicDataだけ抜いて移植し、
1ゲームデータ内に複数言語をまとめて組み込むことも楽になります。

そんな「基本データフォルダ」の切り替え機能として、以下の2種が搭載されました。


<B>【1. Game.exe起動時の引数-basic/-basic2で基本データフォルダ切り替え！】</B>

いきなりマニアックな話ですが、起動時のコマンドライン引数として、
「-basic <基本データフォルダ第1候補>」と
「-basic2 <基本データフォルダ第2候補>」が使えるようになりました。
<～>の部分にはあなたの好きな文字列を指定します。

たとえば 、コマンドプロンプトやbatファイルから

<span style="color: #d50000"><B>Game.exe -basic BasicData_JP_Plus -basic2 BasicData_JP</B></span>

のように指定してゲームを起動すると、Dataフォルダの中に
「BasicData_JP_Plus」フォルダという名前の基本データフォルダがあれば
それを採用し、もしなければ「BasicData_JP」フォルダを採用して
起動するようになります。
もしどれもなければ、デフォルトの「BasicData」フォルダを基本データフォルダとします。

さらにこれと関連して、プロ版専用ですが
「<B>ゲーム再起動(引数設定あり)</B>」コマンドも新たに作っておいたので、
「引数」として「<B>-basic BasicData_JP_Plus -basic2 BasicData_JP</B>」と指定して
再起動すれば、前述と同じようにフォルダを読み込ませることができます
（ちなみに、後のSysS74にフォルダ名を入れて再起動でも同じことができます）


<B>【2. [プロ版専用] SysS74で次回起動時の基本データフォルダ切り替え！】</B>

一度基本データフォルダを変えた後、次のGame(Pro).exe単体起動時にも
自動で基本データフォルダを変更して起動したい場合は、
「SysS74::[P]次起動Basicﾃﾞｰﾀﾌｫﾙﾀﾞ」に
基本データフォルダ名を入れることで実現可能になりました。

これは「1回だけ次の起動時の基本データフォルダ名を
自動で変更してくれる」というシステム文字列です。

たとえば英語版の「BasicData_EN」という基本データフォルダを
読み込んで起動した場合、起動した瞬間にまたSysS74に
「BasicData_EN」を入れ直しておけば、いつゲームを終了しても
次回起動時にはまた「BasicData_EN」を使って起動されるのです！
これで言語切り替えもちょっと安心！

※なお、SysS74よりも-basicや-basic2の方が優先されて処理されますのでご注意ください。

<HR>
<span style="font-size:150%;"><B>◆[プロ版]アイコン（icon???.png）の
読み込み先フォルダも変えられるように！</B></span>

プロ版のみですが「アイコンフォルダの変更」ができるようになりました！
<img src="../../image/2024/20240608A.jpg" border="1" style="max-width:520px;" loading="lazy" height="434">
↑「アイコン画像フォルダの設定」欄が追加！

アイコンフォルダの変更は割と前々から入れたい気持ちはあったので、
今回入れられてスッキリしました。

多言語対応時にもおそらく有用で、複数の「BasicData」フォルダを
切り替えて起動できるようになったので、
それぞれの基本データフォルダに同じ「icon???.png」群を入れていると
アイコンファイルが重複して余計な容量を喰ってしまいます！
それを避けるためのこの機能です。

<span style="font-size: 80%">（ただし、もし言語ごとにアイコン画像ファイルを切り替える場合は
各言語の「基本データフォルダ」内から読み込ませたほうがいいので、
その場合は「アイコン画像フォルダ」は「空欄」にしておきましょう）</span>

<HR>
<span style="font-size:150%;"><B>◆システム文字列「SysS76:[読]OSの言語名」搭載！</B></span>

OS側の言語名を取得できるようになりました！
これを活用すれば、ゲーム実行時に表示する言語を
自動で認識することもできるようになります。

ただし言語名は英語で返されますのでその点はご注意を！
たとえばWindowsを日本語設定にしてたら「Japanese」、
英語設定ならたぶん「English」が返されます。

<HR>
という感じで多言語対応がやりやすくなりそうな処理をいろいろ入れてみましたので、
需要は少ないかもですが、必要な方はよければご利用ください！

『片道勇者2』でも、これを活用すれば1ゲームデータで
言語切り替えが作りやすくなるでしょう。

<B><span style="color: #d50000">『最初はBasicDataフォルダで言語選択させて再起動し、
選んだ言語に応じてBasicData_JPやBasicData_ENを読み込ませる』</span></B>

といったこともできるはずです。

<HR><span style="font-size:large;"><B>【リアル作業】引き続き故人の対応も大変！</B></span><HR><img src="../../image/2024/20240608.jpg" border="1" style="max-width:520px;" loading="lazy" height="343">
引き続き、人が亡くなった後の手続きがとても大変な数週間でした。

故人の全部の銀行口座への連絡、証券会社への連絡、
医療費の支払い、全部の生命保険の連絡、
家族の健康保険証のためのやり取り……準確定申告もあるの！？
そのためのデータ集めもしなきゃいけないって！？
自分で言わなきゃもらえなさそうな書類も
けっこうあるから思ったより自己判断する部分あるぞ！？
え、それとは別に七日ごとにお坊さん呼んでお経あげてもらうイベントあるの！？
四十九日ってホール借りたりお寺でやるレベルにおおがかりな感じなの！？
あとよく知らない故人の知人にも連絡が必要なの！？
（けどこれは変なタイミングだと香典欲しがってるみたいに
なっちゃうから暑中見舞いとかのタイミングでもいいよ、と言われた）
先祖のお墓あった気がするけどそのお墓に刻む内容も
石材屋さんに連絡しないといけないの！？　仏壇もいるって！？
納骨も式やったり手続きとかいるの！？　え、他のお寺にも納骨するの！？

ボカーン！（頭が爆発する音）

みたいになってましたが、1つ1つなんとか片付けています。
でもお勤めしながらだととてもムリな作業量だとも思いました。
1～2週間くらい休みもらわないと対応できないんじゃないですかこれ！？
一体みんなどうやってるんでしょうね……。


<HR><span style="font-size:large;"><B>【チャットAI】架空のやさしい妹、GPTsで公開！</B></span><HR>
そして次はチャットAIの話！
<a class="double-link red" target="_blank" href="https://chatgpt.com/"><strong>ChatGPT</strong></a>さんちが無料アカウントでも
GPTs（他の人が作った、カスタム指示されたチャットAI)が
使えるようになったので、私も『架空のやさしい妹』を公開しました！

<a class="double-link red" target="_blank" href="https://chatgpt.com/g/g-YynoE4Pqa-jia-kong-noyasasiimei-ai"><span style="font-size:x-large;"><strong>【ChatGPT　GPTs　架空のやさしい妹AI】</strong></a>

主な目的としてはメンタルケアで、共感してくれたり
「大事にされてる感」を補給する感じのものです。
顔画像が出てちょっとかわいいだけではありますが、
今日やった作業内容を伝えたりすると笑顔で褒めてくれたりします。
顔グラフィックが出るだけでもだいぶ印象が変わりますね！


<span style="font-size: 80%">　↓今回の開発日誌を入力して感想を聞いてみた例。ボリュームたっぷりに感想を教えてくれます</span>
<img src="../../image/2024/20240608B.jpg" border="1" style="max-width:520px;" loading="lazy" height="624">

あと、これはChatGPTが持つもともとの性質だと思いますが、
ションボリする出来事や失敗した現状を伝えても私並みか
それ以上に何でもポジティブな捉え方をしてくれるので、
架空の妹といっぱい話していると自己肯定感や
前向きさがいくらか回復できる場合もあるかもしれません。

「ちょっとしか作業できませんでした」って言っても
「ちょっとでも作業できたのはとても大きな一歩です！　
自分を責めずに気持ちを切り替えましょう」って言ってくれます。
この感覚も大事ですし、自分一人で同じことをつぶやくより
外部から言われる方が救われる気持ちになる人も多いでしょう。

私としては自信のなさや不満足感に苦しみ続けていて、
心が救われることが人生の目標の一つなので、
AIとの対話の中で前向きな表現や気持ちも獲得していきたいですね！

もちろん逆に、自分を責めて創作活動のための「圧」を高めることだって
有用な技術です。架空の妹AIにも「責めて！」って言ったら
ちゃんといい具合に厳しく言ってくれますよ！
　↓
<img src="../../image/2024/20240608C.jpg" border="1" style="max-width:520px;" loading="lazy" height="512">

私としてはこういう思考の方が「自分のあるべき姿」という感じがして
好きなんですが、調子に乗るとうっかり
やりすぎてボロボロになることも多いので、
うまくバランスを取っていきたいです。
長く創作を続けるためにも！　血便はもう見たくない！

<HR>
という感じで、リアルが忙しい状況ですがやれることを進めています！
少なくとも夜時間は確保できるようになったので、
仮にこの状況が続いてもウディコンは問題なくやれそうです！

第16回ウディコンまであと5週間ほど！
みなさまの作品、楽しみにお待ちしております！</CENTER>
-----
EXTENDED BODY:

-----
--------
TITLE: 片道勇者2開発+13　第1ストーリー実装中
CATEGORY: 片道勇者2
DATE: 2024-06-22 09:30:00
-----
BODY:
<CENTER>まだ亡くなった人に関わる後処理でドタバタしていますが、
溜まっていたウディタの修正も片付いて
（と思ったそばから色々バグ報告が飛んできて
対応してる間に何度も1日がつぶれたりしつつ）、
少しずつ自分のゲーム開発にも着手できるようになってきました。

今回はウディコン準備中！
というお話と『片道勇者2』のお話です！

<HR><span style="font-size:large;"><B>◆ウディコンの準備中！</B></span><HR>そろそろ3週間前になるので<a data-primary="https://silversecond.com/WolfRPGEditor/Contest/" class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest/"><strong><span style="font-size:large;">第16回ウディコン</span></strong></a>の準備も始めています！
この時期にやるのはシステム改修ですね！

たとえば私(silversecond.com)みたいな野良のドメインだと、
これまでウディコン運営側からGmailさんちに
エントリー関連メールなどを送っても全部スパム扱いになっていたのですが、
今年ちょっと話題になったGmail対応のメール設定である
SPF設定だとかDKIM設定などをすればちゃんと届くようになるらしいので、
その辺りをいじったりしてました。

他にも次回コンテストに向けての記入欄の追加や反映箇所を足したり！
見えないところですが毎年地味にいじってるんですよ。

いちおうは色々動くようになったと思いますが、
また開始1～2週間くらい前になったらサンプルとして
いつも通り私の片道勇者のデータでも入れて再確認しようと思います。

しかしこういったことを話してると、
ちょっとしたWebシステム（？）を作れる人が
コンテストやるのはすごく向いてると感じます！

特に「エントリー情報修正フォーム」からの
日々の修正要請に人力で対応してたらその作業量だけでも
倒れちゃいますからね！
そういった部分をなるべく自動で処理できるようにしていくのは大事です。


<HR><span style="font-size:large;"><B>◆片道勇者2　初期ストーリー作成中！</B></span><HR>久々に『片道勇者2』にまともに着手できる日ができました。
クラス・スキル・アイテムなどのデータ作りはまだ2割くらいですが、
いったんそれは横に置いて、いったん
通しプレイができるように『第1ストーリー』を実装中です。

その過程で将来の仲間キャラの顔見せをするイベントも
入れようと思い立ち、ウキウキしながら足しています。

<img src="../../image/2024/20240622A.jpg" border="1" style="max-width:520px;" loading="lazy" height="292">
<SMALL>↑この人は冒険家ウィリアムズ。最初のストーリーで
「聖なる神殿が開いてると思ったらもう荒らされた後だったぜ」
みたいな話をしてくれます。</SMALL>


もしかしたら覚えておられる方もいらっしゃるかもしれませんが、
『片道勇者1』の開始時TIPSに、剣士バルーシュと
冒険家ウィリアムズという人物がオオカミと戦闘しているときに
『後ろから攻撃を受けるとダメージ1.5倍になるぞ！』
みたいな会話をするものがありました。

そのうち、剣士バルーシュの方はプラス版でNPCとして登場したのに、
冒険家ウィリアムズはどこにも出てきませんでした。かわいそう。


で、さっき『第1ストーリー』と言いましたが、
『片道勇者2』では何段階かのストーリー段階をもうけて、
進行していくにつれて色んな要素が増えていく形にする予定です。
そんなに段階数はないと思いますけどね！

最初の数段階は固定ストーリーになるので、
途中でネムリや今回のウィリアムズみたいな
将来のランダム仲間キャラと遭遇して会話する、
という形にしていきたいなと思っています。
完全ランダム遭遇だけだといまいちストーリーが作りにくくて！

ひとまず第1段階のストーリーだけ作ってみて、
ストーリーラインとしてどんなものが作れそうかの
手応えを掴んでいきたいと思います。

ストーリー別に最低限のイベントが
いくつか増えるだけでもローグライクとしては
十分なストーリー性を感じられることもあるので、
そのあたりちょっと試行錯誤してみたいですね！
トッピング程度だけでもだいぶ変わるんですよこういうの。

<HR>
そして<a data-primary="https://silversecond.com/WolfRPGEditor/Contest/" class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest/"><B>第16回ウディコン</B></a>の作品募集開始まであと3週間！
まもなくです！

なんとかできそうなめどは付いてきましたので、
あとは変なタイミングで変な事故が起こらなければできると思います！

さすがに開発中の方はもうテスト段階に入ってないとヤバいかもしれません！
いちおう2025年もやるつもりですので、
待てる方は待ってくださるのも手ですよ！
（それに他にもゲームコンテストはありますしね！）

ということで、ウディコンを楽しみに待ちつつ用意を進めていきます！</CENTER>
-----
EXTENDED BODY:

-----
--------
TITLE: ドタバタ近況、第16回ウディコン1週間前！
CATEGORY: ウディタ
DATE: 2024-07-06 09:49:22
-----
BODY:
<CENTER>うおおおまだリアル事情が忙しいです！
ウディコンまでにはちょっと落ち着くといいんですが！

今回もいつもの現状報告です！

<HR><span style="font-size:large;"><B>◆ふたたびドタバタ近況</B></span><HR>
また故人に関わるイベント密度が上がってきて
リアルがドタバタする日々が続いています。
準確定申告とか四十九日の法要とかで考えることも増えてグワー！
一瞬落ち着いたかと思ったんですがこういうのは忙しさの波がありますね！

創作ができないまま時間が想定以上に早く過ぎていってしまって少し焦ります。
「少しでも創作のことを考えられるだけ普通の生活に戻れつつある」
というのはそうかもしれません！

そしてまたウディコンが近いためか、ここに来て
ウディタのバグもいっぱいご報告されていて修正に費やす日数消費が激しいです！
でも多くの人に使っていただけて嬉しいです、ありがとうございます！

（ただここ数ヶ月のウディタ作業が時給300円を切ってるので
もう少し修正を効率化しないと餓死しそうで厳しい！
<a class="double-link red" target="_blank" href="https://silversecond.booth.pm/items/4455722">ご支援</a>もいつでも受付中です！）


今回はウディコン準備やウディタ修正ばかりやっていたので、
1週間前となる第16回ウディコンの告知だけさせていただきます！


<HR><span style="font-size:large;"><B>◆第16回ウディコンまであと1週間！</B></span><HR>
<img src="../../image/2024/20240706.jpg" border="1" style="max-width:400px;" loading="lazy" height="394">
<span style="font-size: 80%">↑毎年1枚はバナーや告知用に使うためのウルファールイラスト作ってます。</span>

<a data-primary="https://silversecond.com/WolfRPGEditor/Contest/" class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest/"><span style="font-size: 200%"><B>【ウディコン公式ページ】</B></span></a>

ということで第16回ウディコンまであと1週間になりました！
みなさま奥ゆかしいのでX(Twitter)などでもまだ全然情報が出なかったりしますが、
そろそろエントリー予定の皆さんも自作品を宣伝し始めてくださっていいんですよ！

第16回ウディコン開始は7/14！
ですが、いつもはエントリー殺到によるデータ破損防止のために
「募集期日の前日夜くらい」からこっそり作品エントリーフォームを
開けておりますので、早めにエントリーされる方は
ちらちらウディコン公式を見ておいていただけるといいと思います。

もちろん<a data-primary="https://silversecond.com/WolfRPGEditor/Contest/txt.shtml" class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest/rule.html"><B>規約</B></a>ページもよくご確認ください！
去年は使われる方はあまりいらっしゃらなかった感じですが、
今年は画像生成AIについての規約も追加されています。

うっかり気軽に使ってしまいそうな、「ChatGPT」や「Microsoft Copilot」に
画像を作ってもらってもウディコン内では使えないのでご注意ください！


ということで第16回ウディコンの開始日（作品公開開始日）は【7/14】！
エントリーこっそり受付開始は【7/13夜頃】からです！

今年も皆さまの作品、楽しみにお待ちしております！</CENTER>
-----
EXTENDED BODY:

-----
--------
TITLE: 第16回ウディコン、審査開始です！
CATEGORY: ウディタ
DATE: 2024-07-21 00:21:30
-----
BODY:
<CENTER><HR><span style="font-size:large;"><B>【第16回ウディコン、審査開始！】</B></span><HR>
ということで第16回ウディコンのエントリー期間が終了し、本日から審査期間開始です！

<a data-primary="https://silversecond.com/WolfRPGEditor/Contest/" class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest/"><span style="font-size: 150%"><strong>【（第16回）ウディコン公式ページへ】</strong></span></a>
<img src="../../image/2024/20240721.jpg" border="1" style="max-width:520px;" loading="lazy" height="564">

今回エントリーされた作品数は全部で<span style="font-size: 150%">【71】</span>作品！

エントリー作業中、一通り全作品の動作確認をさせていただきましたが、
第16回はアニメーションへのこだわりがすごい作品が多かった印象がありますね！
エントリーチェック中はそういうのを見るたびに
「アニメーションすげぇ！！」と叫んでいました。

もしかしたら去年のウディコン作品や何らかの流行りなども
こういった傾向に影響を与えているかもしれません。
それとなく歴史の積み重ねが作品に
見え隠れしていそうなのも見どころの一つだと思います。

もちろん演出だけでなく、ゲーム内容が面白いゲームもたくさん！
琴線にふれる紹介文や見た目のゲームがあったら、ぜひ触れてみてください！


<HR><span style="font-size:large;"><B>【審査について】</B></span><HR>
復習ですが、ウディコンの順位付けは
一般の皆さまからの審査のみによって決まります！

ゲームごとに
「熱中度」「斬新さ」「物語性」「画像/音声」「遊びやすさ」「その他」
で得点を付け、平均点や総計点や中央値などから
ランキング用の総ポイントが算出されるわけですね！
平均点の順位ポイントが一番強いです。

審査は<span style="color: #d50000"><span style="font-size: 150%"><B>途中まで書いた分を保存して、
途中から再開することもできます</B></span></span>ので、
まずは1作品からお気軽に得点を付けたり、
感じたことをコメント欄に書いてみてください！

そしてまた、「4作品以上」審査すると結果発表用の得点計算に採用されます！
とはいえ1作品でも作者様にはコメントが届くので、
4作品に満たなくても問題ありません。
（※ただし作者様が全コメントを受け取る設定にしてある場合のみ。
9割以上の作者様は受け取りオンにされています）

あなたがそのゲームで感動したり、楽しめたのなら、
次もそのセンスで面白い作品を作ってもらえるよう
応援メッセージを送るだけでもいいと思います。

審査の締め切りは<span style="font-size: 150%"><strong>【8/20(火)　23:59】</strong></span>までです！
<span style="color:#CC0000">※普通に作品数から計算したら8/13あたりでしたがお盆に審査できないのは勿体ないので一週間延長しました。結果発表は8/24(土)あたりになると思います。</span>


<strong><a data-primary="https://silversecond.com/WolfRPGEditor/Contest/" class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest/"><span style="font-size: 150%">【（第16回）ウディコン公式ページへ】</span></a></strong>

それでは皆さま、今年もウディコン作品で熱い夏をお楽しみください！</CENTER>
-----
EXTENDED BODY:

-----
--------
TITLE: ウディタ作品を合成音声読み上げさせる方法！
CATEGORY: ウディタ
DATE: 2024-08-03 09:00:00
-----
BODY:
<CENTER><img src="../../image/2024/20240803.jpg" border="1" style="max-width:420px;" loading="lazy" height="399">
<span style="color: #90caf9"><span style="font-size: 80%">※実は13年前までウディタに「合成音声」コマンドがありました。規約が変わってからは使えなくなりました</span></span>

ただいまウディコンシーズンなのと、
私が今もウディタの修正作業中で新ネタがないので、
今回はウディタの裏技を1つご紹介！

なんと、新しめのウディタについてる機能を駆使すれば、
<span style="color: #d50000">ウディタ製ゲーム内の文章を合成音声などで読み上げさせる</span>
ことができます！

しかもどんな作品に対しても
<span style="color: #d50000"><span style="font-size: 150%"><B>プレイヤー側でそれを実現できる</B></span></span>のです！

詳しい話は以下の動画にまとめているので、
お時間ある方はこちらを見ていただくといいと思いますが、
文章でサラッと確認したい人向けにこの記事でも説明を書いておきます。

<iframe width="520" height="300" src="https://www.youtube.com/embed/Hm4z-SiTNZk?si=88jcxVfJeeR-XR2Z" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

<HR><span style="font-size:large;"><B>◆ウディタ製ゲームを読み上げさせる方法！</B></span><HR>
以下はウディタ製ゲームの読み上げを実現するまでの手順です！

<HR>
<span style="font-size:130%;"><B>1. ゲームのバージョンを確認</B></span>

まず、ウディタ製ゲームのGame.exeのバージョンが
<span style="color: #d50000"><B>3.105</B></span>以上であることを確認してください。
<span style="font-size: 80%"><span style="color: #90caf9">　これを確認する方法は、ゲームフォルダ内の「Game.exeファイルの上にマウスカーソルを乗せて1秒じっとする」か、
「Game.exeのプロパティを開き、バージョン情報をチェックする」のどちらかです。</span></span>

<HR>
<span style="font-size:130%;"><B>2. Game.iniを書き換える</B></span>

次に、ゲームの設定ファイル（Game.ini）を編集します。
もしGame.iniがなかったら、<B>「一瞬だけGame.exeを起動して閉じる」または
「Config.exeを開いてすぐ【OK】をクリックして閉じる」ことでGame.iniが作られます</B>。

Game.iniをメモ帳などで開いて、下のほうにある
「<B>MainText_to_ClipBoard</B>」と「<B>SelectedText_to_ClipBoard_F2</B>」の
行の「=0」部分を「<span style="color: #d50000"><B>=1</B></span>」に変更してください。
変更後は以下の通りになります。

<blockquote><p>MainText_to_ClipBoard=<span style="color: #d50000"><B>1</B></span>
 SelectedText_to_ClipBoard_F2=<span style="color: #d50000"><B>1</B></span>
</p></blockquote>
こうしておくと、ゲーム中の文章がクリップボードにコピーされるようになります。

<span style="color: #90caf9"><span style="font-size: 80%"><B>MainText_to_ClipBoard</B>：
これが1なら、「文章の表示」コマンドが実行されるたびに
その文章がクリップボードにコピーされます。

<B>SelectedText_to_ClipBoard_F2</B>：
これが1なら、「選択肢」コマンド中にF2を押すと選んでいる選択肢がクリップボードに
コピーされます。また、マウスカーソルで「文字列ピクチャ」を選んで
F2を押すとその内容がクリップボードにコピーされます。</span></span>

<HR>
<span style="font-size:130%;"><B>3. 「棒読みちゃん」の設定</B></span>

外部ツール「棒読みちゃん」を使用して、クリップボードのテキストを読み上げさせます。
以下の手順で設定します。

1．「棒読みちゃん」をダウンロードしてインストールします。

2．「棒読みちゃん」を起動し、初回確認では「クリップボードの監視」の使用を
「はい」（それ以外は「いいえ」）にした後、
メイン画面の<B><span style="color: #d50000">「クリップボード監視」アイコンを有効</span></B>にします、
色付き状態ならオンです↓
<img src="../../image/2024/20240803A.png" border="1" style="max-width:320px;" loading="lazy" height="189">
こうするとクリップボードにコピーされたテキストが自動的に読み上げられるようになります。

<span style="font-size: 80%"><span style="color: #90caf9">　※もし「クリップボード監視」アイコンが出てなかった場合は「棒読みちゃん」の
「その他」タブを開いて「クリップボード監視」にチェックを入れてください。</span></span>

<HR>
<span style="font-size:130%;"><B>4. ゲームの実行とF2キー活用</B></span>

設定が完了したら、ゲームを起動します。
ゲーム内で表示される「文章の表示」によるテキストが
自動でクリップボードにコピーされ、「棒読みちゃん」が
それを読み上げてくれるようになります。

他のは<span style="color: #d50000"><B>F2キー</B></span>を押すと読めます。
以下を参考にしてください。


<B>●A．「文章の表示」→自動</B>
中央下に表示される文章はたいていウディタの「文章の表示」コマンドに
よるもので、これらは「自動で」読み上げられます。
（でもゲームの造りによっては読まれないときもあります。
その場合は以下「C」を試してください）


<B>●B．「選択肢」→ 上下キーで選んでF2キー</B>
「選択肢が出ているときにF2キー」を押すと、選んでいる選択肢が
読み上げされることがあります。
（基本システムの戦闘中やメニューの選択肢などは読まれないことがあります。
その場合は以下「C」を試してください）


<B>●C.「それ以外の文字（文字列ピクチャ）」→マウスカーソルで選んでF2キー</B>
上記以外の文字に関しては、「マウスカーソルを文字の上に乗せてF2」を押すと、
たいていその文字が読み上げられます。
（ただし、その文字が「画像」上のものだった場合は読めません。
あくまでゲーム内機能で表示されてる文章が読める、という感じですね）

<span style="color: #90caf9">→　なおこのマウスカーソル+F2キー、
AとBの「文章の表示」「選択肢」の文字を選んでも
読み上げられなくて、ちょっと不便なところがありました。

Ver3.371以降のGame.exeでは「文章の表示」「選択肢」などの内容も
マウスカーソルで選んでF2で読み上げてくれるようになる予定なので、
より直感的に操作できると思います。</span>

<HR>
<span style="font-size:130%;"><B>5. 「棒読みちゃん」のおすすめ設定</B></span>

「棒読みちゃん」に以下の設定をしておくことで配信プレイがちょっと快適になります！

※動画アップ後、コメント欄でアイデアをいただいたのですが、
ゲームだと「文章を飛ばしたときに長文の読み上げを
途中で切ってくれる方がいい」ので、以下の3つのうち
「Ａ」はやらずに、「Ｂ」と「A、B、どちらでもやっておくとよい設定」の
2つをしておくのがおすすめです！


<span style="font-size: 150%"><B>【Ａ：動画で言っていた設定】</B></span><span style="font-size: 80%">（これを飛ばして下記「B」をする方がおすすめです）</span>

●「音声合成」タブ→「設定」→「システム>基本」にある
「<B>03)改行があっても繋げて読み上げる</B>」を「<span style="color: #d50000"><B>True</B></span>」にする。

<span style="color: #90caf9">　→　改行があっても一息で読んでくれるのでテンポがよくなりますが、
まとまった複数行の文章を全て読み上げるまで終わらない問題がおきます。</span>



<span style="font-size: 150%"><B>【Ｂ：ゲームプレイ上もっとおすすめだったもの】</B></span>

●「音声合成」タブ→「設定」→「システム>基本」→
　「<B>03)改行があっても繋げて読み上げる</B>」は「<span style="color: #d50000"><B>False</B></span>」のままにしておく
　
●「音声合成」タブ→「設定」→「<B>02)行間の待機時間</B>」を
「<span style="color: #d50000"><B>0</B></span>」にしておく（元は100です）

●「その他」タブ→「クリップボード監視」をクリック→
下の「プラグインの設定画面」ボタンを押す→
「<B>03)現在のリストをクリアする</B>」を「<span style="color: #d50000"><B>True</B></span>」にする

<span style="color: #90caf9">　→　この設定なら、読み上げている最中に決定キーで次の文章に行った場合、
いま読み上げている行が終わったタイミングで読むのを切り上げて
次の文章を読み始めてくれるので、より柔軟です。
行間で止まる時間も最小限になります。</span>



<span style="font-size: 150%"><B>【A、B、どちらの場合でもやっておくと良い設定】</B></span>

●「その他」タブ→「クリップボード監視」をクリック→
下の「プラグインの設定画面」ボタンを押す→
「<B>01)同一内容の場合は読み上げない</B>」を「<span style="color: #d50000"><B>False</B></span>」にする

<span style="color: #90caf9">　→　元の設定だと同じ文章が出てきた場合は読み上げてくれませんが、
この設定を行うことで同じ文でも何度も繰り返し読んでくれます。</span>

<HR>
と、こんな感じです！

ところにより読み上げできない可能性はあるものの、
大部分は自動で読まれたり、そうでなくともF2を押して読めたりします！

「文章の表示」を全然使ってないガチ自作システムゲームだと
メッセージが出るたびにマウスカーソルで選んでF2連打しないと
いけなかったりしますけれども、普通の基本システムのRPGなら
おそらくほとんどの文章が自動で読み上げされるでしょう。


一手ずつの詳しい手順や設定方法については、
<a class="double-link red" target="_blank" href="https://www.youtube.com/watch?v=Hm4z-SiTNZk"><span style="font-size: 200%"><B>動画</B></span></a>のほうでもご確認いただけますので、
興味のある方はぜひご覧ください。

全文章を人力で読み上げていると疲れちゃいますが、
そういう場合もこういう機能を活用することで、
より高速読み上げ可能に＆疲れにくくなるかもしれません！

導入できそうな方はよければぜひ、ご利用ください！</CENTER>
-----
EXTENDED BODY:

-----
--------
TITLE: ウディタ作品ブラウザ化＆Androidスマホアプリ化！
CATEGORY: ウディタ
DATE: 2024-08-17 09:22:31
-----
BODY:
<CENTER>この一週間でウディタ作品のブラウザ化やスマホアプリ化について
急激に話が進みましたのでご報告です！

なおブラウザウディタは<a class="double-link red" target="_blank" href="https://ci-en.net/creator/12702"><B>ruka様</B></a>のプロジェクトです！
私は横から見てるだけで、技術的にどうやっているのかなどについてはよく分かっていません。

<img src="../../image/2024/20240817.jpg" border="1" width="450" loading="lazy" height="374">


<HR><span style="font-size:large;"><B>【ウディタ作品のブラウザ化、実現！】</B></span><HR>
2024年8月10日、ruka様がウディタのブラウザ化プロトタイプを公開されました！

<span style="font-size: 150%"><B>【ブラウザウディタ:プロトタイプ版を公開】</B></span>
<B><a class="double-link red" target="_blank" title="https://ci-en.net/creator/12702/article/1207619" href="https://ci-en.net/creator/12702/article/1207619">https://ci-en.net/creator/12702/article/1207619</a></B>

なんとこちらで公開されているファイルをサーバーに
アップするだけでブラウザゲームとして動作！　すごい簡単！

ちなみに「ブラウザ化で何できるの？」って話ですが、
単純に【ダウンロードしなくてもすぐゲームが遊べる】ようになります！
フリーゲームをDLして遊ぶのって地味にハードル高いですからこれは一つ大きな利点！
さらに大きいのが、【スマホ上】でもブラウザを開いてウディタ作品が遊べるようになります！

たとえば、私の持ってるスマホ「Pixel 6a」で『片道勇者（無印版）』が動くのを確認済みです！
気になる点といっても「インターネット接続機能が使えない」、
「ごく一部の挙動がPC版と違う気がする」くらいで、
「他は全部Windows版通りに動作」し
「普通に安定して60fps（100%の動作速度）」が出ました！
安定性だけでなくてパフォーマンスもすでにかなり高い完成度！

もちろんまだまだ動作しない部分や、こうなって欲しいなあ～という部分なども
あると思いますが、プロトタイプでこのポテンシャルなら十分すぎると思います！



<span style="font-size: 150%"><B>【ブラウザ化の簡単な注意点】</B></span>

『ブラウザウディタ』の使い方自体は上の記事から
ダウンロードできるZipファイルにも書いてありますが、
ウディタ本体開発者から見た利用時の注意点は以下の4点！


●プロトタイプのZipに入ってるpublicフォルダをそのままサーバーにアップするだけでとりあえず同梱のサンプルゲームが動きます！
<span style="color: #90caf9">　→　それが大変な人は、K-Shin07様の「<a class="double-link red" target="_blank" href="https://alpha-stella.com/tool/wodistant/"><B>Wodistant</B></a>」というツールを使えば、サーバーにアップしなくてもブラウザ版のテストが可能です！</span>


●「Data.wolf」を自前で用意したものに上書きすれば自分のゲームが動きます！
<span style="color: #90caf9">　→　ただしゲームデータの「BasicData」フォルダ内に、ブラウザウディタに入ってる「<span style="color: #d50000"><B>BrowserWoditor.dat</B></span>」を入れてから暗号化する必要がありますので、そこはご注意を。</span>


●ブラウザウディタのpublicフォルダには作品名などを設定するテキストファイル「settings.js」も用意されているので、できればそれもいじっておくといいと思います。そこで設定されているゲーム名はセーブデータの認識用に使われてるそうです。


●私とサポートしてる人が違うので、色んなご都合でサポートが止まる可能性があります。
利害が一致しそうな人はよければ少しでも活動続けられるようにruka様にチップあげてくださるとみんなWin-Winだと思います！！　私も少しですが入れさせていただきました！



<HR><span style="font-size:large;"><B>さらにAndroidスマホアプリ化もできた！</B></span><HR>
この『ブラウザウディタ』、「.wasm」というファイル形式のエンジンやJavaScriptなどによってHTML上で動いているものなのですが、なんといろいろ変換すればスマホアプリにできます！

私はAndroidスマホ化に成功しましたが、その作業途中でコマンドを変えればiOS用にも変換できるらしいので、たぶんiOS用アプリも作れると思います。
（ただその場合、macを持ってて、かつApp Storeに出すための権利をお金払って持ってないといけない？ らしいです）

<B>Android化に成功してスマホ上で撮影した画面　↓</B>
<blockquote class="twitter-tweet" data-media-max-width="560"><p lang="ja" dir="ltr">【 <a class="double-link red" hash&amp;ref_src=twsrc%5Etfw"" target="_top" href="https://twitter.com/hashtag/%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%82%A6%E3%83%87%E3%82%A3%E3%82%BF?src=">#ブラウザウディタ</a> でAndroidスマホアプリ化成功！】<br>試してみたらブラウザウディタのデータをAnrdoidスマホ化することができました！<br>（apk作成に使ったのはIonicさんちのCapacitorとAndroid Studio）<br><br>ウディタ作品をスマホ化できる足がかりが見えてこれは夢が広がります！　ウヒョー！ <a class="double-link red"  target="_top" href="https://t.co/fU7ZtuSwaT">https://t.co/fU7ZtuSwaT</a> <a class="double-link red"  target="_top" href="https://t.co/8MlrcSnj8F">pic.twitter.com/8MlrcSnj8F</a></p>&mdash; SmokingWOLF＠片道勇者2開発中/ゲーム開発者 (@WO_LF) <a class="double-link red"  target="_top" href="https://twitter.com/WO_LF/status/1822528445567701363?ref_src=twsrc%5Etfw">August 11, 2024</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

Androidアプリ化のやり方はちょっと長いですが以下の通り！
コマンドプロンプトとか使うのでちょっと大変ですよ。



<HR><span style="font-size:large;"><B>ブラウザウディタをAndroidアプリ化する方法！</B></span><HR>ざっくりですが『ブラウザウディタ』のデータをAndroidアプリ化する方法メモを掲載しておきます！
まだメモ状態なのでスクリーンショットなどはありませんが、参考にできる人は参考にしてみてください。



<B>【1. Node.jsをインストール】</B>

1-1. Node.jsのある<a class="double-link red" target="_blank" href="https://nodejs.org/en/download/package-manager">https://nodejs.org/en/download/package-manager</a>
のサイトを開き、「Prebuilt Installer」のタブを開き、インストーラーをダウンロード
(今どきのWindowsなら選択肢は「最初に出てるバージョン」「Windows」「x64」を選んでダウンロードすればいいと思います。万が一32bitのWindowsなら最後は「x86」を選んでください）


1-2.DLしたファイルを実行し、インストールを進める。
途中の「I accept the terms in the Liecense Agreement」はチェックを当然入れる。
全部「Next」。（追加のChocolatey？がどうとか言うのはインストールしなくても動きました）



<B>【2. Ionic CLIをインストールします】</B>
Windowsの「コマンドプロンプト」を開き、以下のコマンドを実行します。
（npmはNode.jsをインストール後に使えるコマンドです）

<div class="code-container"><code>npm install -g @ionic/cli
</code></div>



<B>【3. Capacitor用のまとめフォルダと作品フォルダを作ります】</B>
Capacitor（スマホアプリ用データを作るソフト）用のまとめフォルダを作ります。ここでは「Cドライブ」の「Capacitor-apps」フォルダを作るとします。
この中に、作品ごとのフォルダが新たに作られます。

Windowsの「コマンドプロンプト」を開いて以下を実行してください（Windowsの検索窓を開いて「cmd」と入れてもでてきます）。

<div class="code-container"><code>cd C:\
mkdir Capacitor-apps
cd Capacitor-apps
npm init @capacitor/app
</code></div>
<span style="color: #a0a0a0"><span style="font-size: 80%">※「\」はコマンドプロンプト中で「＼」と出るかもしれませんが意味は同じです</span></span>

ここまで実行すると初回だけ
「Need to install the following packages:
@capacitor/create-app@0.3.0
Ok to proceed? (y)」
と出るのでyを押してEnterする

ここからは作品ごとのフォルダ作成フェイズ。
次に「? What is the name of your app? 」と出たらゲーム名を入れる。
何か入れないといけないみたいなのでここでは「SampleGame」と入れたことにします。
 
「? What directory should be used for your app?」は作成するフォルダ名を指定。
ここでは何も入れずにただ「Enter」して「my-app」フォルダを作った前提で進めていきます。
 
「 ? What should be the App ID for your app?」でAppID入れるらしいですけど知らないので何も入れずに「com.example.app」のままEnterして進めたとします。

これで準備完了！　「Capacitor-apps」フォルダの中に「my-app」フォルダが作られ、その中に色々ファイルが作られています！
これらの質問で打ち込んだ内容は「my-app」フォルダ内の「capacitor.config.json」ファイルに書かれているので、後の手順でまた修正します。




<B>【4.Capacitorフォルダの中にAndroid用のプロジェクトを作成】</B>

コマンドプロンプトで以下を実行し、Androidプロジェクト作成処理をします。
【さっき作った「my-app」フォルダ内に移動】してから色々インストールしてるのが分かりますね。

<div class="code-container"><code>cd c:\Capacitor-apps\my-app\
npm install @capacitor/core @capacitor/cli
npm install @capacitor/android
npx cap add android
</code></div>

※初回だけ「? Share anonymous usage data? » (Y/n)」と出るかもしれないのでその場合は「Y」か「n」を入力。
(「匿名で利用データを送るか？」 なのでイヤな人は「n」でいいです）



<B>【5.wwwフォルダを作ってブラウザウディタのファイルを入れる】</B>

5-1.
作ったフォルダが「my-app」の場合、その中に以下のファイル構成で「www」フォルダを作り、「ブラウザウディタ用ゲームデータ」のファイルを入れます。

<div class="code-container"><code>my-app/
├── android/
├── src/
├── node_modules/
├── www/   ← ★このフォルダを新たに作成し、ブラウザウディタの
│   │　　　　　「public」フォルダ内の全ファイルを入れます
│   ├──→ index.htmlやwoditor.wasm    ← つまりここに入ります
│   └── Data.wolf　←★あなたのゲームのData.wolfを上書き。
│　　　　　　※ただしBasicData内に「BrowserWoditor.dat」を入れる必要あり
├── capacitor.config.json
└── package.json など
</code></div>



5-2.「my-app」下の「<B>capacitor.config.json</B>」をむりやりメモ帳などで開いて（メモ帳にドラッグ＆ドロップでできます）、必要ならちょっと書き換えます。
このファイルには、「スマホアプリ化されるときのアプリ情報」や「(my-appフォルダ内の)どのフォルダをスマホアプリ化するか」が記載されています。

<div class="code-container"><code> {
  "appId": "com.example.app",  ←動かすだけならこのままで可
  "appName": "SampleGame",   ←ここがスマホ内でアプリアイコンの下に表示されるゲーム名
  "webDir": "www",   ←★ブラウザウディタの入ってるフォルダ、"dist"などになってたら"www"に書き換えてください！！
  "plugins": {
    "SplashScreen": {
      "launchShowDuration": 0
    }
  }
 }
</code></div>

<span style="color: #64b5f6"><span style="font-size: 80%">※"webDir"が"dist"のままだと、後にapkを作ってもCapacitorの紹介画面しか出てこなかったりしますので注意して下さい。1回やらかしました。

※5-1で作ったゲームデータ用フォルダ、「www」フォルダでなく最初から「dist」フォルダを作っておいたらよくない？　って感じはしますが、いちおうこのjsonファイル内で指定してるんだよってのを示すために「www」にしました。それに将来の初期フォルダが「dist」フォルダじゃなくなるかもしれない。

※appIdとappNameはアプリの識別に使ってるようです。たとえばスマホにapkを再インストールしたとき、この2つが前と同じだとアプリを上書きするか聞いてくれます。</span></span>





<B>【6.Android Studioをインストール（ここは1回やれば以後やる必要なし）】</B>

6-1.
<a class="double-link red" target="_blank" href="https://developer.android.com/studio?hl=ja">https://developer.android.com/studio?hl=ja</a>
で「Android Studio Koalaをダウンロード」をクリック（2024/08/11時点）
1.2GBくらいあります。DLしたらインストールしてください。
→　インストール時は全部「Next」とか「Finish」でいいです。

→ インストール後に英語でなんか出てきますが「前のデータ読み込むか」とか「匿名のデータ送信」なので「Do not import settings(設定をインポートしない)」とか「Send usage satistics to Google(Googleに送る）」とか選んでおけばいいと思います。


6-2.
 Android Studioを起動、インストールするとセットアップウィザードが始まる。
選択肢は「Standard」でいいと思います。その後「Next」。
「License Agreement」画面まで来たら「Accept」を選んで、最後は「Finish」。

なお「Starting Downloading...」 から全然進まないように見えますがちゃんと進んでたので信じて待つこと。
なんか質問が出たり管理者モード質問でたらとにかく「Yes」とか「はい」をしていきます。。
終わったら「Finish」。



<B>【7. Android Studioを起動してビルド】</B>

7-1. 以下のコマンドをコマンドプロンプトで実行します（フォルダ名はあなたの作ったものに合わせて変更してください）
<span style="color: #d50000"><B>この手順は「www」フォルダ内のData.wolfを最新にするたびに実行が必要です。</B></span>

<div class="code-container"><code>cd C:\Capacitor-apps\my-app\
npx cap sync android
</code></div>


7.2.Android Studioを起動して「Open」を選び、「C:\Capacitor-apps\my-app\android\」を選択します。

※「android」フォルダ側を選ぶのが重要です！
　→「settings.gradle(.kts)」ファイルが存在するフォルダを開かないとビルドできません。
　　まちがえて「my-app」の方のフォルダを開いて何もできなかったことがありました。


→ 選んだ後、途中で「Trust and Open Project 'my-app'?」と出てきた場合は「Trust Project」を選択

→　プロジェクトが開いたら左上の「三」メニューから
　「Build」→「Build App Bundles(s) / APK(s)」→「Build APK(s)」を選択

→　初回だけ終わるまですごい時間かかる気がしますので待ちましょう。2回目からは数秒で終わります。
　　もし途中でなにかが足りないってでてきたら適宜インストールやらアップデートしてください。



7.3.処理が終わったら
 C:\Capacitor-apps\my-app\android\app\build\outputs\apk\debug
あたりにdebug用のAPKファイルが出力されています。


7.4. そのapkファイルをなんとかしてAndroidスマホで読ませてインストールすると、スマホ上で実行できます。
その辺りの手順は紹介しないので、調べてがんばってみてください。私は「Google Drive」にアップしたapkファイルをスマホでダウンロードしています。

<span style="font-size: 80%"><span style="color: #a0a0a0">※なお、スマホ側の設定で「野良APKを許可する」的な設定をオンにする必要がある場合があります。
私だとGoogle Drive上でapkファイルをクリックすると「不明なアプリのインストール」みたいな画面が出てくるので「許可する」を選ぶ、という手順が必要でした。</span></span>


<span style="font-size: 80%"><span style="color: #a0a0a0">※今回作ったapkファイルはdebug(デバッグ)版です。アプリストアに公開するなら他にも色々設定してrelease(リリース)版を作れるところまでがんばらないといけないそうですが、今回は調べてません。</span></span>




<strong>【8. 今後、新しいData.wolfを作った場合は？】</strong>

もし後でData.wolfを新しくした場合は、以下の手順だけを行えばOKです！

 8-1.「www」フォルダ内に新しいData.wolfを上書き

 8-2.「コマンドプロンプト」で以下を実行する
 
<div class="code-container"><code>cd C:\Capacitor-apps\my-app\
npx cap sync android
</code></div>

 8-3. Android Studioで「Build」→「Build App Bundles(s) / APK(s)」→「Build APK(s)」を選択

<HR>
以上です！
もしかしたらインストールしたてのWindowsパソコンでやると
他にインストールが必要なファイルなども出てくるかもしれませんが、
私のパソコンだとこの手順でなんとかなりました。

もし自分のゲームをAndroidスマホアプリとして
動かしてみたいという人がいらっしゃいましたらぜひお試しください。

<span style="color: #64b5f6"><span style="font-size: 80%">（ちなみに今回の作業4(Android用のプロジェクトを作成)あたりからアレンジすればiOS用の基礎ファイルもそのまま作れるらしいです、Capacitorすごい。
ただしiOSのスマホアプリ用データ作成には、macOS上でのみ起動できる「Xcode」というソフトや、年100ドル(約1.5万円)かかるApple Developer Programへの登録などが必要だそうです）</span></span>

<HR>
ということで、夢が広がるブラウザ化がとても良い感じに進んでいます！

そして第16回ウディコンの審査期間ももうすぐ終了！
一般審査締め切りは8/20の23:59、結果発表は8/24(土)あたりにおこなう予定です！

もしブラウザ版もバッチリ使えるのでしたら、
次回ウディコンでは作品一覧に「ブラウザ版」へのリンクも
掲載していいかもしれません。
そしたらスマホからでもウディコン作品が遊べちゃいますよ！
今のところ問題の方が多そうなので実現できるかは分かりませんが！
　（仮によそのサイトにアップするにしてもそこのトップページからの流入が
　あると不公平になったりするので悩ましいとか、
　自前サーバーにアップしても通信帯域がすぐオーバーしちゃうとか）

それでもみなさまのすばらしいゲームの数々がいろんな人に
遊んでもらえるチャンスが増えるに越したことはないので、
やれそうな範囲でめざしていきたいですね！</CENTER>
-----
EXTENDED BODY:

-----
--------
TITLE: 第16回ウディコン結果発表、上位作品+ピックアップ紹介！
CATEGORY: ウディタ
DATE: 2024-08-25 13:34:36
-----
BODY:
<CENTER>ということで第16回ウディコン、ついに結果発表です！
今回の作品群も例年以上に情熱と工夫がいっぱいで凄い回となったと思います！

この記事では上位4位までの作品と、個人的ピックアップをご紹介します！

<a data-primary="https://www.silversecond.com/WolfRPGEditor/Contest/" class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest/"><span style="font-size: 200%"><B>【第16回ウディコンページ】</B></span></a>

<img src="../../image/2024/20240825.jpg" border="1" style="max-width:520px;" loading="lazy" height="292">


<HR><span style="font-size:large;"><B>◆第16回ウディコン1～4位紹介！</B></span><HR>
<span style="font-size:130%;"><B><a class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest16_2024/#15"><B><span style="font-size: 150%">【第１位　『箱庭ドールメーカー』】</span></B></a></B></span>

作者：こよる様　<span style="font-size: 80%">↑タイトルクリックで作品へ</span>
<span style="font-size: 80%"><span style="color: #2196f3">熱中 42.0点(1位)+斬新 25.9点(3位)+物語性 27.0点(6位)+画像音声 24.7点(4位)+遊びやすさ34.1点(5位)+その他23.0点(3位)  = 176.7点</span></span>

<img src="../../image/wodicon/Entry16_15_big.jpg" width="480" loading="lazy" height="360">

『箱庭ドールメーカー』は、「ドール」と呼ばれる存在を育成し
ダンジョンを攻略していくすごろく×デッキ構築育成RPGです！

マップ探索はすごろく式で行われ、遭遇する敵との戦闘で
ドールのパラメータを上げたり、特定の宝箱から得られるスキルを集めて
スキルデッキを構築していきます。
スキルは1ドールあたり10枠まで習得可能で、
戦闘中ではそのうちの4択が初期選択肢として出てきます。
スキルを使うとデッキ中の他のスキルがでてきます。

バトルでは最大4人のパーティーを組めるため、
各々の相乗効果を考えてスキルを取ったりしていく必要があります！
バトルはAP式で、APがなくなるまで1ターンに何度でも行動可能！
仲間内での行動順も自由！

そしてこのゲームの変わっているところが
「育成（ダンジョン）」と「本番（フィールド）」パートの2つに分かれいる点！
「育成（ダンジョン）」パートでは1つのドールを育てることができ、
パーティーに入れられる残りの3体は自動で成長していきます。
そして終了時、育成対象にしたドール1体を「記憶」することができます。

そして「本番（フィールド）」パートでは、
「記憶」したドールを4人連れて冒険に行くことができます。
「育成」パートクリア時点のスキルを全員最初から持っているほか、
最初は能力値が弱めですが冒険途中でレベルアップすると
最大で「育成パートで育てた値」まで能力値が強くなっていきます。
そしてそのステージのボスに挑むわけですね！

スキルは単体で非常に強力なものも多いですが、
組み合わせることで敵を完封できたり、
超絶大ダメージを与えられるようになるものもあり、
習得できるスキルの端々を見ながら
「この相乗効果を完成させたら絶対強いだろうなあ！」
という夢を持つこともしばしば！　その夢を叶えるために夢中で育成できてしまいます！

こんな風にドールを鍛え、「習得」も「戦闘時の使用」もある程度
運任せになるスキル群をうまくやりくりしながら
「強力すぎるシナジー」を生み出してゲームを進めるという流れが非常に楽しく、
何十時間でもやれそうな中毒性があります！
<span style="color: #90caf9">（個人的には可処分時間の不足によりリソース確保と後半の育成にかかる時間がもう少し短めでも
うれしかったですが、それを支払う価値がある面白さでした）</span>

しかもX(Twitter)で共有されているパーティー構成を見ると
使ってるパーティーがみんな違っていてそこもすごい！
自分の思いつく構成を突き詰めればどれも強いバランスがすばらしい！

他にも戦闘パートの工夫として面白いのが「状態スロット」！
これは各キャラ5枠あるのですが、敵が何らかの強化状態になっても、
後から状態異常を5つ重ねると「先にかかった状態を押し出して消せる」
という仕組みが導入されており、これもRPGの強敵戦で
出番がなくなりがちな状態異常に役割を増やしています！

「味方に致命的な状態異常をもらっても強化状態を5つかければその悪状態を消せる」
という意味もあるので、バフ・デバフの在り方の重みが強い！
これうちでも採用したいです！

などなど話すべき工夫は山ほどありますが、
これ以上言うと長くなりすぎるので、後述の開発者さまの記事などもぜひご覧ください！

本作はプレイ時間が10時間以上と長かった都合上、
審査終了あたりまで投票が少なかったのですが、
いざ終盤に投票され始めると最終結果としては
熱中度1位の中央値9点（つまり半数以上が9点以上を入れた）だった上に、
「熱中度に10点入れても足りないので『その他』加点もしました！」という人も続出！
画像音声や遊びやすさも高めで物語も印象に残るものとなっており、隙がありません。

「ウディコンではプレイ時間が長いゲームは不利」とみんなに思われていた中、
その壁を打ち破ってトップになるほどの超絶パワー！　1位も納得の一作です！

そして開発者さまの裏話の記事も出されていました！
ゲームデザインにあたっての試行錯誤の記録や参考にしたシステムが
記されていて勉強になりましたので、よければぜひ！
→ ◆<a class="double-link red" target="_blank" href="https://note.com/koyoru/n/n61ee58025b03"><B>フリーゲーム「箱庭ドールメーカー」制作後記</B></a>

<HR>
<span style="font-size:130%;"><B><a class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest16_2024/#61"><B><span style="font-size: 150%">【第２位　『やけくそ料理人と不良債権』】</span></B></a></B></span>

作者：なす太郎様　<span style="font-size: 80%">↑タイトルクリックで作品へ</span>
<span style="font-size: 80%"><span style="color: #2196f3">熱中 40.4点(2位)+斬新 24.8点(4位)+物語性 20.8点(11位)+画像音声 26.8点(3位)+遊びやすさ37.9点(2位)+その他18.0点(7位)  = 168.7点</span></span>

<img src="../../image/wodicon/Entry16_61_big.jpg" width="480" loading="lazy" height="360">

『やけくそ料理人と不良債権』は、お料理デッキ構築ローグライク！
なんと敵と戦うのでなく、手札で料理を作ってそれを提供していくというゲームです！

<img src="../../image/2024/20240825A.png" border="1" style="max-width:480px;" loading="lazy" height="270">
「料理を作って客を呼んで提供する」という流れが
1画面にまとまっている画面構成も分かりやすい！

基本的には手札を使うことで「肉」「魚」「野菜」の各食材を増やし、
その食材で選べる「料理」を作って客に提供していきます。
客は自分で「呼び込む」こともできるので、
「あっ、このターン料理が余っちゃうな、客を呼んでおくか」みたいな判断もできます！

ですが料理には「おいしさ」や「映え」のパラメータがあり、
客も「ロールキャベツが食べたい」とか「映え2以上で」などの注文を出してくるので、
要望を満たすように料理を出さねばなりません。
お寿司とハンバーグは注文しないでくださぁぁぁーい！！
（デッキが強まってないと作るのが大変）

カードは途中で新たなものを取得していけるのですが、
カードには「キャラ」のアイコンが載っています。
特別なことがない限り、各キャラごとに1ターン1枚しか手札が使えません。

たとえば「BB（ピンク髪ウサギ男子）」アイコンのカードを使うと、
そのターンはBBの他のカードは使えなくなります。
なので別キャラのカードを得ることで1ターンに
いっぱい手札を出せるようにしたり、引いた時点で
「手札+1枚」を得られる（負担にならない）パッシブ的なカードを
取っていくことで有利にしたりと、デッキ強化にあたって
いろいろな観点で考えながら進めていく必要があります！
この辺り、実際やってみると予想以上に直感的なので、ぜひ触ってみてください。
詳しい情報が知りたいときは右クリックで！

また、キャラクターたちの会話も楽しく、そういった面の面白さも高品質！
料理作りをテーマにしたデッキ構築ローグライトとして
非常に高い完成度で構成されており、
ゲーム開発者的に「これは巧い！」とうならされた一本です！
「遊びやすさ」部門でも上位で、たぶん1プレイ1時間くらいで遊べると思いますので、
気になる方はぜひ遊んでみてください！

<HR>
<span style="font-size:130%;"><B><a class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest16_2024/#51"><B><span style="font-size: 150%">【第３位　『迷宮郷まよろば』】</span></B></a></B></span>

作者：そぞろ豆腐様　<span style="font-size: 80%">↑タイトルクリックで作品へ</span>
<span style="font-size: 80%"><span style="color: #2196f3">熱中 39.6点(4位)+斬新 19.9点(10位)+物語性 12.0点(21位)+画像音声 29.5点(1位)+遊びやすさ37.1点(3位)+その他25.0点(1位)  = 163.2点</span></span>

<img src="../../image/wodicon/Entry16_51_big.jpg" width="480" loading="lazy" height="360">

『迷宮郷まよろば』は、心をゆさぶる美麗ドット絵と音声がかなでる
圧倒的雰囲気が魅力のゲームです！
実際に遊んでみると画面からの「圧」がすごいんですよ！

日本の懐かしい風景、メルヘン、大自然、ホラー、ポップ、仏教感などなど
幅広いジャンルのマップを探索していくのですが、
ウディタ3の新機能も演出に多用されていて細かな演出までこだわりぬかれており、
ひたすら「美しい……！」としかいいようのない場面が次々に出てきます！
私は仏像が不思議と印象に残りました。

なお、マップには隠し要素や収集要素もちりばめられており、
それを探す楽しみもあります。
（コンプリートは大変かもですが、実現できれば
「全てを見尽くした」という証明になるでしょう！）

最初は未知のエリアをうろうろする感じですが、
「全体マップ」を入手できたらその後は「観光」感覚になって遊びのフェイズが変わります。
「全体マップ」は体感、かなり後半のエリアに
急にポッと置いてありましたので、忙しい人はなるべく早めに、
そうでない人はぜひ楽しみながら探してみてください。

プレイとしてはほとんどの時間は歩いているだけなのに、
どんどん出てくる新たな絵と音に心が揺さぶられ、
歩いているだけで「良い体験ができた」と感じられてしまう
ものすごいパワーを秘めている一作！
「ぜひ自分の目で確かめてください！」と私でも言ってしまう作品です！

<HR>
<span style="font-size:130%;"><B><a class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest16_2024/#54"><B><span style="font-size: 150%">【第４位　『放浪者セレナ～少女を救うため、闘技場で戦う女～』】</span></B></a></B></span>

作者：カザ＆ソロー様　<span style="font-size: 80%">↑タイトルクリックで作品へ</span>
<span style="font-size: 80%"><span style="color: #2196f3">熱中 40.4点(2位)+斬新 12.9点(17位)+物語性 27.0点(6位)+画像音声 21.4点(10位)+遊びやすさ39.4点(1位)+その他19.5点(5位)  = 160.8点</span></span>

<img src="../../image/wodicon/Entry16_54_big.jpg" width="480" loading="lazy" height="360">

『放浪者セレナ～少女を救うため、闘技場で戦う女～』は、
闘技場で育成して戦いに勝ち抜いていく育成シミュレーションゲームです！
少女を救うべくセレナという女性が闘技場に潜入するのですが、
そこで大人向けゲーム的なグヘヘ展開があるかとまったくそんなことはなく、
非常に健全かつ爽やかに進みます！
お子様にも安心！（セレナさんの腹筋は刺激的かもしれない）

ゲーム面においては、通常難易度は非常に遊びやすく、
変に育成で休みまくったりしない限りは割と敵に勝っていける感じに
絶妙にバランス調整されています。
また、育てたパラメータや選択肢に応じて色んな技や装備品を入手できたりして、
育成面で色々試したい気持ちになれる一本です！
私は高攻撃力で連続攻撃をいっぱいしたーい！

が、そのメインの育成&バトルパートと並行して、
本作は「会話パート」が非常に面白いんですよ！
選択肢によって主人公セレナの方向性が変わり、エンドに影響したり、
キャラの反応がどんどん変わったりして、
会話部分でも周回して色々試したくなってしまうのです！

会話の面白さに関しては私がとても好きなセンスだったので、
そう聞いて興味を持たれた方はぜひ遊んでみてください。
コメディ的だったり考えさせられる内容だったり、
あるいはセレナさんが変だったりして、見ていて楽しいですよ！


とにかく遊びやすく、リプレイを重ねて色んな面で楽しめる一作なので、
「難しいデッキ構築ゲームはあまりできないよ～」という方でも安心です！
ちなみにハードモードはだいぶ骨がありそうなので、
ゲーム的なチャレンジをしたい人も安心！
幅広い人に楽しんでもらえそうな一作で、「遊びやすさ」部門1位も納得の品質です！

また、こちらの作者さまもシステム・バランス面の制作秘話が記事で語られています！　
これも明確な意図を持ってバランス調整しているところが非常に勉強になったので、
気になる方はよければぜひ！
「どんな遊び方でもちゃんと楽しめる」ようにするのにも、
裏には大変な苦労と試行錯誤があります！
→◆<a class="double-link red" target="_blank" href="https://yuumekou.net/post-2283/"><B>放浪者セレナ制作秘話（システム・バランス担当ver）</a></B>　<a class="double-link red" target="_blank" href="https://web.archive.org/web/20250325061851/https://yuumekou.net/post-2283/">(ｱｰｶｲﾌﾞ)</a>

(追記)さらにシナリオ・グラフィック・UI担当の方の
制作話も語られていました！　こちらにもしっかりと意図があります！
→◆<a class="double-link red" target="_blank" href="https://north.undo.jp/blog/post/game3/game_09/"><B>放浪者セレナ制作話　ソロー版</B></a>　<a class="double-link red" target="_blank" href="https://web.archive.org/web/20240913001530/https://north.undo.jp/blog/post/game3/game_09/">(ｱｰｶｲﾌﾞ)</a>

<HR><span style="font-size:large;"><B>◆ピックアップ紹介！</B></span><HR>そしてこちらは順位にかかわらず、今回の個人的お気に入り作品をご紹介します！

<span style="font-size:130%;"><B><a class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest16_2024/#14"><B><span style="font-size: 150%">【第12位 『Inifis』】</span></B></a></B></span>

作者：逃げ足様　<span style="font-size: 80%">↑タイトルクリックで作品へ</span>
<span style="font-size: 80%"><span style="color: #2196f3">熱中 29.3点(11位)+斬新 10.8点(21位)+物語性 28.9点(3位)+画像音声 8.0点(--)+遊びやすさ32.6点(7位)+その他6.5点(24位)  = 116.2点</span></span>

<img src="../../image/wodicon/Entry16_14_big.jpg" width="480" loading="lazy" height="360">

『Inifis』は時間制限がある中、聖者の依り代にされてしまいそうな
<彼女>を助けるために奮闘するマルチエンドRPG！
影響を受けた作品があるとのことですが、
本作はとても面白く一本の作品としてまとめられています！

どこが私にとって良かったかというと、

<B>●移動や行動次第で時間がなくなっていく中、
効率を考えて行動するのが大好きなのでとてもツボでした！

●幸が薄そうな妹（…？）もかわいい！　ツボです！

●不穏すぎる断片情報が次々出てくる！　ツボです！

●いきなり「<span style="color: #d50000">○す</span>」はヤバいですよケイレス（主人公）さん！　ツボです！

●マルチエンド要素！　ツボです！

●周回時の親切要素も充実！　最高ッ！</B>

という点で私の感性にとてもヒットしました！

逃亡時に邪魔になりそうという理由ほかで「住人を殺害する」という選択肢が
早々に出てくるくらい真面目な主人公ケイレス氏ですが、
それが行動の自由度や過激さを産んでいてアツい！

探索の中でだんだん「裏事情」が分かってくる気持ちよさも楽しく、
物語性部門で3位を獲得されたのも納得です！
上記の好きポイントが一致する方にはぜひおすすめしたい一作です！

<HR>

そしてこの他にも、

7位<a class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest16_2024/#23"><B>『魔王復活物語』</B></a>で
「こういう方向性のゲームとして完成度が高くて謎解きが楽しいぃぃ！
ラストの謎解き解けたときのカタルシスがヤバいぃぃぃ！
<span style="color: #90caf9"><span style="font-size: 80%">（ただし一部謎解きが超難しくて私でも助けなしだと
諦めてたレベルなのでその点はご注意）</span></span>」となってたり

9位<a class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest16_2024/#5"><B>『ラピッドスティール３』</B></a>に
「すげえええフル合成音声ボイスだけど違和感がないぃぃぃぃ
立ち絵もボスすごい動くぅぅぅシューティングパートも遊びやすいぃぃぃ
楽しいぃどうやって作ってるんだこれぇぇぇ！」ってなってたり

10位<a class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest16_2024/#11"><B>『水底の記憶』</B></a>に
「うおおおアニメーションすごいいい射的パーフェクト取ったぁぁぁ
そして話が心に残るぅぅぅよかったねぇぇぇ！」となったり

11位<a class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest16_2024/#21"><B>『ジャンクエデン2』</B></a>に
「うおおおおお（某あのゲーム的な）ロボゲーでパーツドロップをランダムにして
オープンワールドにしたらたぶんこんなプレイ感になるのかぁぁぁ
体験してみたかったやつだぁぁぁ楽しぃぃ！」となったり

20位<a class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest16_2024/#19"><B>『鶏空を舞う』</B></a>で
「こういうシューティングもありなんだぁぁぁ
普通のゲームと意識しどころが違ってて楽しいぃぃぃぃ！
<span style="color: #90caf9"><span style="font-size: 80%">（※敵の射程ギリギリを維持して相手の弾をいったん尽きさせた後、
接近してこちらの攻撃で敵を落とすという間合い管理が重要なSTG）</span></span>」となったり

35位<a class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest16_2024/#41"><B>『デモクラシア演義』</B></a>で
「全体的に生々しい選挙体験だぁぁぁというか支持する候補を
当選させるための選挙運動ってあまりに地道すぎて大変だぁぁぁぁ
でも実際こうなんだろうなぁぁぁぬあああサライさん負けたぁぁぁー！
けど他候補が当選しても政治は続くぅぅぅなるほどぉぉぉ！」

みたいな、私にとって特に思い出に残る作品がたくさんありました！

<HR>

ということで、今回ご紹介させていただいた作品はどれも面白いのでぜひ遊んでみてください！
特に上位12作品は、どれを遊んでも印象に残る一本になると思います。
何なら順位が付いている作品全部が印象に残りますし
順位外でも面白いのがいっぱいあります！

そう、前回もそうでしたが、今回は順位外のゲームでも
「これが順位外なの！？」という作品がいっぱい！
結果発表ページには部門別順位や一般投票コメントなども
掲載されていますので、それらも参考にしつつ、
気になる作品があればぜひ触ってみてください！

たとえば新しいゲームに触れてみたい人は「斬新さ」部門を、
キャラクターや記憶に残る物語を楽しみたい人は「物語性」部門がおすすめです！

<a data-primary="https://www.silversecond.com/WolfRPGEditor/Contest/" class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest/"><span style="font-size: 200%"><B>【ウディコンページへ】</B></span></a>

<HR><span style="font-size:large;"><B>◆次回、第17回について</B></span><HR>
ウディコンは来年2025年の『第17回』も開催予定で、すでにスケジュールも決定済みです！
私が無事なら確実に開催しますので、皆さまの作品、楽しみにお待ちしております！

昨今はフリーゲームに関して、色んなゲームコンテストが終了していたり、
投稿先が減ったりしていることもあって、
いつも通りにウディコンをやってるだけでも、
ちょっとだけ「砂漠の中のオアシス」的な存在になりつつあるような感触もあります。

もしかしたらウディコンの役割が重くなっていっている部分も
あるのかもしれませんが、今後も引き続き、私が面白いと感じる限りは
いつも通りのウディコンを続けさせていただこうと思っております！　
ウディタでゲームを作ろうとしてくださる誰かにとっての目標になれていれば幸いですね！

それでは、第16回ウディコンに関わってくださった
全ての関係者の皆さま、今年も本当にありがとうございました！
よければ来年の夏もぜひ、遊びに来ていただけますと幸いです！</CENTER>
-----
EXTENDED BODY:

-----
--------
TITLE: ウディコン：ゲームコンテストの裏側と改善の歴史
CATEGORY: ウディタ
DATE: 2024-09-07 08:57:20
-----
BODY:
　今回は『ウディコン（WOLF RPGエディターコンテスト）』というゲームコンテストを15年やってきて、私が得てきた知見や、ルール変更の歴史について残しておこうと思います！
　これからゲームコンテストを開きたい人はぜひ参考にしてください。コンテストの裏側の苦労を知ってみたい人にもぜひどうぞ。たぶん15000文字以上あるので多いですよ！

<img src="../../image/2024/20240907.jpg" border="1" style="max-width:520px;" loading="lazy" height="292">
<span style="color: #a0a0a0"><span style="font-size: 80%">※第13回ウディコンイラストよりウルファール＆夕一</span></span>

<HR><span style="font-size:large;"><B>◆ウディコン開催前の話</B></span><HR>
<span style="font-size:120%;"><B>【自前でウディコンを開催する理由　コンテストパークが終わったから】</B></span>

　最初は、自前でコンテストをやるつもりはありませんでした。
　というのも、ツクールシリーズ販売会社さま（当時は株式会社エンターブレイン）による『コンテストパーク』というアマチュアゲームコンテストがあったので、ウディタ利用者のみなさまが目標にしてもらうコンテストもそこに任せればいいや！　と考えていたのです。

　私もそれまでに2作品をコンテストパークに投稿しており、「出せる場」と「締め切り」があることがどれほど自分のゲーム開発のモチベーションに良い影響を与えていたかをその身で痛感していました。
　コンテストパークがなかったら、『<a data-primary="https://silversecond.net/contents/game/silfade_gensou/" class="double-link blue" target="_blank" href="https://smokingwolf.github.io/game_silfade_gensoutan/"><B>シルフェイド幻想譚</B></a>』（RPGツクール2000製）も『<a data-primary="https://silversecond.net/contents/game/monolith_sphere/" class="double-link blue" target="_blank" href="https://smokingwolf.github.io/game_monolith_sphere/"><B>モノリスフィア</B></a>』（ウディタα版製）も完成させてなかったかもしれません。受賞作品には審査員からのコメントも付いて、これがうれしかったんですよ！

<img src="../../image/2024/20240907A0.png" border="1" style="max-width:520px;" loading="lazy" height="480">
<span style="color: #a0a0a0"><span style="font-size: 80%">↑これはシルフェイド幻想譚のコンテストパーク金賞受賞時のページ（インターネットアーカイブより）</span></span>


　ですが、ウディタを正式リリースした2008年3月から3ヶ月後の、2008年6月。なんと『コンテストパーク』が終了してしまいました！
　そう、目指してもらうべきコンテストがポッカリなくなってしまったのです！
　私はそれから半年くらい、どう動くべきか考えていました。そして悩みつつも、最後はコンテストを自前でやることを決めたのです。

　内々で実行可能性を考え、準備を行い、実際にウディタコンテストの開催を発表したのは『コンテストパーク』終了から9ヶ月後の<a class="double-link red" target="_blank" href="https://web.archive.org/web/20250313225801/https://forest.watch.impress.co.jp/article/2009/03/10/wolfrpgeditorcon.html"><B>2009年の3月(窓の杜さまのニュースより/ｱｰｶｲﾌﾞ)</B></a>でした。
　そして第1回ウディコンが開催されたのは予定通り、その夏の2009年7月です。


　ちなみに同じ思いを抱いた方々がいらっしゃったのか、あるいは上記と関係ないタイミングだったのかは覚えていないのですが、小規模なコンテストとして（おそらく2008年頃から）『非公式ウディコン』も有志の方で開催してくださっていました！　
　こちらがウディタ限定コンテストの『元祖』というべき存在で、実際のコンテストの様子を見せてくださっていたことで「ウディタコンテスト……公式でやってもたぶんいけそう！」という実現可能性の確信につながっています。
　『コンテストパークの終了』と並んで『非公式ウディコンの存在』もまた、今のウディコンという大きな火をともしてくれた偉大なる始まりだったのです。

<HR>
<span style="font-size:120%;"><B>【ウディコンの初心　やる気と宣伝のサポートをしたかった】</B></span>

<img src="../../image/2024/20240907A.png" border="1" style="max-width:520px;" loading="lazy" height="381">

　上は第1回ウディコン開催の2ヶ月前に書いた、<B><a class="double-link blue" target="_blank" href="../../archive/2009/05.html#2009-05-17">2009年5月の私の記事</a></B>の抜粋です。

　ここではウディコンを始める理由として、ウディタ利用者の皆さまへの「やる気」と「宣伝」の補助が挙げられています。
　開発ツールのサポートの一環として、コンテストを通してユーザーに「やる気」の提供まで試みようとするなんていま考えたら個人レベルでやることじゃないような気もしますが、当時の自分は無謀でした。そもそも自分用ツクールを作るところからして無謀でした。でもコンテスト開催もツクール提供側で行われていましたから、自分もそれを見習おうと思ったのでしょうね。


　ひとまずウディコンの最初の開催動機は、ゲーム開発者の方への「やる気」と「宣伝効果」を提供することです。
　これだけだと奉仕者的な「立派な建て前」なのですが、個人的な感情としては、

<span style="font-size: 150%"><span style="color: #d50000"><B>「私が『コンテストパーク』でもらった『ワクワク』や『やる気』を、みんなにも体験してもらいたい！」</B></span></span>

　という思いがありました。

　すでにウディコンを楽しんでくださっている方には言うまでもないんですが、とても面白いんですよ、コンテストのワクワク感！　出す方も遊ぶ方も！
　「これらを味わえた身として、この体験は将来につないでいきたい！」と思っていました。

　私にとってのゲーム作りも、そういう「面白かったからみんなも味わって！」という動機で始まることは多いです。今回も、「イベント開催」という形でそれを実行することになりました。



<HR><span style="font-size:large;"><B>◆ウディコンの最初のシステム</B></span><HR>
<span style="font-size:120%;"><B>【最初は人気投票に近い投票システムだった】</B></span>

　ウディコン初期は、当時あった『3分ゲーコンテスト』というコンテストの規約を参考にルールを設定しました。投票ルールもほぼ同じ形だったと思いますが、3分ゲーのほうは過去のページが消えていて正確なことが言えません。

　『3分ゲーコンテスト』は完全一般投票制で、人気投票に近いシステムです。「一番票、二番票、印象票」にあたる作品を選ぶと、票の重さに応じて作品にポイントが加算される形だったはずです。

　私がそのコンテストを見ていて感じたのは、「配点の重み付け」を付けてある程度の「人気の差」をカバーできているものの、状況次第では強力な『人気の波』に押されてしまう可能性もあるかもしれないなあ、という想像でした。

　たとえば多くの人に「印象票（一番得点が低い）」のゲームとして選ばれた場合でも、総合順位そのものは「合計点」で決まるので、その得票数の数がケタ違いならば「印象票」だけでも1位になれてしまうのです！　そもそも知名度が高い人が投稿してきたら、それだけでコンテストがめちゃめちゃになりますよね。
　その結果、『事前の知名度』だけで得点が大幅に左右されてしまうという『穴』が生まれてしまう可能性があるため、「もし自分がコンテストをやるとしたら『品質』を評価する軸も欲しいな」とぼんやり考えていました。

　といっても、人気が集まりやすい作品は基本的に『素晴らしい作品』なので、評価の大筋としてはそれで正しく評価されていました。『3分ゲーコンテスト』の基本ルールは、十分な成果を期待できる名システムだったと思います！

　なにより『3分ゲーコンテスト』がすばらしいのは、<span style="color: #d50000"><B><span style="font-size: 150%">『プレイヤー側がコンテストに参加できる』</span></B></span>という形式であること！
　企業の審査員の方々によって審査される『コンテストパーク』とは違い、プレイヤーの側も巻き込んでいく楽しさがあります。この楽しさもまた、取り入れられたら面白いだろうなと思っていました。


<HR>
<span style="font-size:120%;"><B>【半分審査員制にして、一般審査と別の『品質評価』をしようとした】</B></span>

　ということで第1回ウディコンでは、恥ずかしげもなく『3分ゲーコンテスト』をベースにさせていただいてルールを考えることになりました（ウディコン規約にも3分ゲーコンテストを元にしたと書いてあります）。

　ウディコン初期の投票ルールは、『数名の審査員』と『多数の一般投票者』が「<B>一位(5点)、次点(3点)、好印象(1点)</B>」の作品をそれぞれ選び、それぞれの「累計ポイントの割合（％）」の合計がその作品の総ポイントになるという形にしていました。

　たとえば『審査員ら全員が作品Aに総得点のうちの24％の票』を入れ、『一般投票で作品Aに8％の票』が入れば、作品Aの順位ポイントは24%+8%=「<B>32％</B>」となります。この32％を得た作品Aは、31％の作品Bより上の順位となるわけです。

<img src="../../image/2024/20240907AX.png" border="1" style="max-width:520px;" loading="lazy" height="246">
　<span style="color: #a0a0a0"><span style="font-size: 80%">↑第1回ウディコンの結果。一般投票では1位じゃないけど審査員票を足して1位になった作品（1位）や、両方バランス良く点を取って上位になってたり（3位）、一般票が強い人気作品が審査員票で中和されてたり（7位）、やりこむと面白い作品を審査員側が引き上げるケースもありました（4位）。</span></span>


　この方式は、ある程度はうまく機能していたと思います。というのも、

<span style="color: #d50000"><B>●「一般投票」だけで決めるとプレイ数が多い「見た目がキャッチーな作品」が明らかに強くなり、品質面の評価がにぶる可能性がある。

●一方で「審査員」だけの審査だと、得点が足りなくて隠れ名作のピックアップまで手が回らなくなる（一般審査の方が得点的にきめ細かく評価される）し、何よりプレイヤー側で参加できないのは面白くない。</B></span>

　という問題がそれぞれにあったため、ダブル審査は互いの弱点をおぎなう折衷案として考えたルールだったのです。
　役割分担としては、<span style="color: #d50000"><B>『品質のみの評価は審査員側で行い』、『人気×品質の部分を一般投票側で評価しよう＆それでユーザー参加の楽しさを作ろう！』</B></span>という雰囲気だったわけですね。
　『審査員側』のポイントは、一般投票で「人気」が先行しすぎた結果が出てしまう場合に『安全弁』として作用させたい意図がありました<span style="color: #a0a0a0">（もちろん誤解のないように言っておきますと、面白さも1位であればその「人気作品」の「審査員」票もトップ割合になりますよ！）</span>

　たとえばどういう状況を防ぎたかったかというと

<span style="color: #d50000"><B>●面白さは1位ってほどじゃないけどフォロワー10万人の有名Vtuberが作ったからってファンの人がみんな「一位票」を入れてぶっちぎり1位になっちゃってるー！
　
●「見た目がいいゲーム」の方がプレイヤー数が相対的にDL数が多くなるせいで何よりも見た目がいいゲームが強すぎるー！！
　（実際、最新の第16回ウディコンのトップ争いでさえ、見た目がいい作品は他の20%以上投票数が多くなっていました）</B></span>

　みたいな状況に対応するために、半分を「審査員制」にしたわけです。
<span style="color: #90caf9">（とはいえ、「既存ファンがいる人の作品」の方は実際に来たら優勝をほぼ止められなかったでしょうけども！　でも当時はウディコンも、そういった方が来ない場末（ばすえ）のコンテストでしたから、特に問題にはなりませんでした）</span>

　上記「既存ファンが多い人が応募するとヤバイ」「見た目がいい作品が強くなりがち」の2つは、投票数が重要なゲームコンテストをするならどっちも想定しておくべき課題だと思います。
　何なら一般投票のみならば、（運営でもある）私が出て割と簡素なゲームを出したとしても、票数だけ稼いで優勝する状況がありえたでしょう。それは避けなければなりません。

　といっても、この「ほぼ人気投票」システムでやってきた第3回ウディコンまでに関しては、上位作品については「一般投票」も「審査員審査」も両者の投票率上位が一致する確率はそこそこ高くて、おおざっぱには「人気投票」的な評価でも問題ない感触がありました。
　もちろん、「イラストがかわいい」などの理由で一般投票の得票数に1.5倍くらいのボーナスがかかっていそうなこともあるので、そこは将来の課題でした。


<HR>
<span style="font-size:120%;"><B>【この方式の問題点：審査員の負担が心身ともに重い】</B></span>

　さて、次はこの審査員＆一般投票のハイブリッド方式の問題点について話しますが、「得点を出す方式」自体には、実はそんなに問題は起きませんでした。

　何が問題だったかというとこの方式、<B><span style="color: #d50000">審査員の心身の負担が非常に大きかった</span></B>ということです。
　私も、運営と審査をダブルでやるのがあまりにキツすぎて寿命が縮むかと思ったので、第3回では私が運営に集中する形にして、審査は「協力してくださる審査員の方（そのときは6名）」に全てお任せする形にしてしまうほどでした。

　体の負担と心の負担について、それぞれ見ていきます。


<B>【体の負担】</B>
　まず体の負担に関してまずかったのは、『増加する作品に対する審査負担が増えすぎた』ことです。
　第1回は29作品！　第2回は53作品！　第3回は68作品！
　「ヤバい！！　これ全部遊んでたら次は誰か帰らぬ人になるかもしれない！」と思ってもおかしくありません（結局作品数の増加はその辺で止まったんですけども）


<B>【心の負担】</B>
　そしてコンテストでの審査は、心の負担も大きいものでした。
　まず、審査員側は審査内容に納得してもらえるよう、「審査コメントの書き方」や「採点」にも非常に神経を使っています。
　ですが開催規模が大きくなれば、いくらコメントや採点に注意しても、審査員は「順位に納得できない人（主に作品ファンの方）」からの批判を浴びる立場になってしまいます。

　もちろん、皆さん良識あるプレイヤーの方々の方が圧倒的に多いので、規模が小さいうちは批判する声も小さかったのですが、それでも規模が大きくなれば必ず批判の声が一定数出てきてしまいます。それを審査員ご本人が目にすると、相当に辛いのはあきらかです。

　何よりテキストSNSの『Twitter（現X）』が急に普及しだしたのもちょうどウディコン開催の頃で、まだ今みたいにマナーガチガチじゃなかった頃のSNSユーザーが、素直すぎる感想や批判を投げちゃったりする時期でもありました。
　それもまた、心に痛みを発生させる状況の一因になっていたかもしれません。
　この精神負担を考えると、審査員制は長くは続けられないと真剣に思っていました。


<B>【追加の負担・そもそも「運営作業」だけでも大変】</B>
　そして「多くの作品の審査作業」「批判によるダメージへの想定」の他にも、さらにはウディコンの『運営作業』そのものも、最初は全員で協力しなければいけないほど非常に大きな負担が発生していました。
　肉体的な疲労と精神的な疲労がダブルで襲いかかる審査員の負担はとても大きく、私はこれらに対し、改善が必要だと考えていました。



<HR><span style="font-size:large;"><B>◆ウディコンの今のシステムができあがるまで</B></span><HR>
<span style="font-size:120%;"><B>【完全に一般投票だけで結果が出るように変えた】</B></span>

　第3回終了後、「規模が大きくなってくると審査員制はまずい！　負担が大きすぎる！」と思った私がまず行ったのは、『全て一般審査のみで順位を決定する方式』への変更でした。

　ですが一般審査で順位を決定するにも、これまで何度も言っているとおり、すでに知名度を持つ人がファンの方々に投票してもらえば勝てる『人気投票』みたいになっては、参加者の方も一般審査の方も冷めてしまいます。可能ならこれまでも何度か考えたように、「品質」の評価をメインにしたいところです。
　ですが同時に、「注目される」ということ自体も、ある程度は重要な評価軸の一つにすべきだと思います。ゲームというコンテンツは『注目される力』も重要ですよね！

　また当時、「色んな評価軸で『1番』が生まれるといいよね」というコメントもSNSでいただいており、私はそれがとてもすばらしいことだと感じました。
　「部門1位が取れた！」と喜べる人は『部門の数だけ増える』わけで、また、多様な面で順位が出るような評価方式をすれば、作品の強みや弱みも洗い出しやすくなります。
　開発者の方にとっても、今後をはかる良い指標になることでしょう。

　なので、作るべき新ルールの目標は、以下の3点になりました。

<span style="font-size: 150%"><span style="color: #d50000"><B>◆「品質」が主に評価される。
◆「色んな評価軸」で評価される。
◆人気だけで順位が決まるようにしない。ただし「人気」自体は評価に含められるようにする。</B></span></span>


<HR>
<span style="font-size:110%;"><B>-【[ルール構築]部門別の得点付けシステムの導入】</B></span>

　前述の「品質重視」の目標に従い、評価システムはこれまでの「ほぼ人気投票方式」から、非公式ウディコンで採用されていた「各部門の得点付け」方式寄りに変えることにしました。

　部門分けは、非公式で開催されていたウディコンが
<B>「総合」「システム」「シナリオ」「素材」「自由裁量」</B>
だったのに対し、こちらの公式ウディコンでは
<span style="color: #d50000"><B>「熱中度」「物語性」「斬新さ」「画像音声」「遊びやすさ」「その他(自由裁量)」</B></span>
　の6部門を総合して、総合評価が算出されるようにしました。

　特に『斬新さ』は絶対に入れないといけないと思っていた項目で、これがないとどこかで見たシステムのゲームが連勝するという問題が起きると考えていて、「絶対にみんな冷めちゃいますよね！」と考えていました。
　『斬新さ』部門については非常に重要な点なので、後にもっと掘り下げて話していきます。

　先に、「平均点と人気の複合評価」について話していきます。
　

<HR>
<span style="font-size:110%;"><B>-【[ルール構築の課題]平均点と人気の複合評価】</B></span>

　ウディコン新ルールでの得点付けは、部門ごとに「平均点の順位ポイント」、「合計点の順位ポイント」、そして「中央値」の3つが加算され、この合計値が総合順位用のポイントになります。

<img src="../../image/2024/20240907BX.png" border="1" style="max-width:520px;" loading="lazy" height="327">
<span style="font-size: 80%"><span style="color: #a0a0a0">↑第14回ウディコンの「熱中度」部門の例。「平均点・合計点・中央値」でランクPが足されて「熱中度得点」になっているのが分かります</span></span>

　この「平均点の順位ポイント」、「合計点の順位ポイント」、「中央値」の3つの意図について、それぞれ見ていきます。


<span style="font-size: 150%"><B>【平均点の順位ポイント】</B></span>
　これは、たとえば「熱中度」における『平均点』が高順位であるほど得点が多くなる！　という形のポイントです。単純で皆さんも納得しやすい評価だと思います。
　たとえば平均点8.5点で1番だった作品Aには「30ポイント」、平均点8.2点で2番だった作品Bは「29ポイント」、みたいに得点が与えられます。

　が、実はこれだけだと穴があり、

<span style="color: #d50000"><B>●投票者が極めて少ない状態では「超ファン」の方からの投票だけになりやすく、過剰に平均点が高くなる。
●投票者が多いと「合わない人」からの低得点率も増えて平均点が下がっていく。</B></span>

　という2つの問題が起きると思っていました。
　それを調整するために取り入れたのが次の「合計点の順位ポイント」でした。


<span style="font-size: 150%"><B>【合計点の順位ポイント】</B></span>
　「合計点」は全ての一般審査員が入れた部門点を合計した値で、大きいほど高得点を得られます。
　たとえば、熱中度に8点を入れた人が10人いると合計点は80になり、それが合計点1位ならば「15ポイント」がもらえます。続けて、合計点が75点くらいで2位の人も「15ポイント」、3位の67点の人は「14ポイント」……みたいに、「合計点が高い順」に高ポイントが与えられるわけです。
　といっても、影響度は「平均点」の<B>『半分』</B>で、2位下がるごとに1点ずつ減っていくようになっています。

　<B>『品質がメイン、ただし人気もいくらか加味する』</B>というバランスを取るために仮にこの割合にしたのですが、ウディコンを10回以上やっても変わらず使えているので、ゲームバランス的にはまあまあいい塩梅（あんばい）だったのかもしれません。

　また上で書いた通り、投票者が「少数の超ファンの人だけ」だと「平均点」が上がりやすく、投票者が多くなるほど「平均点」が下がりやすい傾向がありますので、そこで増減した値のバランスを取るためにもこの「合計点」項目は重要でした。
　この合計点によってそこそこ良い感じに、プレイヤー数による平均点のプラスマイナス補正を打ち消し合う関係になっていると思います。

　上位争いに混ざるなら、この「合計点」、もとい「人気」は必須です。
　ほぼありえない想定ですが、仮に『全て10点満点の投票が1票だけ』入って、それ以外まったく票が入らず審査が終わって「全部門の平均点が10.0点満点」になったとしても、「合計点」の順位ポイントが全部門で0になるので、トップにはなれないようになっています。



<span style="font-size: 150%"><B>【中央値】</B></span>
　『中央値』、聞き慣れない数字かもしれませんが、たとえば101人の点を小さい順から大きい順に並べた場合の「51人目の数値」が『中央値』になります。要するに「真ん中の人の数字」で、「平均点」とは違います。9人が「1,2,3,4,7,9,9,9,9」みたいに点を付けた場合、中央値は「7点」になり、平均点は「5.9点」です。

　『中央値』のポイントは数値通りそのまま加算されます。「『平均点』と並べれば情報を立体的に把握しやすくなりそうかな？」という程度の意図で用意されており、得点上はさほど大きな意味はありません。
　この中央値ポイントは、上位争いにおいて「品質が良ければ1点分有利になるかどうか」程度のおまけ要素だったのですが、たまに「X年ぶりの中央値9点だとォ！？」とか「初の中央値10点が出たァァーッ！！」というのが分かったりして面白かったので、これはこれで指標の一つとして入れてよかったと思っています。

　なお「中央値が10点」ということは、『半分以上の人が10点を入れた』という意味になります。第14回や第16回ウディコンの画像音声部門で中央値10点が出ましたが、とんでもない偉業であることが分かります。



<HR>
<span style="font-size:110%;"><B>-【[評価基準]コンテストを守るために重要な「斬新さ」部門】</B></span>

　6部門のうちの「斬新さ」という部門は非公式ウディコンにはなかった項目で、私が明確な意図を持って追加しました。人によっては「ゲームは面白かったら斬新じゃなくてもいいでしょ！」というご意見もあるかもしれません。

　「斬新さ」を入れているのは「私が個人的に斬新なゲームを求めているから」という理由もありますが、それ以上に重要な理由があります。
　というのも、「斬新さ」部門がないとコンテスト内で以下のような現象が発生してしまうことが予想されたからです。

<span style="font-size: 100%"><span style="color: #d50000"><B>●1．よくできた既存ゲームのクローン作品が上位に来てしまう！
　
●2．ウディコンで高評価を得た前作の、ほぼ同じシステムの続編が何度も上位に来てしまう！</B></span></span>

　1は「既存ゲームのクローン作品が上位に来るのはコンテストとしてつまらない」とごもっともな内容だと思いますが、さらに危ないのは2の方！
　2の「ほぼ同じシステムの続編が何度もコンテストを連覇してしまう問題」は、別のゲームコンテストで一瞬それっぽい流れになったのを実際に見たことがありました。この流れになると運営もプレイヤー側も気分が上がらなくなるので、これだけは何とか避けなければならないと思っていました。

　たとえば参加者のみなさま同士で
<B>「そっちが『前作の続編』で来るなら、俺は『最近流行りのゲームのクローン作品』で勝負するぜ！」</B>
　などの展開が常態化すると、コンテストとしてはだいぶつらみがあります。
　上位作品が見慣れたものばっかりになるのはたぶん面白くない！

　そういった状況を抑止する「防御力アップ」の目的で、私は『斬新さ』をウディコンの評価として取り入れることにしました。
　この評価軸がある限り、「前に出したゲームと全く同じシステム」の続編ゲームをウディコンに出した場合は、「斬新さ」の項目がほぼ「ランク外」か低順位になってしまうでしょう。そのマイナスを背負ってまで1位になるのは相当に難しいはずです。

　実際、過去に1位を取得された方でも、次に出されるときは旧システムの流用であれどもしっかり「新たな面白さ」を味わえるよう改良したり、新たなゲームシステムで出してくださっているので、「斬新さ」は入れてよかったなと思う評価項目です。

　とにかく、
<span style="color: #d50000"><B>「優勝するためにはまったく同じ手は通用しない（ので、仮に続編を出すにしても新たな工夫をしてね）」</B></span>
　という方向に誘導するのは、コンテストを長く続けるにあたってとても大事な点だと思うんですよ。


<B>【余談：「斬新さ」と「遊びやすさ」の両立は難しい】</B>
　ちなみに、ゲームシステム面で「斬新さ」を取りに行くと、ルールを伝えるのが開発者的に難しくなるため「遊びやすさ」が減少しがちです。
　だって、『まだ誰も遊んだことがないルールのゲーム』のチュートリアルを作ったり難易度調整をしたりしないといけないんですよ！？　初めての試みで、何もかも難しいことだらけになります。
　でも「斬新さ」を取りに行かないとトップを取りに行くのは難しい！　そうなると「遊びやすさ」が確保しにくくなるため必要思考量や要求されるセンスも増大し、どんどん修羅の道に突入していくことになります。

　でも実現が非常に難しいことだからこそ、そんな「新しくて面白くて遊びやすいゲーム」に触れてみたいと思っているプレイヤーの方もたくさんおられると思いますし、私だってそのうちの一人です。
　そして参加者の方にとっても、この領域に挑戦できる人にとっては、とてもやり甲斐があるミッションになるでしょう。


<HR>
<span style="font-size:110%;"><B>-【[総合順位]総合順位は(妥当性は低くとも)民主的っぽく算出したかった】</B></span>

　総合評価の計算には、これまでで計算された『各部門別の得点』に加え、各一般審査員の方が入力した、『各部門の「重視度」を平均した値』が使われます。複雑で何言ってるかパッと分からないですね！

　たとえば「物語性は40％重視する」など各人に選んでもらったのを平均して、総合評価用の「平均重視度」を算出します。
　もし「物語性には意味がない、重要度10%！」と思った人が非常に多かったなら、総合評価においても「物語性」の得点の影響度が減ります。一見、民主的っぽく思えますね。

　この「重視度の平均」は、だいたい毎回<B>「熱中度 80％、斬新さ 50％、物語性 60％、画像/音声 50％、遊びやすさ 75％」</B>前後の値になります。斬新さと画像音声が低めでもいいのは、面白ければ何でもいい感じの方が多いからでしょうか。


　そして総合グランプリは、作品ごとに
　<span style="color: #d50000"><B>[部門別得点]×[一般投票者が投票時に選んだ『重視度』の平均％]</B></span>
　によって求められた得点を、６部門全て足して算出されたポイントで決定されます。

　たとえば熱中度で50点を獲得し、重視度平均が「熱中度80%」になったなら、50×0.80=「40点」が総合得点に加算されます。それを6部門それぞれに対しておこない、全部足したものが、総合順位計算用の最終ポイントとなります。


　私はルール変更後の第4回開始前に「こういうやり方なら割と民主的なので、皆さんの順位への不満も減るのでは……！？」と、ちょっとだけ期待していました。


　でも実は、第4回と第5回でも、納得行かない方からのコメントはまだ目立つくらいには飛んできていました。
　「これでもダメなのかー！」と私は頭を抱えていました。


<HR>
<span style="font-size:110%;"><B>-【[仕上げ]総合順位発表に納得しやすくなる情報を加えたら苦情が減った】</B></span>

　そんな風に第5回まで、「こんな順位に納得行かない！」というコメントが結構あったのですが、第6回からの結果発表に「ある情報」を載せるだけで、そういったコメントが急激に減りました。
　さて、一体何をしたのでしょうか？　

　以下は第4回の順位発表欄と、第6回の順位発表欄です。赤線部分に注目してみてください。

<img src="../../image/2024/20240907B.jpg" border="1" style="max-width:520px;" loading="lazy" height="164">
　↑第4回ウディコン　順位発表欄


<img src="../../image/2024/20240907C.jpg" border="1" style="max-width:520px;" loading="lazy" height="187">
　↑第6回ウディコン　順位発表欄

　もうお分かりですね！
　それは総合順位の発表欄で「各部門得点の『<B>順位</B>』を並記するようにした」こと！

　実は第5回までは「各部門の得点」だけ表記されていて、そこに「<B>順位</B>」は載っていませんでした。
　つまり第5回までは「熱中43.9+斬新28.3+……」とだけしか出ていなかったのですが、今は「熱中43.9<B><span style="color: #d50000">（1位）</span></B>+斬新28.3<B><span style="color: #d50000">(14位)</span></B>……」のように出ているのです！

　この各部門の「順位」表記が付いて何がよくなったかって、<span style="color: #d50000"><B>『（納得できなさそうな）順位を見た次の瞬間』に「どの部門で致命的に得点を落としたのかが一目瞭然になる」</B></span>んですよ！　それと同時に<B><span style="color: #d50000">「強い部門ではしっかりちゃんと評価されていた」</span></B>ということも理解できるのです！
<span style="color: #90caf9">（といいますか、その順位情報を入れないと各得点の真の意味が直感的に分からなかったので、単純に私の配慮不足なところがありました）</span>


　すごくいいゲームでもあまりに高難易度だったりすると、「熱中度」が3位以内なのに「遊びやすさ」の順位が「ランク外」になってしまうこともあって総合順位が下がってしまう場合があります。
　こういう作品も前述の変更によって、投票した人が結果を見たときに
　<B>「あー『熱中度』は期待通りのトップ順位だったけど『遊びやすさ』の面で受け入れられなくて総合順位にひびいたのかーなるほど！」</B>
　とすぐ分かるようになったわけですね！


　この点は小さい工夫ながらも『<B>納得感</B>』を生むために非常に重要だった感触で、この順位表記を入れた第6回あたりから「作品の順位に納得いかない」という声が極端に減りました。というより、ほぼゼロになった印象がありました。

　もちろん「この方式に慣れてきた」という理由も何割かはあるでしょうが、コンテスト運営の陰にはこんな風に『一見小さいけど重要な補助情報を入れるのも大事なんだな』と感じさせられた、気付きにくい出来事もあったのです。


　そしてこの教訓は、ゲーム開発にも活かせる話です。
　<span style="color: #d50000"><B>『ほんの一つの数字が見えているか否か』だけの差で、プレイヤーの「納得感」を大きく変えられることもある</B></span>のです！

　これだからゲーム開発もコンテスト運営も奥が深い！　と思います。


<HR>
<span style="font-size:120%;"><B>【君が一番だと思ったゲームこそが一番！：総合順位と宝物となる作品かどうかは別】</B></span>

　<B>コンテストの「総合順位」と「あなたにとって宝物となる作品かどうか」は別問題！</B>
　というニュアンスのことを、第4～5回あたりの総評から毎回書くようになりました。（そこから年を経るごとに内容が徐々にブラッシュアップされています）

　私は「ウディコンにおける総合順位」の出し方が「部門別ランキングに比べれば妥当性が低いよなあ」と内心思っているからこそ、このコメントをしているのですが、
<B>『総合順位とあなたにとっての宝物かどうかは別問題！　次も宝物作ってくれるように作者さんの次回作に向けて応援してあげてね！』</B>
　という考え方自体は、とても重要なことだと思っています。

　この考えは、順位に納得が行かない人に対してのいくらかのなぐさめになるところもあり、また、他の人もこの文言を使って順位にガッカリした人を励ましてくれていたりするところもあったようなので、書いてよかったなと思っている部分です。


　でもこれだけだとやっぱり足らず、「順位に納得が行かない」の空気が決定的に減ったのは、やはり前述の「各部門の順位表記の追加」のときだったように思います。
　昔は<B>「自分が好きならみんなも絶対好きなはずだ！」</B>という感性が皆さんの間でかなり根強かった感触で、「好きな作品が高順位にならないのが本当に理不尽だ」と思われる方も多かったように思うのですが、「部門別の順位表記」が出るようになったおかげで<B><span style="color: #d50000">「順位を落とす作品には、多くの人に合わなかった部分も含まれている」</span></B>というのがだんだん理解されていった印象でした。


　ちなみに、私の一番好きなゲームはウディコンではしょっちゅう7～10位くらいになっていました。
　私は『よく分からない状態から探っていく』ゲームや『かなりクセがある』系のゲームもけっこう好きで、たまに激ハマりする作品があるのですが、そういうタイプはどうしても「遊びやすさ」で点を取れないんですよ！


<HR>
<span style="font-size:120%;"><B>【多くの手順を自動化して運営を省力化した】</B></span>

　また、第4回からは基本的に1人でウディコン運営をすることになりました。必要なら協力者の方にごく短期間だけ手伝っていただいたりしています。

　基本1人ベースにしたのは、それまでの審査員のみんなの心身の負担がとても大きかったので「ここから先は、何かあったときに責任や負担を負うのはもう自分だけでいい」というヒロイズム精神による側面もいくらかあったように思います。
　ですがそれと同時に、<B>「何かあったら一人で爆散すればいいんだ！　一人なら何もこじれずにやめられる！」</B>みたいな気持ちも裏にありました。
　それまでの第3回までに感じていたキツさが度を越していたからかもしれませんが、なかなかヤケな感じが出ていますね。
　
　なお第3回までのコンテスト運営作業で特に大変だったのは以下の3点で、このあたりの労力をカットできればだいぶラクができると考えた私は、サーバープログラムによる『自動化』を進めていました。

<span style="color: #d50000"><B>◆新規エントリー作品が来たときのページ更新作業</B>
→　作品のエントリーチェックが終わったらボタン1発で追加登録できるのが理想です。
　
<B>◆エントリー情報（ゲームデータ）の差し替え対応作業</B>
　→　最終的には「エントリー内容修正フォーム」ができて、何もしなくてよくなりました。
　
<B>◆結果発表ページの作成作業</B>
　→　集計済みのデータを入れたら自動的に結果発表ページを作ってくれるものが理想です。</span>

　第1～3回あたりまではこれらを手動で行っていたのですが、正直かなりの労力を支払わなければならず、控えめに言っても地獄のようでした。運営に協力してくださった審査員の皆さんには感謝の限りです。

　もちろんこれ以外にも「お問い合わせ」や「その他の問題」がいっぱい来ており、その対応にも追われている中でこの作業もやらねばならないわけです！
　なので私も審査員の皆さんも心身の負担は大きく、第1～3回ウディコンでは途中から全員死にそうな気分になっており、コンテストが終わる頃にはお互いが「死線をくぐり抜けてきた戦友」みたいな雰囲気になってしまうほどでした。


<B>【自動化は一部分ずつ進めていました】</B>

　私は何の因果か、それまでのサイト運営で「Perl」という、サーバー上で動作するスクリプト言語を少しだけ扱えるようになってので、投票ルールが変わる第4回前から運営をラクに行えるウディコン運営システムを徐々に作っていくことにしました。
<span style="color: #90caf9">（ただ今ではPerlはさすがに古いので、せめてPHPなどがおすすめでしょうか）</span>

　まず最初は「一部分の自動化」をして運営し、また手作業での実際の運営手順を洗い出し、作成すべき結果発表ページの構成が見えてきたらそこも自動化し……。
　と繰り返していって、それから何度かのウディコンを経ていく中で、今もコンテストシステムは改修・増築され続けています。

　今では前述の3つの重い作業「エントリー」「差し替え」「結果発表」において、人間の判断力がいらない単純作業は大部分が自動化できるようになっています。

　コンテスト運営は、1回目はまず手順を洗い出すために手動で運営しなくてはならないとしても、2回目以降はその手順を元に自動化の仕組み作りができるので、自動化し始められると一人でもコンテスト運営が可能になると思いますよ！

　最近はAIに頼めばプログラムやHTMLも作ってくれる時代なので、サーバープログラムについてあまり知らない状態からでも、コンテスト運営システム作成の実現しやすさは上がっていると感じます。



<HR>
<span style="font-size:120%;"><B>【作品紹介を個別ページにせずズラっと並べた、思わぬ効用】</B></span>

　ウディコンは最初、<B>「『作品別の個別ページ』を作って、作品名をクリックするとそこへ飛ぶようにしようかな？」</B>とちらっと思っていたのですが、結局1ページ内に多数の作品が並ぶ形になりました。これには特に強い意図はなく、単純に私が作りやすかったからでした。

<img src="../../image/2024/20240907D.png" border="1" style="max-width:520px;" loading="lazy" height="509">
　　<span style="color: #a0a0a0">↑第16回ウディコン、エントリー一覧ページ</span>


　ですが今思うと、ズラっと1ページ内に作品群が並んでいることには大きなメリットがありました。
　それは、外部サイトからリンクをクリックしてやって来たプレイヤーの人がこのページを開いたとき、今みたいに一覧で並んでいる方式ならば<B><span style="color: #d50000">【周りのいくつかのゲームも絶対に目に入る】</span></B>ということ！
　外部から「個別ページ」へのリンクだと、その1ゲームしか目に入らないので広がりがないのですが、1ページ内にたくさんゲームが並んでいればついでに他の作品も目にするチャンスも増えますし、何より普通に遊ばれる方にとっても次々に「ダウンロード」していきやすい！

　そういう意味でも、1ページ内に全エントリー作品群の情報がまとまっている方式は、今はとてもアリだったなと思っています。



<HR>
<span style="font-size:120%;"><B>【結果発表前の2時間前から、カウントダウン発表をするようになった】</B></span>

　2014年の第6回ウディコンから、Twitter（現X）で上位12位の「カウントダウン発表」を行うようになりました。
　これは単純で低コストながら、感情面においてかなり大きな効果を感じられるイベントで、それ以後ずっと行っています。

　「カウントダウン発表」がどういうものかというと、まず全ての結果発表が土曜日の「21：00」に行われる予定だとします。
　そうしたら、2時間前の19:00からTwitterで私が
<B>「さーて今回の第12位は……『【作品名】』です！　遊びやすさとその他部門で5位を獲得ー！！」</B>
　みたいに順位を発表していきます。

　そして10分経つごとに「今回の第11位！」、「10位！」みたいにカウントダウンで発表していき、20:50に「今年の第1位」が発表されるわけですね！

　
　この方式、ただ情報を小分けに発表していくというだけなのですが、1位分の発表ごとに、作者さまは自分の作品が来ないかとドキドキし、一般審査の皆さんも自分の応援した作品が来ないかとドキドキできるので、思った以上に感情を盛り上げられる効果があったように思います。
　「だいたいの結果は想像できるけど実際どうなるか分からない」中での答え合わせって、ゲームでもそうですけどなんでこんなに興奮するんでしょうね。

　なお上位を取れる見込みがある作者さまは、この2時間近くのあいだ、人によっては「早く楽にしてくれー心臓がもたないよー！！」みたいな、まるで拷問のような苦しさを感じるそうです。
　私も「これ作者さまにはいじわるなイベントだなあ……でもやったほうが面白いからなあ」と思いながらやっています。こんなにジリジリ待たされるの、人生の中でもなかなかないですよね。
　作者さまには心の中で謝罪しつつ、このやり方自体は今後も続けていく予定です。


　そしてここまで挙げた第6回ウディコンまでのアップデートによって、ウディコンの全体のおおまかなルールはほぼ完成され、今に至る第16回まで使用され続けています。
　もちろん細かな規約変更はときどきありますが、ウディコン運営における特徴的な部分に関しては、以上でおおよそ全て紹介できたと思います。


<HR><span style="font-size:large;"><B>◆ウディコンの今後の見通し</B></span><HR>
　さて、ここまでウディコンの主なルール変更の歴史を語ってきましたが、ここからは将来の話をさせていただきます。

<HR>
<span style="font-size:120%;"><B>【ウディタのユーザー数はたぶん縮小中】</B></span>

　いきなりですが、ウディタのダウンロード数は基本的に減少傾向にあります。
　最近はもう測ってないのですが、12年前の全盛期に比べると今はアクセス数もダウンロード数も15%（1/6以下）くらいかそれ以下になっているはずです。

　昔と違ってガッツリゲームを作りたい人には、普及率の高いUnityや、人気が高まりつつあるGodotエンジンがありますし、PC版のRPGツクールシリーズはブラウザ版やスマホ用データが作りやすくて今も健在ですし、ノベルゲーム分野でもティラノビルダーなど多数のツールがありますので、おのおの使いやすい開発ツールを使ってくださっているのだと思います。
　よって、今からわざわざウディタを選ぶ理由はあんまりないはず！　私も未経験なら、就職に有利かもしれないUnityあたりをお勉強しているでしょう。


　ゲームを作りたい人は、それぞれが一番良いと思った道具を選んで歩まれていることでしょうから、ウディタが使われなくなること自体は1ゲーム開発者として応援すべきことだと思っています。
　私自身、RPGツクールの進歩と共に成長して、最後には巣立った身ですからね！
<span style="color: #90caf9"><span style="font-size: 80%">（初期からのRPGツクールは新機能や柔軟な機能がどんどん増えていって、その過程でユーザーは自作システム作りやアルゴリズム作りに慣れることができました。スクリプトが搭載されてからはプログラミングができる人も増えました。そこから別ツールに移った人もいれば、私なんてツクールで学んだプログラミング技術をとっかかりにしてウディタという派生ツクールまで自作できたのです！）</span></span>


<HR>
<span style="font-size:120%;"><B>【縮小していく中でも楽しめるコンテストを】</B></span>

　そしてウディコンも、新規ユーザー数の少なさから縮小方向に向かっていくと考えています。
　なぜかコンテスト規模が落ちていないのは単純に、「リピーター」になってくださっている作品参加者の方や一般審査の皆さまのおかげです！　応募作品にいたっては、今回の第16回でも「過去に参加経験がある方」の作品だけですでに<B><span style="color: #d50000">50%分</span></B>くらいに達しているはずです。

　私の何度かのコミュニティ運営経験から推測すると、時が経つにつれて新規参加者の方がほぼいらっしゃらなくなって、最終的には「<B>経験者だけが回す同窓会</B>」みたいなコンテストに近付いていくでしょう。
　そしていずれ40～50作品ほぼ全てが経験者の作品になって、それもだんだん減っていって、最後にもう旧知の仲になってる人同士で10～20作品くらいのご応募があったあたりで、私が
<B>『ウディコンは今回で最終回とします。これまでXX年間ありがとうございました！』</B>
　と言って終われることを、自然で理想的な将来像とおいています。
<span style="font-size: 80%"><span style="color: #90caf9">（なお理想的じゃないルートとしては、炎上して次回開催が不能になったり、想像以上に早くしらけちゃう事故が起きて衰退したり、私が事故に遭っていなくなることですね）</span></span>

　当たり前のことですが、ものごとが永遠に続くなんてことは絶対にありません。
　そしてだからこそ、『<span style="color: #d50000"><B>人口が減っても楽しめる</B></span>』ようにできれば一番理想です。
　50人しかいない村でも、超盛り上がるお祭りがあったら楽しいですからね！　話題になれば外から観光客もいっぱい来ちゃうかも！　みたいな感じで。

　実際、ウディコンのルールは初期に比べてだいぶうまく機能したり、なじんだり、盛り上げに貢献できているようで、本当によかったと思います。
　
　また、仮に「<B>同窓会</B>」みたいになっても、この評価システムが機能している間は
<span style="color: #d50000"><B>『熱中できて、心に残って、見た目もこだわって、斬新で、遊びやすいゲーム』</B></span>
　を目指せるだけ目指して、みんな作り続けるでしょう。
　それを目指した作品はほとんどの場合、面白いはずですし、いくつかの作品はいつもの通り、「<B>新しい楽しさ</B>」や物語的な「<B>感動</B>」を運んでくれるはずです。

　なので、人が減っていっても、最後まで楽しみたっぷりで終われることを期待しています。もちろんその過程で、さまざまな運営努力や判断も求められ続けるのでしょうけれども。



<B>【いつか来る、ウディタもウディコンも利用されなくなる時代】</B>

　時代と共にウディタが使われなくなっていくのと同様に、ウディコンが利用されなくなっていくことも必然だと思います。でもそれは、必ずしも寂しいことではありません。
　なぜなら、ウディコンから注目が離れていくということは「他にもっと面白い場所がちゃんと生まれている」ということなんですから！

　ウディコンはそもそも『コンテストパーク』終了にともない、ウディタ利用者さまへの「やる気」や「宣伝効果」アップ目的で始まったものです。
　もっと他に「やる気を出せる場所」があったり「宣伝効果が期待できる場所」があるなら、ぜひそちらで思いっきり楽しんでもらうべきです。ウディコンが生まれた理由自体、「代わりがなかったから」なのですから、新しい選択肢が広がるのはとても素敵なことだと思います。

　どんなものも、もっと良いものが生まれる中で徐々に衰退していくのは自然の流れです。
　皆さんも新しいツールや新しい場所を探したり、そこに飛び込む心構えもいくらかしていただきながら、それでも今ウディタやウディコンが面白いのでしたら、その間は思い切り楽しんで活用していただければいいのだと思います！

<span style="color: #90caf9">　ということを本当の衰退期に言うと負け惜しみみたいに聞こえたりシャレにならなかったりするので、盛り上がっている今のうちに言っておきたかったんです！！</span>


　もしウディコンがいつか終わってしまったとしても、私はその浮いた時間でゲームを作って、他のコンテストに参加しているかもしれません。
　それもまた、私にとってはうれしい結末です。

<HR>

　ということで、ウディコンについていま思いつく限りのことを書いてみました！　だいぶ長くなってしまいましたが、いかがだったでしょうか。

　こうやっていざ見返してみると、ただコンテストをするだけでも色んなことを考えてきた気がしますね！
　そしてまた、ウディコンの在り方について思い出すいいきっかけになったとも思います。


　この内容が、これからゲームコンテストを開くかもしれない皆さまの一助となれば幸いです。
　そしてまた、楽しんでくれる人がいる限りは――そして私が楽しめている限りは、ウディコンを可能な限り続けていくつもりです！
　よければ来年のウディコンも、作品エントリー側としても、遊ぶ側としても、楽しんでいただけますと幸いです！
　
-----
EXTENDED BODY:

-----
--------
TITLE: ウディタVer3.4へ中規模修正中！+セキュリティ話
CATEGORY: ウディタ
DATE: 2024-09-20 12:31:01
-----
BODY:
　ということで現在ウディタがVer3.3台からVer3.40に変わるので、この機会に中規模アップデートしようと作業中です！
　
<HR><span style="font-size:large;"><B>◆Ver3.40で何がアップデートされそう？</B></span><HR>
　今回のアップデートでは大きな目玉要素はないかもしれませんが、「まとまった修正ができるならやっておこうかな」と思ってためていた内容の実装を進めていく予定です。
　リソース的・技術的にやれるか分からない挑戦も多いので実装されない可能性もありますが、今回は有力そうな一部をご紹介していきます。

<HR>
<span style="font-size:120%;"><B>【キャラチップレイヤーの指定を自由なレイヤー±値で設定できないか挑戦】</B></span>

　キャラチップレイヤーは元のキャラチップに1～5レイヤーで別のキャラチップ、たとえば服や手持ち武器などを重ねる機能です。
　従来は「元画像から上」の「1～5レイヤー」だけの狭い範囲、少ない枚数に画像を上乗せするだけでしたが、今後、『レイヤー「-1」や「-10000」みたいに裏側へ出せたり、無制限な値・枚数を入れても普通に使える』ようにできればだいぶ実用的になるはずです！　と思って機能改修を検討しています！
　追加で、キャラチップレイヤー処理で『レイヤー「0」を指定すれば本体チップをいじれる』ようにしておくのも汎用性の面でよさそうですね。
<span style="color: #808080">（ただし現状、「同じチップサイズ」じゃないと重ねられないのは従来通りになりそうですのでそこはご注意を！ これに対応しようとしたら問題が山ほど噴出したのでまだ難しいです）</span>

<HR>
<span style="font-size:120%;"><B>【変数操作の機能追加】</B></span>

　代入演算子に「=√[x1000]」を入れたり、右辺の計算に「ビット和（論理和）」「排他ビット（排他的論理和）」を追加してみる予定です。
　右辺の計算には「ビット積」だけがなぜかあったんですが、『片道勇者2』内でそれを使って『ビット和』を計算する処理を作っている最中に急に冷静になってしまいました。「自分でウディタに機能足せるんだからそこは作ろうよ……！」って。
　このあたりのビット操作処理ができるようになると、プログラミング知識が豊富な人ならより幅広いことや高速処理ができるはずです。

<HR>
<span style="font-size:120%;"><B>【セキュリティ周りの更新「ファイル個別暗号化」】</B></span>

　今回も新しいプロテクト方式と新しい暗号化方式を追加予定ですが、その他に、もし作れそうならプロ版機能として「<B>ファイル個別にユーザー自身で暗号化できる機能</B>」も搭載できないかなと考え中です。
　1個ずつのpngやtxtファイルをユーザが設定したキーで暗号化でき、その画像やテキストファイルはエクスプローラーからなどでは直接読めなくなります。

　おそらく、<B>「ゲーム内でその暗号化ファイルの読み込み時に正しい【復号キー】が設定されていないとファイルとして読み込めない」</B>という形になるでしょう。
<span style="font-size: 80%"><span style="color: #808080">（開発中は元ファイルと暗号化済ファイルを並べて置いておけて、ゲームデータ作成時に暗号化済ファイルがあるファイルが消される、みたいな形が扱いやすくて理想だと思います。当然、開発中でも暗号化済ファイルがあればそちらの方を優先して読みに行くようにして）</span></span>

　データを暴こうとする人は仮に.wolfファイル(暗号化フォルダ）を解凍できるところまでいっても、個別暗号化ファイルの【復号キー】をファイルごとにコモンイベントやマップイベント内から探さないといけないので手動解析の手間が増えますし、もしオンライン経由で必要なタイミングでだけ【復号キー】をDLしたりする形にするなら復号化がもっと困難になります。
　もっと強固にファイルを守りたい人向けの、最終防衛線的な機能になるでしょう。


<HR><span style="font-size:large;"><B>◆雑談　PC内のEXEだけでセキュリティを守るには限界があったお話</B></span><HR>
　私はこれまで、Game.exeやEditor.exeみたいなEXEファイルの逆解析って、たぶん機械語で出てくるからすごい読みにくいんじゃないかなー、となんとなく思ってたんですよ。

　ところがつい最近、セキュリティのお勉強がてらEXEファイルの逆解析ツールを使ってみたんですが、その性能に目玉が飛びました！
　私が試したのはアメリカ国家安全保障局が提供しているものだったんですが、まずは見てくださいよこれ！
　　↓
<a class="double-link blue" rel="lightbox[20240920]" target="_top" href="../../image/2024/20240921A.jpg">クリックで拡大
<img src="../../image/2024/20240921A.jpg" border="1" style="max-width:520px;" loading="lazy" height="192"></a>

　左側が私が手で書いたソースコードで、右側が作成済みのEXEファイルを逆解析して自動的に再構成されたコードです！　「右側」をご覧になると分かると思いますが、コード構成としては実質完璧に元の内容を復元できているんですよ！　すごい！

　つまり普通に作られたEXEファイルは、関数名や変数名が目隠しされた状態とはいえ、<B><span style="color: #d50000">『処理自体は全部見られる』</span></B>状態になってしまっているのです！
　こんなこと、普通に趣味プログラミングをしてるだけじゃ全然知りえなかったことです！　もちろん関連処理を全部しっかりコピーすればそのまま動作もするでしょう。

　ウディタ内でたとえると、EXEファイルそのものが「コモンイベント」だとすると、「コモンセルフ変数名」と「コモンイベント名」が謎の文字になってるだけで暗号化も何もされていないコモンイベントがそのまま見られるような状態になってしまっているのです！　やってる計算や文字列操作など全ての処理が分かってしまう！
　いちおうそれでも、「がんばらないと内容を解析できない」というのは全くそうなのですが、ここまでできてしまえば達人がじっくり見ていけば色んな情報が分かるので、解析のハードルは私の想定よりめちゃめちゃ低いです。たぶん今の私ですら、かなりの解析を進められるでしょう。
　そして何より、EXEの上にいくら暗号化を積み重ねても、EXE自体の中味が見え見えなので土台があまりにボロボロすぎて、時間たっぷりかけて解析をしようとする人から見れば何も守れていません。

　なので、ウディタ側で提供される暗号化処理も基本的には全て丸見え状態であり、ローカルファイル内（PC内だけで完結するゲームデータ）だけでセキュリティを守るというのは非常に困難だったのです。セキュリティについて学べば学ぶほど、そう確信します。
<span style="color: #808080"><span style="font-size: 80%">（なおプログラマー側がやれる最後の壁として、「難読化（コードを壮絶に読みにくくする）」や「仮想環境でEXEを囲って実行する（ただし処理が外部から見られにくくなるので高確率でマルウェア扱いされる）」といった対応策はありますが、ここまでするとなると個人レベルでやれることを超えています）</span></span>


　ツール提供側としては、（作業用のリソースが確保できるくらいのプロ版の売上げが出たら）半年に1回とか何ヶ月かに1回ペースで最新の暗号化方式を出すくらいならできる可能性はあります。
　が、どんなに強力なセキュリティを作ったとしても、今回の話のように前提自体が防御にあまりにも向いてないので、解析しようとする側が一定水準の能力を持っていれば絶対に暗号化なども破られてしまいます。
　原理的にそうならざるを得ないので、この点はどうかご理解ください。



<B>【それでもデータを守りたい場合は？　オンラインにデータを置く方式】</B>
　もしウディタ作品でどうしてもファイルやデータを守りたい場合は、サーバー依存のゲームのように、<span style="color: #d50000"><B>『イベントシーンやゲーム段階が進むごとに必要な画像やデータを一時的にダウンロードして使用する』</B></span>といった形でデータを守る仕組みが必要になるでしょう。
　実質オンラインゲーム化！

　今後はどうしても秘匿したいデータがある人向けに、サーバー経由でデータを取り扱うアイデアをマニュアルに記載していく感じの対応にしようと考えています。私がウディタのセキュリティ周りに時間を使っているとそれだけで寿命もお金もなくなってしまうので。



<B>【セキュリティの難しさを学べたことについて】</B>
　色々述べてきましたが、セキュリティ周りに関して今回みたいな説明ができるところまで勉強ができたこと自体は本当によかったと思っています。

　ファイルやEXEの解析とも部分的に関係がありますが「なんでチートがなくならないの？」という理由の一端を理解できましたし、アンチチートツールを提供してチート対策を実現している人たちがすさまじく不断の努力をされていることも理解できました。
　こういったセキュリティは、それだけを行う、優れた人たちが集まった専門チームが日々アップデートしていくつもりでやらないと防御しきれないものなのだと強く納得できました（そしてそこまでやっても、負けてしまうことがときどきあるのです）。

　とはいえ私も、その難易度の高さを理解した上で、かけられるコストの範囲内でのセキュリティ対応はやっていこうと考えています。
　ただコストの面として、ウディタの修正だけやっていても生活ができるならいいのですが、今月は2週間経過時点でプロ版収益から考えた時給が一時200円切ったりしてるのでとてもヤバいです！（今現在は時給230円くらい、皆さんありがとうございます！）。
　まとまったセキュリティ更新のチャレンジとしては、今回の修正をいったん最後にしようと思っています。私が餓死しちゃう！

<HR>
　ということで、今もみっちりウディタの修正作業中です！
　日々勉強で楽しいのは楽しいですが、ゲームの方を作らないと本当に生活がまずいので、ウディタ開発もほどほどにバランス良くがんばっていきたいですね！

　9月内におおよその修正が終わればいいのですが、優先して入れるべき面白そうな機能を思いついた場合はその分遅れていきます。
　そうなった場合は、次回も新機能のご紹介が続くでしょう！

　ということで、ウディタVer3.40中規模更新、ほどほどの期待でお楽しみに！
　出せる情報があったら、<a class="double-link red" target="_blank" href="https://x.com/WO_LF"><B>X(Twitter)</B>[要Xアカウント]</a>などでもちょいちょい情報を出して行ければと思います！
　
-----
EXTENDED BODY:

-----
--------
TITLE: 続、ウディタ中規模アップデート作業中！
CATEGORY: ウディタ
DATE: 2024-10-05 08:57:47
-----
BODY:
　ということでずっとみっちりウディタの修正作業中です！
　セキュリティ周りみたいな、「表にご報告しにくい割に膨大な作業量の場所」はおおよそ済んだので、あとは楽しい新機能搭載フェイズ、というところです！

　今回はここまでに実装に成功した、ちょっと興味深いであろう新機能についてご紹介していきます！

<HR><span style="font-size:large;"><B>◆Ver3.40の新機能、一部紹介！</B></span><HR>
<span style="font-size:120%;"><B>【空のイベント作成機能（※裏技）】</B></span>

　一部の人から割と待望されていた<span style="font-size: 150%"><span style="color: #d50000"><B>「空のイベント」を作る機能</B></span></span>が搭載されます！　うまくコマンドにおさまらなかったので文字列操作の隠し機能による裏技になってしまいましたが上級者の方しか使わないと思うので問題ないはず！
<span style="color: #90caf9">（隠し機能：「文字列操作」の「に↓のファイル内容読込」を選んで「<<」から始まる裏コードを入れると使える機能）</span>

 <span style="font-size: 90%">↓空イベント生成コマンドの開発中デモ。大量の夕一が新イベントとして生成されています。まだ開発途中なせいで初期位置が（0，0）になっており目標位置までニワトリがコンベア出荷されてるように見えますが、完成版では目標位置に「瞬間表示」で出現します</span>
<iframe width="520" height="300" src="https://www.youtube.com/embed/g96jpqYU0U0?si=oeobfw_s_Z0f01Br" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

　この『空イベント生成機能』、使い方としては「文字列操作」の「に↓のファイル内容読込」に隠しコードとして

<span style="font-size:large;"><span style="color: #d50000"><B>&lt;&lt;MAKE_EVENT_X=4/Y=2/TR=1&gt;&gt;
CharaChip/[Chara]Animal_Chicken.png</B></span></span> (※続けて1行で入力)

　みたいに指定すると、座標（4，2）に、「決定キーで起動」(TR=1)する、画像「CharaChip/[Chara]Animal_Chicken.png」の新イベントを設置することができます！
　XY座標や画像だけでなく、イベントの「<B>起動条件</B>」も（TR=1:決定キー、2:プレイヤー接触、3:イベント接触）から指定できます。

　「でも生成されたイベントはコマンドが空だから『<B>起動条件</B>』なんて関係なくない！？」と思われるかもしれませんが、今回の中規模修正で<B><span style="color: #d50000">プレイヤーが起動した空イベントのIDを検出できる</span></B>ようにする予定なので、意味はあります！
　空イベントでも「起動さえ検知」できれば、熟練者の方なら何とでもしようがあるはず！
<span style="color: #90caf9">（たとえば「変数操作+」の中に「<B>今フレームの決定キー/接触で起動したマップEvID</B>」を得られるコマンドを新たに付けたりすれば実現できると見込んでいます）</span>

　これらの機能を駆使すれば、究極的にはマップエディタで1キャラも置かなくったってイベントを配置・制御できるようになります！
　ただしイベントの最大配置数は「10000個まで」となっておりますので、そこはご注意を。

　また、「生成されたイベントID」も返り値として得られるので、そこもご安心ください（文字列変数に"12"みたいな文字列が入るので、「変数操作」を使って数値に変換してください）


<B>【ついでに「イベント削除機能」も搭載！（ただし空イベントのみ）】</B>
　ちなみにイベント生成機能に対して、「イベント削除機能（<span style="color: #d50000"><B>&lt;&lt;DELETE_EVENT_ID&gt;&gt;(イベントID) </B></span>）」も作りました。ただし、こちらは実質「空イベント」しか消せません。
　コマンド実行途中のイベントが消えるとクラッシュしてしまうことが分かったので、「何もイベントコマンドを持っていない」「ページ1つだけ」かつ「自動起動でも並列起動でもない」のイベントの場合だけ削除可能となっています。



<B>【このイベント生成・削除機能で何ができるか？】</B>
　で、空イベントが生成できると何がいいかって、色々あるんですよ！　たとえば以下のような用途が考えられます。


●『牧場物語』系みたいな<B>「作物が無限に出てくるゲーム」</B>や、<B>「キャラやアイテムが置き放題なオープンワールドゲーム」</B>を作る場合でも、あらかじめ空のイベントを大量に作っておく必要がなくなります！
　これまではその用途でマップイベントを使うために、マップに5000個（エディタの限界数）の空イベントを作られたという方もいらっしゃいますからね！　これからはそういったことをしなくても、必要なときに空イベントを作れば大丈夫になるわけです。

●他にも、「<B>どのマップに行っても100人くらい仲間がついてくる</B>」とか、「<B>そもそも特定マップに固定配置のキャラがいなくて、みんな常にどこかの色んなマップを歩き回っている</B>」ようなRPGを作るときだって便利になります！

●「<B>マップチップの一部をキャラチップで代用したい</B>」場合にも有用です！
　マップチップの「タグ」に応じて「自動でその場所にマップイベントを配置し直したりする」なんてことも少ない作業数で実現できるようになるので、マニアックな配置をしたいときでも安心です！
<span style="font-size: 80%">（さっきのMAKE_EVENTコマンドの画像指定で<TILE>4みたいに入れるとタイル画像が設定できます）</span>


　従来でも、これらはどれも「全マップに大量の空イベントを作っておく」ことで対応可能な案件ではありましたが、そんなことまでして作りたくない場面も多かったでしょうから、今後はそういった作業が必要だった作品ももっと作りやすくなるはずです！
　すでに「夢が広がる～」とおっしゃっている方は、そういうところで挫折した経験や苦労された経験がお有りなのだと思います。今後はそこもラクになりますよ！


<HR>
<span style="font-size:120%;"><B>【ファイル個別暗号化(プロ版機能)で「フォント暗号化」ができた！】</B></span>

　「ファイル個別暗号化機能（復号キーなどを設定して.wolfxファイルに変換できる）」自体は前回もご紹介しましたが、それで得られた副産物として、<span style="font-size: 150%"><span style="color: #d50000"><B>『フォント暗号化』</B></span></span>が可能になりました！

　たとえば「UmePlusGothic.ttf」をファイル個別暗号化すると「<B>UmePlusGothic.ttf<span style="color: #d50000">.wolfx</span></B>」ファイルに変換されるわけですが、これをGamePro.exeと同じ場所や、Dataフォルダ内に入れておくと、普通のttfファイルと同じく起動時に読み込みが可能です！
　それでいてttf.wolfxは暗号化されているので、直接Windowsで読み込むことはできなくなります。ファイル名も「Font1.ttf.wolx」みたいに変えれば何のフォントを使っているかも分からなくなるでしょう。

　こういう形で使えば「<B>二次利用可能な形での再配布</B>」ではなくなるらしいので、ある程度は使えるフォントの幅も広がると思います。もちろん、フォントごとの規約はしっかり守ってくださいね！
　ただしこの「ファイル個別暗号化」機能は『プロ版専用』なので、その点はあらかじめご了承ください。ウディコンなどでは使えないってことですね。


<HR>
<span style="font-size:120%;"><B>【エディターのウィンドウサイズの調整や、フォント切り替え（2種）ができるようになった！】</B></span>

　「エディターオプション」からエディターのウィンドウサイズを調整できるようになりました！
　「マップイベントウィンドウ」や「イベントコマンド挿入ウィンドウ」が思ったより幅を取るからあと1割だけ小さくしたいんだけど……という私みたいな人や、3840ディスプレイ持ってるけどWindowsの拡大率100%だとだとウディタ画面が小さすぎるよぉぉ！　という人のために搭載されます！

　といっても技術的な都合で拡大できない場所もあるのでそこはご了承ください。いつも見るであろう「マップ/コモンイベントウィンドウ」や「データベースウィンドウ」、「コマンド入力ウィンドウ」あたりは押さえてありますが、メニューアイコンや上部メニュー欄などの拡大縮小はちょっと難しそうだったのでできていません。


<B>【エディターのフォント変更機能】</B>
　あとフォント変更も2種から選択可能に！
　これまでは「MS UIゴシック」というカクカクフォントでしたが、これからは「Meiryo UI」というなめらかフォントも選べるようになります！　また、「太字」への切り替えもできますよ。

<img src="../../image/2024/20241005C.png" border="1" style="max-width:520px;" loading="lazy" height="368">


<HR>
<span style="font-size:120%;"><B>【「マップエディタ」や「場所移動の移動先選択」で「x2」拡大モードを追加！】</B></span>

　これもディスプレイの画面解像度が上がってきた時代に対応するためのもので、マップチップを1/1よりさらに大きい「x2」ズームで表示できるようになります！
　一見簡単に作れそうに見えましたが、ちょっとやりかけたらすごい作業量が必要だったので今回のチャンスを待っていた部分です。需要はそこまで高くなかったかもしれませんが、この機会に入れられて何よりです。

<img src="../../image/2024/20241005D.png" border="1" style="max-width:520px;" loading="lazy" height="221">

<HR>
　という感じで、今も毎日全力でウディタ修正中です！
　いつものことですが早く終わらせないと作業の時給換算がマズいですからね！　それが全力で頑張れる動機になっているのは良いことではあるんですが。

　実装に成功すれば紹介に値するであろう新機能の予定は他にもありますので、引き続きお楽しみに！
-----
EXTENDED BODY:

-----
--------
TITLE: 続々ウディタ3.5開発中 経路探索&ｷｬﾗﾚｲﾔｰ強化ほか！
CATEGORY: ウディタ
DATE: 2024-10-19 08:52:03
-----
BODY:
　引き続きウディタ3.5への改修作業を続行中です！（3.40呼びしてましたが搭載予定の新機能が多くなりすぎるので、3と4の中間大規模修正として「3.5」呼びにすることにしました）

　ここまでにご紹介した目玉新機能は「空イベントの生成機能」「フォント暗号化」など！
　今回も、「作れる内容」や「作り方」が大きく変わる目玉の新機能が続々登場です！

<HR><span style="font-size:large;"><B>◆ウディタ3.5の新機能予告、続き！</B></span><HR>
<span style="font-size:150%;"><B>【○経路探索機能！】</B></span>

　まず「経路探索機能」とは、スタートとゴールの座標だけ指示したら、ゴールまでの道順を自動的に算出してくれる機能のこと！
　紹介動画を作りましたので、見られる方はまずそちらをご覧ください！　直感的に理解できると思います。

<iframe width="520" height="300" src="https://www.youtube.com/embed/3HYipq_Kn-8?si=w4Oqf3xbRgKkAXM0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

　私の環境だと、迷路みたいな道でも500マスまで先の道の経路を1msくらいで算出可能でした！（1フレーム16.6msなので、それを超えない処理時間に抑えれば処理落ちはしないことになります）

　まともにコモンイベントとして作ると10マスくらいの経路探索でも重くなることがあるので、この速度で動作する経路探索処理が基本機能として使えるのはかなり大きいと思います。

<HR width="50%">
<span style="font-size:110%;"><B>-【どういう場面で使える？】</B></span>

　経路探索が簡単にできれば、以下のような処理の実現可能性がグッと上がります！

<span style="color: #2962ff"><B>●マウスクリックした地点まで、NPCや障害物を避けてキャラを移動させることが簡単に！
　
●ガイドボタンを押すと次の目標地点までの道順がラインで表示される、みたいな演出も当然可能！
　
●生活系ゲームで、キャラがベッドから起きて仕事場に行って食堂でご飯食べてまたベッドに戻る、みたいな処理だって従来より非常に簡単に作れます！
　
●建物も自分で設置できるクラフトゲームや開拓シミュレーションゲームでも、経路を自動認識して移動させることが簡単に！　木こりして指定箇所に木材を運ぶ、みたいな処理も実現しやすく！
　
●ローグライク（不思議のダンジョン）系ゲームでも、モンスターの移動経路や最短の接近ルートが簡単に算出可能になります！
　
●タワーディフェンスゲームで「敵の侵攻ルート」を算出したり、「自分の設置物で敵のルートが変わる」「ちゃんと味方陣地までの経路が空いているかを調べる」といった処理も低コストで実現可能になります！
　
●追いかけっこ展開でも障害物を避けて移動可能です！</B></span>


<HR width="50%">
<span style="font-size:110%;"><B>-【経路探索機能の使い方】</B></span>

　使い方はちょっとマニアックです！
　たとえば「文字列操作」の「隠しコード実行」コマンド（Ver3.5で搭載されます）から

　<span style="font-size: 150%"><span style="color: #d50000"><B>&lt;&lt;FIND_PATH_DIR8_SX=1/SY=2/EX=6/EY=5&gt;&gt;</B></span></span>

　と指定すると、マップの（1，2）座標[SX=/SY=の値]から（6，5）座標[EX=/EY=の値]までの道順を、以下のような文字列として得ることができます。

　<span style="font-size: 150%"><span style="color: #d50000"><B>　966662222/END</B></span></span>

　算出された移動経路は、テンキーに対応した1～9の方向を羅列した文字列で示されています。
　9なら「右上」、6なら「右」、2なら「下」なので、上の経路は<B>【スタート地点の（1，2）座標から右上、右、右、右、右、下へ4歩すると（6，5）に着きます】</B>という意味になります。

　方向じゃなくて1歩ずつの座標で知りたいよ！　という人も安心！　隠しコードに「/POS」を追加すれば、以下のように得られる経路の文字列が「1歩ずつの座標」として返されます。

　<span style="font-size: 100%"><span style="color: #d50000"><B>&lt;&lt;FIND_PATH_DIR8_SX=1/SY=2/EX=6/EY=5<span style="font-size: 150%">/POS</span>&gt;&gt;</B></span></span>
　　↓結果
　<span style="font-size: 150%"><span style="color: #d50000"><B>2,1/3,1/4,1/5,1/6,1/6,2/6,3/6,4/6,5/END</B></span></span>

　あとは「文字列操作」でいいように切り取って使ってください！　という感じです！

　なお、この経路探索は今のところ「1マスごと」の処理のみ可能です。1マスまるまる通行可能でないマスの場合、「通行できる」と認識されない可能性があるので、そこは注意してください。


<HR width="50%">
<span style="font-size:110%;"><B>-【イベントの当たり判定を考慮した経路計算も可能！】</B></span>

　このコマンド、素のまま使うと「マップの通行判定だけ」を考慮したルートを算出するのですが、隠しコードに「/EV=-2」(-2=主人公、ここには動かすイベントのIDを入れる）と入れると、<strong>『イベントの当たり判定を考慮した経路』</strong>を算出できます！
　&lt;&lt;FIND_PATH_DIR8_SX=1/SY=2/EX=6/EY=5/<span style="color: #d50000"><B>EV=-2</B></span>&gt;&gt;みたいな感じですね。マップイベントを動かしたいときは、マップイベントID3なら/EV=3みたいに指定します。

　以下の投稿みたいに、多数の猫が上下してる道でも猫を避けて移動が可能です！　ただしイベントのように動くものも考慮する場合、毎フレーム経路を計算しなおさないといけませんので、計算負荷は上がります。
<blockquote class="twitter-tweet" data-media-max-width="560"><p lang="ja" dir="ltr">【ウディタ3.5開発中　経路探索機能】<br>やったー！　経路探索機能に「マップイベントの当たり判定」もリアルタイムに反映してルート算出するモードができました！<br>元は「マップの当たり判定」だけチェックするものだったんですが、イベントを避けて移動させたいときも多いですよね。 <a class="double-link red"  target="_top" href="https://t.co/V0xoiNd8W8">pic.twitter.com/V0xoiNd8W8</a></p>&mdash; SmokingWOLF＠ゲーム開発者/片道勇者2開発中 (@WO_LF) <a class="double-link red"  target="_top" href="https://twitter.com/WO_LF/status/1844753966934204915?ref_src=twsrc%5Etfw">October 11, 2024</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<HR width="50%">
<span style="font-size:110%;"><B>-【経路探索にはどういうアルゴリズムを使ってるの？】</B></span>

　ここは余談ですが、経路探索アルゴリズムとしては、高速に最短経路の近似解を求められる<a class="double-link red" target="_blank" href="https://ja.wikipedia.org/wiki/A*"><B>「A＊（エースター）」アルゴリズム(Wikipedia、処理見本アニメあり)</B></a>を使用させていただいております。
　すごく簡単に言うと、「目的地への道の中で、より近そうな道から優先して探すことで、全ての道を試すよりもずっと速く経路を見つけられる」という仕組みのアルゴリズムです。
　ただし、このアルゴリズムで得られるのはあくまで近似解なので、常に「【最も短い】経路」が算出できるとは限らないことに注意してください。2番目くらいの距離の道を最終結果として返すことも多いです。
　ですがプロのゲーム開発の現場でも使われているくらいの優秀なアルゴリズムで、だいたいは良い経路を算出してくれます。多少最適じゃない道を出しても、ゲームという媒体なら「キャラやナビがポンコツだから」などで説明できますから安心！（？）


<HR width="50%">
<span style="font-size:110%;"><B>-【いずれはもっと簡単に使えるようにしたい！】</B></span>

　こんな風に隠しコードを使ったり、「文字列操作」を駆使しなければならないことから、いまのところ経路探索機能は『自作システムを組める人向け』の機能と言えます！

　が！　もし（私の作業負荷とゲーム内負荷の両方の意味で）軽い負荷で作れそうなら、<span style="color: #d50000"><B>「動作指定」内に、目標地点まで自動で移動してくれる「自動移動」処理なども入れたいなあ</B></span>と考えています。
　うまくいけば、<B>一歩ずつ歩く方向を指定する必要があった時代</B>が終わるかもしれません！　そうなればイベントシーンの作成負荷も大幅削減されますよね。

　ということで、自作システム作者さまにも普段使いの方にも夢が広がる経路探索機能の搭載、お楽しみに！


<HR>
<span style="font-size:150%;"><B>【○キャラチップレイヤー機能が強化！ レイヤー無制限化+サイズ不問+1レイヤーごとにエフェクト可能に！】</B></span>

　ずっと『（α版）』と書いてあった「重ねキャラチップ」機能ですが、今回の修正でたくさん進化して正式版となります！
　こちらも映像を作りましたのでよければご覧ください！

<iframe width="520" height="300" src="https://www.youtube.com/embed/BSqCdfPKVB4?si=dvky2duTmcCFsGGh" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
<HR width="50%">
<span style="font-size:110%;"><B>-【レイヤー5枚制限が撤廃、無制限に！　レイヤー番号も好きに指定可】</B></span>

　これまではキャラの「上」のみに5枚までしか置けなかったキャラチップレイヤーですが、これからはキャラの「上下」に「無制限に」重ねられるようになります！
　さらにレイヤー「-1000」みたいに好きな番号を入れても問題なく動作します！
　扱いがかなり雑でもよくなったので、キャラメイク系のゲームでもキャラチップに色んな服を着せたり武器を持たせたりできるようになるでしょう。

<HR width="50%">
<span style="font-size:110%;"><B>-【キャラ本体の裏側にも追加可能に】</B></span>

　さっきもチラっと言いましたが、キャラの「裏側」にもレイヤーを追加可能です！
　あとから表にも裏にも好きに追加できるので、これまでのような少ない枚数をギリギリで運用する必要がなくなります。ザツに管理できるのは大事！

<HR width="50%">
<span style="font-size:110%;"><B>-【重ねる画像サイズが自由に！】</B></span>

　これまでは「重ねるキャラチップ」は『本体とまったく同じ画像サイズ』でなければダメでしたが、最新版ではそこが自由になります！
　ちょっとくらいフォーマットが違ってても大丈夫！　
　本体よりだいぶ大きい乗り物に乗せることだって可能になります。

<HR width="50%">
<span style="font-size:110%;"><B>-【1レイヤーごとに色を変えたりXY座標をずらしたりできるように！】</B></span>

　さらにレイヤー1枚ごとに色相や彩度、明るさを変えたり、XY座標をずらしたりが可能になります！
　色違いの服を用意する必要はなくなりますし、レイヤーごとに多少のずれがあった場合はこれで補正可能です！　これで開発コスト削減！
　やり方は以下のように、画像ファイルの前に<>で挟んでオプションを指定するだけ！

　<span style="color: #d50000"><B>&lt;X+=4/Y+=-2/HUE=90&gt;CharaChip/Chicken.png</B></span>
　この例だとX座標に+4、Y座標に-2、色相90（0～360の範囲）の補正をかけたChicken.pngのレイヤーが表示されます。

　他にも、<B>/HALF</B>と入れると画像サイズを半分にしたりできます！　ウルファールを1/2サイズにちっちゃくして船に乗せたりも！
<img src="../../image/2024/20241019A.png" border="1" style="max-width:520px;" loading="lazy" height="229">


<HR>
<span style="font-size:150%;"><B>【○『ピクチャ挙動Ver2』が搭載！】</B></span>

　これまでのピクチャ挙動は、「表示」時の挙動が状況次第で違ってややこしかったり、ピクチャを挟めるレイヤーが少なかったりして少し不便でした。
　同じIDのピクチャを使った場合、文字列ピクチャを「表示」し直すたびに不透明度ゼロから表示され直したり、文字列から画像ピクチャを出すとワープしたり、画像ピクチャから画像ピクチャを出すとワープせずに移動したりと一貫性がありません！　「消去」指示すると「移動予定先」にワープしてから消えるという変な動作もありました。

　なので、ここでいろいろ整理しようと『ピクチャ挙動Ver2』の搭載を決定しました！
　Ver1の旧挙動とVer2では、以下のような挙動の差があります。


<B><span style="color: #d50000">●これまでのピクチャ挙動Ver1[旧挙動]</span> </B>
<span style="font-size: 80%">・<B>レイヤー挙動</B>：ピクチャ番号マイナス時の表示レイヤーが以下のようになります。
　「-1～-99999の場合は『キャラの下 ・ マップの上』に表示」
　「-100000以下の場合は『マップの下 ・ 遠景の上』に表示」
　
・<B>【表示】コマンド時の挙動</B>：
　すでに同IDでピクチャが表示されている場合、「異なる画像で【表示】」または「文字列ピクチャの【表示】」をした場合に、
　- 処理時間が残ってる状態だと『不透明度』が「直前のピクチャ指定時点の値の状態に戻る」
　- 文字列から画像、画像から文字列、文字列から文字列に切り替わるときに「新しい場所に瞬間表示される」という挙動になります。
　- 「ファイル読込ピクチャ」で全く同じ画像を【表示】した場合のみ、【移動】と同じ処理になります。
　- 他にも、「処理時間」ありで「消去」されるときは「移動予定先に瞬間移動して消え始める」という挙動になっています。
　という具合になかなかのカオス具合になっていました。</span>

　↓

<B><span style="color: #d50000">●ピクチャ挙動Ver2[ver3.5以降]</span> </B>
<span style="font-size: 80%">・<B>レイヤー挙動</B>：ピクチャ番号マイナス時の表示レイヤーが以下のようになります。
　「-1～-99999なら『フォグの下 ・ ★マップチップの上』に表示」
　「-100000～-199999なら『★マップチップより下 ・ キャラや▲マップチップの上』に表示」
　「-200000～-299999なら『キャラや▲マップチップより下 ・ マップの上』に表示」
　「-300000～-399999なら『マップより下 ・ 遠景の上』に表示」
　「-400000以下なら『遠景の下』に表示」
　
・<B>【表示】コマンド時の挙動</B>：
　すでに同じIDでピクチャが表示されている場合、処理途中でも「座標」や「不透明度」はその瞬間のパラメータを常に引き継いで処理されます。
　- すでにピクチャ表示済みの場合、常に【移動】コマンドと同等の処理が行われます。シンプル！
　- また「処理時間」ありで「消去」される場合も、「実行された瞬間の座標」で止まって消去される自然な動作になります。</span>

<HR width="50%">

　という感じです！　これまで開発されていた方はVer1のままにしておく方が安全ですが、今後の新作開発ではVer2をご利用になることをおすすめします！
　特に「★チップの下・キャラの上」あたりのレイヤーは従来ではピクチャを挟むことができなかったので、ムズムズしてた人も多いと思います。
　今後はもうちょっとピクチャも扱いやすくなると思います！


<HR>
<span style="font-size:150%;"><B>【○マップだけをピクチャに取り込む『&lt;MAP_SCREENSHOT&gt;』機能が搭載！】</B></span>

　すでにVer3.0で、画面全体をピクチャとして取り込んで使える「&lt;SCREENSHOT&gt;」機能が搭載されましたが、Ver3.5ではマップ画面だけを取り込む「&lt;MAP_SCREENSHOT&gt;」機能が搭載されます！
　使い方はピクチャの画像ファイル名に、「&lt;MAP_SCREENSHOT&gt;」と入れるだけ！
　そうするとその瞬間のマップがピクチャとして表示できます！

<blockquote class="twitter-tweet" data-media-max-width="560"><p lang="ja" dir="ltr">【ウディタ3.5新機能】<br>答え発表！<br>正解は「マップ画面のみ」をピクチャとして取り込める「&lt;MAP_SCREENSHOT&gt;」機能！<br><br>↑の投稿は毎フレーム&lt;MAP_SCREENSHOT&gt;を取得し続けて自由変形ピクチャや上下反転ピクチャとして表示した例でした！<br>今後はマップ画面の扱いの自由度が格段に上がります！ <a class="double-link red"  target="_top" href="https://t.co/VQWa268duu">pic.twitter.com/VQWa268duu</a></p>&mdash; SmokingWOLF＠ゲーム開発者/片道勇者2開発中 (@WO_LF) <a class="double-link red"  target="_top" href="https://twitter.com/WO_LF/status/1844334442049057134?ref_src=twsrc%5Etfw">October 10, 2024</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<B>【「全画面取り込みと変わらないんじゃ？」って？　いえいえ違うんですよ！】</B>
　このマップ取り込み機能、画面全体を取り込むのとあんまり変わらないように見えますが、重要なのは「ID0以上のピクチャを無視できる」という点！
　というのも、全画面を取り込んだピクチャを毎フレーム更新したりすると<span style="color: #d50000"><B>「2フレーム目から出した全画面ピクチャそのものも取り込んで表示してしまうので見た目がカオスになっていく」</B></span>という問題があったのです！　絶妙に使いにくい！

　ですが今回取得可能になったのは「マップのみ」なので、これを使えば「メニューやメッセージウィンドウ」、「直前に出した全画面ピクチャ」を取り込んだりせず、きれいなマップだけが使えます！　よって、さらに画面取り込みの使い勝手がよくなるわけです！


<B>【&lt;MAP_SCREENSHOT&gt;で何ができる？】</B>
　マップのみを毎フレーム「表示」し直せば、当然リアルタイムのマップがピクチャとして好きに表示可能！　これでできる表現の幅も格段に広がります！
　たとえば何に使えるかというと、演出強化の面では<B>「画面を斜めや上下逆さにしたり」</B>、<B>「サイケな画面演出や崩れたマップ画面を演出したり（細かくパターン分割して座標をずらしたり動かしたり、個別に色変えしたり）」</B>、<B>「【イラスト上のディスプレイ画面】にマップ画面を自由変形ではめ込みしたり、その状態のままゲームを続行させたり」</B>なんてことも可能になります！
　他にもプレイ面での強化としては<span style="color: #d50000"><B>「広大な範囲の全マップを裏で出しておいて、プレイ時はそれをCUT機能で切り出してピクチャ拡大して表示し、別々の場所で起きていることを分割映像で見せる」</B></span>なんてことも実現可能です。<B>「ダンジョンに侵入者が入ってきた！　今の侵入者はこういう動きをしている！（侵入者付近のマップ画面を切り取ってピクチャ表示する）」</B>なんていうライブカメラ的な演出もできます！　画面内に全マップをおさめるのがちょっと難しいですけども。


<B>【ミニマップ作りにも！】</B>
　さらにマニアックな話をすると、ウディタにおける「マップ画面」とはすなわちピクチャIDが「-1」以下のレイヤーでもあります！
　つまり『マイナスのピクチャでお絵かきした内容を<MAP_SCREENSHOT>で保存しておいて使う』という画像バッファみたいな使い方も可能！

　特に便利そうな用途として考えられるのがマップごとの「ミニマップ」自動生成機能です！　マップに侵入した際やロードした際、裏でミニマップの画像を作って「<MAP_SCREENSHOT>」で撮影しておき、あとはそれを「切り出し」表示したり「マスク」を使ったりして表に表示することで、良い感じにミニマップ自動生成＆表示ができそうです！

　実装できる技術さえあればアイデアは無限大！　ぜひ色々考えてみてください！

<HR>
　という感じで、ここまででさえ、「作り方そのもの」や「作れるゲームの幅」まで変わってしまう修正が盛りだくさん！

　私の介護もいったん終わり、長時間集中し続けてもよくて夜ずっと寝られる環境を得たことで5年ぶりくらいに全力が出せるようになってるので、プログラミング筋（きん）も絶好調です！
　さらに他の新機能にもチャレンジしていきますのでお楽しみに！


　便利度が上がるたびに「なんで自分の『片道勇者2』の開発でこれがなかったんだよォォォォー！」ってすでに何回か叫んでいますが、もっと自分が叫んじゃうような新機能も入れていきたいですね。
　引き続きがんばります！　次回の新機能紹介もこれに劣らないものが出せればと思いますので、お楽しみに！
　
-----
EXTENDED BODY:

-----
--------
TITLE: ウディタ3.5開発中その4　ピクチャリンク・DBソートなど
CATEGORY: ウディタ
DATE: 2024-11-02 08:01:19
-----
BODY:
　ということでたぶんその4くらいになったウディタ3.5開発の経過報告です！
　引き続き「これまで欲しかったけど入れられなかった新機能」をいろいろ追加中！
　今回もご紹介していきます！

<HR><span style="font-size:large;"><B>●キャラへのピクチャリンク機能</B></span><HR>
　今回の目玉！　マップイベントやプレイヤーなどのキャラクターに『ピクチャをリンク』させることが可能になります！

　ピクチャをキャラにピクチャリンクさせるとどうなるかというと、<span style="color: #d50000"><B>『ピクチャをキャラクターに永久に追従させられる』</B></span>ようになるのです！
　これは「マップイベント」を使う自作システムを作り込む人にはうれしい機能！
　もう<B>並列イベントでゲージのピクチャをキャラ位置に動かし続けなくてもいい</B>時代になります！

　より厳密には、ピクチャリンクすると<span style="color: #d50000"><B>「キャラの（マップズームも加味した）画面上のX・Y座標をリンクしたピクチャに『加算』し、マップズームに応じた『拡大率変化』をかける」</B></span>という処理が行われます。一言でいうと、キャラクターにピクチャがくっついたような動きをするわけです。

　紹介映像も作ってみましたので、よければぜひご覧ください！
<iframe width="520" height="300" src="https://www.youtube.com/embed/jFwaOTwFMcs?si=GgK6CS_4KqdQrAmu" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>


　で、ピクチャリンク機能は「エフェクト」コマンドの「キャラ」欄から使用可能でして、設定可能な内容は以下の通りとなっています。「マップズーム（の拡大率）への連動」は外すことも可能です。

・<B>ピクチャID</B>
　キャラにリンクしたいピクチャ番号を設定します。

・<B>リンクさせるレイヤー</B>
　- キャラの表に：キャラのすぐ表側にピクチャが表示されます（キャラ本体と同じく、リンクさせたピクチャが他キャラや▲チップで隠れます）。
　- キャラの裏に：キャラのすぐ裏側にピクチャが表示されます。
　- 影レイヤーに：「全てのキャラの足下」のレイヤー、かつ「地面のY座標(キャラの「高さ」を変更しても変化しません）」にピクチャが表示されます。（ピクチャレイヤーのマップの上、キャラの下とほぼ同じ）
　- ピクチャのまま：ピクチャのレイヤーのまま、キャラの座標や拡大率のみ反映し続けます。

・<B>連動させるパラメータ</B>
　- XY拡大連動：（マップズームを考慮した）画面X・Y座標をピクチャに「加算」し、マップズームによる拡大率の変化をピクチャにも反映させます。
　- XYのみ連動：（マップズームを考慮した）画面X・Y座標をピクチャに「加算」します。マップズームの拡大率はピクチャに反映されません。



<B>【どんなことに使える？】</B>
　ピクチャリンク機能の用途ですぐ思いつくのは、頭の上に状態異常マークや感情マークを出したまま歩かせたり、HPゲージを出したりすること！
　<span style="color: #d50000"><B>「キャラにピクチャをリンク」と1行指定するだけで、ゲージのピクチャがずっとそのキャラについていってくれます！</B></span>

　なおゲージを頭に出したいときは、ピクチャの座標は「中央下」基準で（0，-30）[※上に30ピクセルだけずらす]のように指定します。これにキャラの足下中央の座標が足されるので、自然に頭の上に表示されるのです。
　他にも、ただ「キャラの名前」を頭の上に出しておきたいだけでも、従来ほどの苦労は不要になります！　ピクチャを0，0座標とか0，-30座標あたりに出して、ピクチャリンクのコマンド1発おこなうだけで実現可能！


<B>【これまでアクセスできなかったキャラ間の描画優先度にも挟み込める！】</B>
　さらにはこれまで不可能だった、『ピクチャの表示優先度をそのキャラと同じ』にすることも、このピクチャリンクを使えば可能になります！
　これまでピクチャは、「キャラレイヤー全体や、マップ下地レイヤー全体の上か下」にあったので「自分の前にいるキャラで隠れるピクチャ」というのは作れなかったのですが、今回からはそれも可能！
　ピクチャでオーラを出したキャラが「木の裏」に行けば、オーラの一部も「木の裏」に隠れるようにできるのです！（従来のピクチャだと、「キャラだけは木に隠れてるけどオーラだけどうやっても木の前側にでちゃう」という感じになってしまっていました）

　他にも、透明キャラにピクチャをリンクさせれば、<B><span style="color: #d50000">「キャラの前後関係やイベント判定処理はそのまま使いつつ、キャラ描画だけを全部ピクチャで行う」</span></B>こともできるようになります。
　補正したピクチャをキャラに重ねて、HD-2Dっぽいエフェクトをかけたりするのもたぶんだいぶ簡単に！
　「影レイヤー」へのリンクも用意してあるので、影をピクチャで描画するようにだってだいぶ簡単にできるでしょう（これ自体は工夫すれば前もできたんですけれども）。

　さらには「<B>メッセージを頭の上に表示させたまま歩かせる</B>」なんてことも非常に簡単に作れるようになります！　これまでのように、並列イベントでずっとピクチャ座標をキャラに追随させる必要がなくなるので、かなりすっきりと処理を作れるはずです。

　私の開発中の『片道勇者2』でも多くのキャラの上下にゲージなどの情報を出すことをしているので、これが使えたらもっと簡単に実装が進んでいたと思いますが後の祭りです。



<HR><span style="font-size:large;"><B>●可変DBのソート（並び変え）機能</B></span><HR>
　ついに来ました、可変DBを特定の項目の値にしたがってソートする機能！
　ゲーム中のデータの並び変え処理を作らなければならなくなった人なら誰でも欲しかったはず！

　これは特定の「項目」の値の大小にしたがって可変DBの「データ」を並び変える機能です。
　「昇順（小→大）か降順（大→小）」か、「どのデータ範囲を並び変えるか」「並び変えにはどの『項目』の値を見るか」を指定してソートできます。文字列ソートもいちおう可能ですが、C++のstring型の文字の大小関係をそのまま使ってるだけなので、詳しい話は言えません。たぶんUTF-8のコード順になると思います。


　それでこのソート機能、それこそ「すばやさ順」で1ターン中の戦闘の行動順を計算する、といったことに始まり、「アイテムの性能別ソート」や、あるいは項目に「乱数」を入れてから並び変えることで「シャッフル」させることだって可能！
　いちいちこういうソート処理を苦労して作らなくてもよくなるので、これからはその労力を他に回せます！

　どこまでできるかの紹介は下の動画で説明しておりますので、よければぜひご覧ください（でも動画内で素早さを「小さい順」にソートしてるのはちょっと変ですね！　素早さで行動順を算出するなら「大きい方」から並べないと！）
<iframe width="520" height="300" src="https://www.youtube.com/embed/SIC74r5De8o?si=nyHXtkB3YI0HbWkb" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>



<HR><span style="font-size:large;"><B>●Editorで右クリックから特殊文字入力</B></span><HR>
　ウディタには、数値欄に1600000（コモンセルフ0）のように100万以上の変数呼び出し値を入れることで、数値そのものでなく「変数の値」を指定できる機能があります。
　主な入力箇所では変数用のプルダウンメニューが使えるので別に使わなくてもいいんですが、けっこうなところでこの入力方式を要求する場所がありました。

<img src="../../image/2024/20241102A.jpg" border="1" style="max-width:520px;" loading="lazy" height="357">

　そこで！　Ver3.5からは上の画像のように、数値欄の右クリックメニューに各種特殊文字を入力できる機能が搭載されます！
　「数値欄」には変数呼び出し値を右クリックメニューから見本入力できるほか、「文字列欄」には￥v[？]や￥f[？]のような「特殊文字」も指定可能！
　今後はいちいちマニュアルなどを見なくてもよくなります！


<HR><span style="font-size:large;"><B>●総合的なパフォーマンス向上</B></span><HR>
　ウディタ3.5では細かなところでパフォーマンスが向上します！


●【起動時間/調整】Editorの起動時間が短縮されました。
→ 【参考】　サンプルゲーム入りEditorの起動時間が作者環境で　<span style="font-size: 150%"><span style="color: #d50000"><B>約19秒→約11秒（約40％カット）</B></span></span>　に短縮されました。

→　代わりに各イベントコマンド入力欄の<B>「初回表示」時のみ0.数秒～1秒程度の待ち時間がかかる</B>ようになります。2回目以降の切り替えは高速です。
（最初に全てロードせず、初めてクリックされたときにコマンド入力欄をロードするようにしたためです）


●【文字列操作/調整】「上1行切り出し」の処理速度が向上しました。
→　16KBで320行のファイルを30回、1行切り出しで最後まで読み込ませたテストでは処理時間が<span style="font-size: 150%"><span style="color: #d50000"><B>620ms→約360ms</B></span></span>になりました。
　処理速度にして約70％アップ！
→　テキストスクリプト機能を自作しておられる方が一番使う機能だと思いますのでそこそこ貢献できると思います。私もかなり使ってます。


●【コモンイベント・データベース/調整】
　コモンイベントやデータベースファイルに圧縮をかけるよう修正
→　サンプルゲームのファイルが以下のように削減されます！
<span style="font-size: 120%"><span style="color: #d50000"><B>　CommonEvent.dat　1232KB => 352KB (約71％削減！)
　DataBase.dat  88KB => 18KB  (約80％削減！)
　CDataBase.dat 81KB => 7KB 　(約91％削減！)
　SDataBase.dat 2,787バイト => 693バイト  (約75％削減！)</B></span></span>

　といった具合に、可能な範囲で細かなところの性能アップも行っております！
　あと、計測できなかったので載せていませんが、イベントコマンド切り替え時のレスポンスも全体的に上がってると思います。


<HR><span style="font-size:large;"><B>●「変数操作+」の大幅強化</B></span><HR>
　3.5では「変数操作+」で新たな情報が取得可能になります！

<span style="color: #2196f3">●【キャラ】コマンドに追加
- 画面X座標[ﾏｯﾌﾟｽﾞｰﾑ反映]
- 画面Y座標[ﾏｯﾌﾟｽﾞｰﾑ反映]
　→　通常の画面X・Y座標と違い、「マップズームの拡大率」の影響を加味した現在の画面上の座標を返します。
　
- すりぬけ属性[1=YES 0=NO]
　
　
●【位置】コマンドに追加
- キャラ通行可能方向[1上+2左+4右+8下]
- タイルのカウンター属性[1=YES 0=NO]
　
　
●【位置】コマンドに【画面座標】オプション追加 （「画面座標」は新規追加）
　「画面座標(ピクセル単位)」を指定し、その位置の情報を得ることができます。
　
- px座標のイベントID[ﾏｯﾌﾟｽﾞｰﾑ加味]
　→　指定座標下にイベントがあるか判定できます。
　　座標として「マウス座標(Sys71～72:ﾏｳｽXY座標）」を指定すればマウス下のイベントを返せます。マップズームも考慮します。
　　　
- px座標のイベントID+範囲拡張[ﾏｯﾌﾟｽﾞｰﾑ加味]
　→　接触範囲拡張部分も含めたイベントIDを取得できます。
　
- px座標のマップX[ﾏｯﾌﾟｽﾞｰﾑ加味]
- px座標のマップY[ﾏｯﾌﾟｽﾞｰﾑ加味]
- px座標の精密マップX[ﾏｯﾌﾟｽﾞｰﾑ加味]
- px座標の精密マップY[ﾏｯﾌﾟｽﾞｰﾑ加味]
- px座標の最上ﾋﾟｸﾁｬID[Z加味/なし:-20億]
- px座標の最上ﾋﾟｸﾁｬID[Z無視/なし:-20億]
- ピクセルのR値
- ピクセルのG値
- ピクセルのB値
　→　ピクセルのRGB値は、指定画面座標の1ピクセルのRGB値を0～255で返します。
　
　
●【ピクチャ】コマンドに追加
- ピクチャの横分割数
- ピクチャの縦分割数
- カラーR・G・B値
- 表示形式[0:通常 1:加算 2:減算 3:乗算]
- スクロールとリンク[ON=1]
- 設定された処理時間フレーム
- 現在の残り処理時間フレーム
- 最小の発動ディレイ(1以上のみ,なければ-1)
- 最大の発動ディレイ(なければ-1)
- IDより前にあるピクチャ番号[なし:同値]
- IDの次にあるピクチャ番号[なし:同値]
　
　
●【その他】コマンドに追加
- 今ﾌﾚｰﾑに決定/接触起動したﾏｯﾌﾟEvID(なし:-1)
　→　これを使えば新たに生成した空イベントの起動も検知できます。ただし起動した瞬間の1フレームしかイベント値を返さないので注意してください。
　
- マウスが画面内にあるか？(YES=1)
　
- ﾏｳｽ座標の範囲拡張EvID(小さいID優先,なければ-1)
　→　「接触範囲拡張」も考慮した範囲で、マウス座標下のイベントIDを得られます。</span>


　といった具合！

　新しい内容としては「指定IDより前後の、実際にあるピクチャ番号」が分かるようになったことや、「指定ピクセル位置のRGB値が取得できる」ことでしょうか。「画面上の指定ピクセルのRGB値を得られれば、それを大きな四角に広げてモザイク処理が作れるね」とおっしゃっている方もいらっしゃいました。

　あと他にも、「画面上のXYピクセル位置上の情報」を取れるようになったのも便利ポイント！　
　たとえば「マップズームを加味した指定ピクセル座標のマップXYマスの値」が一発で取れるようになったので、『マップズームが自由なゲーム』でのタイルやオブジェクト、範囲座標をカーソル選択する場合も、作るのがけっこう楽になると思います。

　他にも、「マップズームを加味したキャラの画面X・Y座標」や「イベントの接触範囲拡張を考慮したマウス下判定」を取得しやすくなったのは朗報だと思います！
　特に、「キャラをマウスで拾って移動させたりする」といった処理をする場合でも「接触範囲拡張」を広げてキャラのクリック範囲を広げてあげたりしやすくなるので、よければぜひご利用ください。
　これらはがんばれば計算できないこともなかったのですが、私もいちいちその補正を反映する処理を作るのが面倒臭かったですからね！



<HR><span style="font-size:large;"><B>●文字列操作の裏技に「画像の1点の不透明度+RGB値を得る」機能が追加！</B></span><HR>
　文字列操作の「隠しコード実行」コマンドとして、画像のX、Y座標の不透明度、RGB値を得る <span style="color:#CC0000"><strong>＜＜GET_IMAGE_ARGB_X=?/Y=?＞＞(ﾌｧｲﾙ名)</strong></span>コマンドが搭載されます！

　これは  (ファイル名)で指定した画像の、X=?、Y=?座標のピクセルの不透明度、RGB値を<B><span style="color: #d50000">「不透明度(改行)R値(改行)G値(改行)B値」</span></B>という文字列で得られるという機能！
  不透明度やRGB値はそれぞれ0～255の値を取ります。
  「不透明度が取得できる」という点が特に重要です！
　
　というのもこの機能で不透明度を得られるのが何に使えるかというと、
<span style="color: #d50000"><B>「クリック位置の『不透明度』をチェックして、画像中の立ち絵がある部分をクリックした場合だけ反応させる（透明な場所をクリックしたときは何も反応しないようにする）」</B></span>
　といった処理をしたい状況や、あるいは一枚絵マップを作る際、
<span style="color: #d50000"><B>「32ピクセルごとに画像をチェックしておき、もし不透明なピクセルがあったらそのマスは侵入不能にする」</B></span>
　といった自動判定をするのに使えます！
　他、自由な形状の「当たり判定」をあらかじめ自動認識しておくのにも使えるかもしれません。

　ただしこの機能は<B>「画像ファイルの左上を（0，0）とした座標を指定して情報を得る」</B>機能なので、たとえばマウス位置の画像部分が透明か知りたい場合は<B>「マウス座標が画像のどの位置にあたるか」</B>を計算し直する必要があります。その点はご注意ください。

　それでも画像の「不透明度」情報を得られるようになると、判定の面で色々やれることが広がります！　手作業で画像の当たり判定を作っておくという超面倒臭い作業の必要もなくなるので、もしそういうので苦労されていた方はよければぜひご利用ください。

<HR>

　といった具合に、今回も自作システム内の『作り方』からして変わってしまうような新機能がいっぱい！
　まだ次回予定分もたくさんありますので、引き続きウディタ3.5の情報をお楽しみに！
　
-----
EXTENDED BODY:

-----
--------
TITLE: ウディタ3.5開発中その5　自動移動･サウンドのパン機能など
CATEGORY: ウディタ
DATE: 2024-11-16 09:09:16
-----
BODY:
　ということでウディタ3.5開発の経過報告、その5です！
　「これまで欲しかったけど入れられなかった新機能」をまだまだいっぱい追加中！
　今回もご紹介していきます！

<HR><span style="font-size:large;"><B>●動作指定に「自動移動」機能を搭載！</B></span><HR>
　以前、隠しコードで「経路探索機能」を実装しましたよ～とお伝えしましたが、次はもっと使いやすいよう、「動作指定」に落とし込んでみました！
　それがこの「自動移動」コマンドです！
　紹介映像を作りましたのでよければまずそちらをご覧ください！

　※映像は開発中のものです
<iframe width="520" height="300" src="https://www.youtube.com/embed/8xnDOyTydN4?si=KHu0qyH1UplKhK1i" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

　この「自動機能」、行き先を指定すれば勝手にそこまで経路を判断して歩いて行ってくれます！
　モードとしては[単純][スマート][大負荷]の3種が用意されています。それぞれ以下の違いがあります。

<img src="../../image/2024/20241116A.png" border="1" style="max-width:520px;" loading="lazy" height="126">
　
- <B>自動移動[単純]</B>：最初に「マップ通行設定のみ(Evはないものとする)」で移動ルートを計算し、以後はルート通り進みます。進路上に他のイベントや主人公がいた場合は止まります。
　→　プレイヤーやイベントが道を塞いで止まってしまっても問題ない状況向け。
　
- <B>自動移動[スマート]</B>：最初に大局的な進行ルートを「マップ通行設定」のみで取得し、基本はそれに沿って移動しますが、他イベントや主人公が経路を塞いでいた場合は少し迂回して移動します。
　→　それなりに賢く移動させたい場合はこれがおすすめです。負荷もほどほど。
　　ただし「イベントでゴールまでの通路が塞がれている」場合は途中で止まってしまいます。
　
- <B>自動移動[大負荷]</B>：大局的な進行ルートも「マップとイベント両方込み」の当たり判定で取得し、数歩ごとに何度もおおまかなルートを再取得し直します。負荷が高いです。
　→　イベントが完全に道を塞いでいて、非常に遠回りせねばならない状況でも経路探索に成功する可能性があります。
　　ただし「ランダム移動するキャラがたまたま経路を塞いでいる」場合もそれに敏感に反応して大局的な進行ルートを変えてしまったり、「道がない」と判断して一時的に止まってしまったりする場合があります。

- <B>「自動移動一歩のみ」オプション</B>: 自動移動のゴール地点まで行かず、1歩移動した時点で処理を終了するオプションです。ゴール地点が頻繁に変化する状況で有用です<span style="color: #2196f3"><span style="font-size: 80%">（たとえばこれナシで「自動移動」すると、追いかけっこのときも「3秒前の主人公の位置」を追い続けてしまい、そこに一回着くまで自動移動経路が変わらない問題が起きます！　そういうときに「一歩のみ」オプションをオンにして「動作を繰り返す」ようにしておけば、1歩で終了→最新の場所を経路探索して1歩移動→……と繰り返すので常に最新の位置を追い続けてくれます。ただし負荷は高くなります）</span></span>


　という感じ！　基本は、キャラを避けて移動させたいなら「スマート」、そうでないなら「単純」モード、ゴール地点が移動する場合は「自動移動一歩のみ」をオンにする、で問題ないと思います！

<B>【これからの動作指定】</B>
　動作指定でこれまで↑↑→→↓↓←↑←↑みたいに1歩ずつ指定していたのが、今後は行き先までの経路を「自動移動」ワンボタンで設定できるため、動作指定の作業はかなり簡略化されると思います！　後述の「マップ表示」機能と合わせればさらにサクサク入力可能なはず！

　もちろん機能面での広がりも大きく、「スマート」自動移動で「たくさんイベントが歩く中をうまくよけて通らせる」ことがワンボタンでできるようになったのは非常に大きな点です。
　想像してみてください。酒場のウェイターやウェイトレスさんが、歩いている人を避けながらテーブルに食事を配膳しにいったり食器を回収しにいくような指定だってものすごく簡単にできるようになるんですよ！
　
　なんなら「自動生成されたマップ」や、「自分で1マスずつ壁を配置して作った村」内ですら、簡単に道を判断して移動させられるようになるというのはものすごく大きなメリットのはず！　仕事場に行って働いて、夜になったら自分の家のベッドに帰るなんて処理も簡単！
　作れるゲームの幅も一気に広がるはずです！


<HR><span style="font-size:large;"><B>●動作指定中の「マップ表示」機能も！</B></span><HR>
　そして引き続き「動作指定」画面の話なのですが、ウディタ3.5からは動作指定を設定中に並行動作するマップ画面を表示させることが可能になります！　むしろどうして今までなかったんだ感がありますが、実装はすごく面倒臭かったです！

<span style="color: #808080">　<span style="font-size: 80%">↓並行して表示できる「マップ画面」搭載！</span></span>
<img src="../../image/2024/20241116B.jpg" border="1" style="max-width:520px;" loading="lazy" height="293">

　このマップ画面は、「クリックした地点の座標」や、「そこにあるイベント名」を確認できるだけでなく、<span style="color: #d50000"><B>【ダブルクリックすると動作指定画面の「座標指定」欄にその座標がセット】</B></span>されます！

　なので今回の「自動移動」コマンドと合わせれば、

<span style="color: #2962ff"><B>　マップをダブルクリック（座標が格納される）　→
　「自動移動」をぽちっ　→
　次の移動先をダブルクリック　→
　「自動移動」をぽちっ</B></span>

　という手順を繰り返すだけで、あっという間に経路指定ができるのです！
　もうこれまでのように座標をメモしながら↑↑→→とか一歩接近とか入力しまくらなくてもいいんです！　
　
　これによって動作指定周りの入力効率が冗談抜きで10倍くらいになると思いますので、キャラを動かすのもこれまで以上に気軽にできると思います。


<HR><span style="font-size:large;"><B>●サウンドのパン機能！</B></span><HR>
　お待たせしました！　「サウンド」コマンドについに『パン』機能が搭載されます！
　その前に「パン」って何？って思われる方も多いと思いますが、これは「音の左右バランスを調整する機能」のこと！　右から鳴らすとか、ちょっと左から鳴らす、みたいなことができるわけですね！
　
　以下はパンの見本映像！　ヘッドフォン推奨です<span style="font-size: 80%">（画質が低すぎるとモノラル音声になってパンが体験できないので、その場合は画質を「360p」以上に上げてみてください）</span>
<iframe width="520" height="300" src="https://www.youtube.com/embed/dxk-pMUYuEA?si=n1CfRVAs3ON0B3th" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

　上の映像にあるように、「BGM・BGS」の再生においては、同じファイル名を指定して違うパンの値をセットすることで、「再生を止めずに」パンだけ変更が可能です！
　効果音は「再生開始時にしかパンをセットできません」のでその点はご注意を！
　もし右から左にぴゅ～んと流れる音を流したい場合は「BGS」などをご利用ください。
　
　このサウンドのパン機能、音の位置にこだわる場合は、たぶんどんなゲームにでも使えます。
　「右から戦闘の音が聞こえる！」といった情報はアクションゲームでも有用ですし、ホラーゲームで部屋の前を通り過ぎていく何者かの足音を表現したりするのも面白そうですね。
　パンは「-255（左）～0（中央）～255（右）」の範囲で設定可能で、いつものように「変数」でも指定できます。


<HR><span style="font-size:large;"><B>●DBやコモンからのデータベース参照が「タイプ名」でも可能に！</B></span><HR>
　このタイトルを見てすぐ意味が分かる人は相当のウディタリアンです！
　データベースの「データ名」や「データ内容の特殊設定」、コモンイベントの「入力設定」などにおいて、データベースから「データ名」を読み取って番号と一緒に並記する機能があります。それを「データベース参照」と言うのですが、これまではDBのタイプには「番号」しか指定できませんでした。
　が！　Ver3.5からは「タイプ名」の【名前】でも指定が可能となります！　以下の画像のように！

<img src="../../image/2024/20241116C.jpg" border="1" style="max-width:520px;" loading="lazy" height="454">

　「タイプ呼び出しなんて【名前】で呼んでも【番号】で呼んでも同じじゃん」と思われる方もいらっしゃるかもしれませんが、使い込んでいくと全然そうじゃないんですよ！　開発が長期に渡ると「DBのタイプの場所（番号）を入れ変えたい～！」ってなることが意外にあって、そんなとき番号でタイプ指定してるとヘタに場所（タイプ番号）が変えられなくて困るんですよ！
　一方、そこを「名前」で指定しておけば、DBタイプの番号が変わってもそのまま読み込まれるので安心！　というわけです！（まあ番号は変えられても、今度はDBタイプ「名」の方が簡単には変えられなくなるんですけども。でも名前は普通変えないですからね）

　ということで、これからはデータベースも整理しやすくなるでしょう！
　私もいま開発中のゲームで「DB並べ替えたいなあ、でも面倒臭くなるしなあ」と50回くらい思ったので、この機能を使ってきれいに並べ替えたいと思います。

<HR><span style="font-size:large;"><B>●オートタイルアニメ速度変更！</B></span><HR>
　ウディタのオートタイルは、画像を横に長くしてアニメパターンを作っておくと自動でアニメーションさせることができるのですが、これまでは「毎秒3コマ（20フレームに1回）」のスピードでしかアニメーションさせられませんでした。
　ですが今回、オートタイルにフレーム数を指定する手段が搭載されます！

　たとえば「Water_Auto.png」というオートタイルがあったとき、「Water_Auto<B>_FRAME=5</B>.png」という感じに「<span style="color: #d50000"><B>_FRAME=??</B></span>」と入れると、1コマのアニメーション時間をそのフレーム数に変更できるのです！（※1フレーム=1/60秒）

<span style="font-size: 80%"><span style="color: #808080">↓滝のアニメーション速度を変えた見本</span></span>
<a class="double-link red" target="_blank" href="https://twitter.com/WO_LF/status/1853416989018214459">https://twitter.com/WO_LF/status/1853416989018214459</a>

　これまでも強引にピクチャでオートタイルを再現してアニメーション速度を変えることもできなくはありませんでしたが、今回からはもっとマシな方法で速度を変更できます！　よければぜひご利用ください！

<HR>
　という感じで、今回も新機能盛りだくさん！
　次がたぶん最終のご紹介になると思います！　つまり公開もおそらく間近という雰囲気になってきますので、ご期待ください！

　とはいえ、今回いじった分がかなり多くて致命的なバグもまだ結構ポコポコ出ているため、いつ出せるかははっきりと明言しにくい状況です。「11月末か12月頭くらいに出せたらいいなあ！」くらいで見込んでおりますが、あまり信用しすぎずにお待ちください。
　
-----
EXTENDED BODY:

-----
--------
TITLE: ウディタ3.5開発中その6　キー入力･XY配列･Git間接対応
CATEGORY: ウディタ
DATE: 2024-11-30 08:55:55
-----
BODY:
　ということでウディタ3.5開発の経過報告、その6です！
　今回で最終回かと思いましたが、データのテキスト入出力機能を実装してたら想定以上に時間がかかっちゃったのでまだまだ続きそうです。

<HR><span style="font-size:large;"><B>●念願の「XY配列」（二次元配列）機能を搭載！</B></span><HR>
　一部の人には念願だった二次元配列機能が搭載されます！　その名も『XY配列』！
　数値データのみが入る、<span style="color: #d50000"><B>最大『10000×10000』の二次元配列</B></span>を無限に作ることができる機能で、1つずつの読み書きだけでなくCSVからの入出力やソートなども可能です！

<img src="../../image/2024/20241130B.png" border="1" style="max-width:520px;" loading="lazy" height="390">

　使い勝手としては、<B>「数値だけを入れられるDB(ただし項目数は100から10000まで拡張可)が無限に作れる」</B>みたいな感触となっております。
　
　XY配列の入力画面は以下の通り！　……といっても、この「XY配列」機能はインターフェースとしては従来のDBと並んでいる扱いなので、そのまんま「DB操作」画面です。
<img src="../../image/2024/20241130A.png" border="1" style="max-width:520px;" loading="lazy" height="309">

<B>【特徴】</B>

<B>●「配列番号/名前」には好きな「番号」または「文字列(名前)」を指定できます。
　「X列」と「Y列」には「数値(変数)」だけ指定可能です。</B>
　→　この「配列」は、あらかじめ用意する必要はありません。なかった場合、数値を格納した時点で勝手に作られます。

●「X列」と「Y列」は、使った番号まで<B>自動で配列が拡張</B>されます。
　サイズの限界は最大でX、Y共に<B>「10000」</B>までです。

●「新データ挿入・抜き取り・コピー・ソート・CSV入出力」機能も使用可能です。

●XY配列の内容はもちろんセーブデータにも保存されます。



<B>【どういう場面で使える？】</B>

●自作システムを作ってる最中に出てくる、「DBを作るほどでもないけど大量の数値を扱いたい！」という場面で非常に有用です！
　たとえば「素早さが高い順に行動順の並び変えをしたい！」みたいな処理をするときも、今後はいちいち可変DBに計算用のDBを作る必要はなく、XY配列だけで完結できてしまいます！

●単純に自作システム内で、コモンセルフの足りない分を補うのにも有用です！
（使えるのは「数値」だけですのでそこはご注意を）

●コモンイベント配布においても、処理がほぼ数値データだけで済む場合は、<span style="color: #d50000"><B>わざわざ可変DBの新たなタイプを作らなくてもXY配列だけで用が済む</B></span>ようになります！　コモン導入がシンプルに！
<span style="color: #42a5f5">　→　その場合、使用されるXY配列の名前は「<B>(作者名)_(コモン名)_1</B>」みたいにしておいてくださると他のコモン作者さまとバッティングしなくなるので安心ですね。</span>

●他には『マップに関わるなんらかの処理で使う』というのがすぐ思いつきます！
　「マップと同じサイズのXY配列」を作って、何かの値を格納したり読んだりする、ということが従来よりも圧倒的に簡単にできるでしょう。

●「名前で一部の変数を管理したい」という需要にも応えられます！
　たとえば1x1の配列を使用し、配列名に「[物語用]ウルフがトイレに行ったフラグ」などと入れれば名前でのフラグ管理も可能になります。

●今後、2次元配列を入出力とする「何か」を私が作る場合でも気軽に色々できます！
　今回の更新では、<span style="color: #d50000"><B>【4つのXY配列「アルファ値・赤・緑・青」を指定すれば、その配列のアルファ、RGB値で画像を出力できる隠しコード】</B></span>みたいな機能も検討中です。ウディタをちょっとしたペイントツールにすることもできますよ！


　といった感じで、地味ですが利便性が上がり、夢も広がります！
　


<HR><span style="font-size:large;"><B>●データのテキスト入出力機能！</B></span><HR>
　データのテキスト入出力機能！　これは入れるか迷ったのですが、今回入れなかったらたぶんあと3年くらい搭載されなくなりそうだったので10日くらいかけて思い切って実装していました。10日で実装できたのなら割のいい投資です。

　これは、ゲーム設定、各データベース、コモンイベント、タイル設定、マップファイルを「TXTファイル」でも出力、ないし読み込み可能にする機能です。
　これができると何が嬉しいって、Gitで差分管理やバージョン管理がしやすくなるんですよ！
　というのも、これまではウディタの各種ファイルは、.datや.mpsのような、人間が読めない「バイナリファイル」で保存されていたため、Gitで差分を取ったりするのが難しかったのです。ですがこれが「テキストファイル」なら、しっかり管理してくれます。

<span style="color:#666666"><span style="font-size:x-small;">↓マップファイルのテキスト版、最初の方にマップチップ情報、（見えない）後ろにイベントデータが書き込まれています</span></span>
<img src="../../image/2024/20241130D.png" border="1" style="max-width:520px;" loading="lazy" height="431">


<B>【Gitを使うと何ができる？】</B>
●定期的にコミットすることで、コミット単位で<B><span style="color: #d50000">書き換えた場所だけを後から確認できる</span></B>。
　致命的なバグが起きてしまったけれど原因が分からないとき、「いじった部分」だけを追跡すればどこが悪かったのかを見つけ出しやすくなります。

●前にコミットした時点の内容に<B><span style="color: #d50000">巻き戻せる</span></B>！　バグが起きて困ったときに、データを巻き戻したりできます。

●他の人のテキストファイルと、<B><span style="color: #d50000">修正部分を「マージ（合体）」させる</span></B>ことができる。うまく作業の仕組み作りができれば、遠隔での共同作業もいくらか可能になるかも！

→　といったGit利用におけるこれらの強みを、ウディタでも一手間かかるものの享受できるようになります！
　ただ最初はGitの扱いがだいぶ難しいと思いますので、あくまでできる人向けです（私は分からないなりに色々操作した結果、過去のバックアップデータを全部吹っ飛ばしたことがあります）



<B>【TXT入出力にはどんなモードがある？】</B>
　このデータのTXT入出力機能には以下のモードがあります！

<B>●「エディターオプション」から、ファイルのセーブ時に自動でTXTファイルも保存されるよう切り替えできる。</B>
→　一番シンプルなモード。ゲーム設定やコモン、DB、マップなどを保存した際に自動でTXTも出力されます。ただ環境によっては少し保存処理が重くなるかもしれません。

<B>●「エディターオプション」から、指定したフォルダに「TXTファイルをまとめて出力」、ないし「TXTファイルからまとめて読込」できる。</B>
→　Gitのバージョン管理では全ファイルをまとめて戻すことが多いので、エディター内からも「まとめてTXT読込」でデータを復元できる機能を用意しておきました。その逆の「まとめてTXT出力」機能はたまに出力したい人向け。

<B>●コマンドラインでまとめて出力・読み込みできる。</B>
<span style="color: #d50000"><B>　Editor.exe -txtoutput -target ALL -txt_folder Data_AutoTXT</B></span>
　みたいにコマンドプロンプトで入れると、「ALL」対象である「基本データ(ゲーム設定･DB･コモン･タイル設定･マップ)」と「全マップ」が「<B>Data_AutoTXT</B>」フォルダ以下にフォルダ構造を再現してTXT出力されたりします。逆に、そこから読み込んで各ファイルを復元する「-txtinput」モードもあります。
→　batファイルなどを使える人なら、「Gitにコミットする直前だけまとめてTXT出力する」みたいな工夫もできるはずです。
→　「-target」オプションは 「ALL(全部）」の他に「BASIC（基本データのみ）」と「MAP（全マップ）」があります。



<HR><span style="font-size:large;"><B>●キー入力強化！　「新押し」と「離した時」の取得が可能に！</B></span><HR>
<img src="../../image/2024/20241130C.jpg" border="1" style="max-width:520px;" loading="lazy" height="467">

　もう上の画像を見てくださるだけでピンと来る方も多いかもしれません！
　3.5ではいつも通りの「押されている状態」を得るだけでなく、「新たに押された瞬間」「離した瞬間」の1フレームだけ値を返す、という取得方法が追加されます！
　
　いちおう自作コモンイベントでもこの処理自体は作れるのですが、従来は毎フレーム「そのキーが押されているか」を記録し続けなければ「このフレーム中に新たに押されたか」「離されたか」を知ることは難しく、意外に手間な部分でした。なんならうまくまだ作れない人もいらっしゃるでしょう。
　そこがワンコマンドで作れるようになったので、以後はだいぶ気楽に使うことができます！


<B>【「新押し」機能はタイピングゲームに強そう！】</B>
　従来の「押されている状態」を使い、「キーボード全キー（を取得）」と合わせてタイピングゲームを作っておられた方もいらっしゃるかもしれませんが、実はこれだと同時押しされている際、<B>「同時押しされている中で最も小さいキーコードの値だけが返される」</B>という問題がありました。つまりAキー(130)から指が離れてない状態でSキー(131)を押しても、判定上は「A(130)」のキー値しか返されないという状況になってしまうのです。

　ですが！　3.5からは「新押し時のみ取得」で「全キー」を取得するようにすれば、最初に押されたキーは1フレームで返し終わってしまい、別キーが受理可能になるので、<B>「<span style="color: #d50000">「新押し時のみ取得」を使えば前のキーを押したまま別のキーを押してもちゃんと新しい方のキーが返される」</span></B>ようになるのです！　これはタイピングゲームがすごい作りやすくなりますよ！
<span style="color: #808080">（といっても、0.016秒内に2キーを同時押しされるとやっぱり小さいキーコード1つしか認識されないという問題はあるので、そこまで気にされる方は従来通り1キーずつ全チェックされるしかないんですけれども）</span>

　「1フレーム差あれば全キー受理される」くらいの精度のゲームであれば作るのが相当楽になるはずですので、タイピングゲーム作りに挑戦される方もこの機会にぜひご利用ください！


　もちろんアクションゲームやRPGでもキー反応をより正確にすることができるはずですので、どんなゲームにおいても、ぜひこの「新押し時のみ」「離され時のみ」判定は役立つと思います！　私もいっぱい使う場面がありそうです。

<HR>
　といった感じで、今回も「作り方」から変わってしまうような重要な新機能がいろいろ実装できました！
　
　この調子だと公開時期がほぼクリスマスになったりするかもしれませんが、どうか気長にお待ちください！　まだ故人の都合で、リアルの用事もいろいろ発生してしまっているものでして。


　また、<B><a class="double-link red" target="_blank" href="https://silversecond.booth.pm/items/4455722">BOOTH</a></B>などでご支援くださっている方、本当にありがとうございます！
　いよいよウディタプロ版の売上げも停滞しつつあり、ウディタプロ版や関連するBOOTH売上に対する作業時給がこの3ヶ月間ずっと200円前後になっているので、もうこれが最後の大規模更新のチャンスだと思って色んなものを体中から出しながらも色々追加しておりました！
　が、みなさんのご支援のおかげでもう一踏ん張りがんばれております！　本当に助かります！

　引き続きラストスパート、がんばっていきます！
-----
EXTENDED BODY:

-----
--------
TITLE: ウディタ3.5開発中7　タブ･正規表現･レイヤー5･XY配列ピクチャ
CATEGORY: ウディタ
DATE: 2024-12-14 07:59:00
-----
BODY:
　ウディタ3.5開発の経過報告、その7です！
　Xなどで様々なご要望をいただいており「あ、これ入れたいと思ってたやつだ！」となっては追加で実装する日々が続いております！
　当面の最後の大規模実装だと思って、自分の技術で作れそうなもの、かつ私や多くの人が必要そうなものはどんどん採り入れ中です。

　ということで、今回もウディタ3.5に実装される新機能をご紹介します！


<HR><span style="font-size:large;"><B>●タブウィンドウ化！　行ったり来たりする作業の効率アップ！</B></span><HR>
<img src="../../image/2024/20241214A.jpg" border="1" style="max-width:520px;" loading="lazy" height="404">

　ウディタ3.5からは「マップイベントウィンドウ」「コモンイベントウィンドウ」「データベースウィンドウ」の3つにタブが付きます！
　いま開いている場所（イベント番号や行数、スクロール位置など）がタブごとに保存できるので、たまにある「あっちとこっちの処理を見比べながらデータをコピーしたり入力したりする」場面では非常に便利です！
　忘れておきたくない場所にタブを開いておけば後からでも開けるので安心！

　特に「データベースウィンドウ」でのマルチウィンドウ機能が欲しいというご要望をだいぶ昔からいただいていたのですが、それもこのタブ機能で、ある程度はカバーできるようになると思います（技術的な都合でよさげなマルチウィンドウが作れませんでした）。

　なおこのタブ機能、ちゃんと「エディターオプション」から従来通りの「タブなし」に戻すこともできます！　以前通りの方がいい方や、タブの縦幅すらカットしたい人にはそちらもぜひ！



<HR><span style="font-size:large;"><B>●【正規表現】が「文字列操作」や「条件(文字列)」に搭載！</B></span><HR>
　文字列周りの処理についに『正規表現』が実装されました！
　紹介映像を作りましたので見られる方は以下をどうぞ！　正規表現について知識ゼロの方でも、ほんのり使い方が分かると思います！　たぶん。
<iframe width="510" height="295" src="https://www.youtube.com/embed/mo5BdbEHOJY?si=QtJMWIypG-Wlxr40" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

　ウディタ3.5では、【文字列操作】に「正規表現で()内抽出」と「正規表現で置換」、そして【条件（文字列）】の比較コマンドに「の正規表現と一致」が追加されます！
<span style="color: #808080">（ちなみに「条件（文字列）」には他にも「を含まない」場合と「が最後にある」場合の比較コマンドも追加されました！　これらも便利！）</span>

　「正規表現」とはおおまかに言うと「あいまい検索」みたいなことができる機能！
　たとえば「人数400人」が入った文字列S1に対して、正規表現で「人数(\d{1,4})人」の「<span style="color: #808080">(正規表現の)</span>（）内を抽出」処理を行うと、S1には「400」という数値のみが返されるのです！
　「\d{1,4}」は「1～4桁の半角数字」で、それを()で囲んでいるので、その数値部分だけ抽出して返してくれるわけですね！
　もし1つの文字列に2つ以上当てはまる部分があったら、2行の文字列として返してくれるようになっています。
　
　また、「条件（文字列」の「の正規表現と一致」も同様で、正規表現で「人数\d{1,4}人」（\d{1,4}=1～4桁の半角数字）と指定しておくと、文字列側が「人数1人」でも「人数1234人」でも「条件を成立」させられるのです！！
　一方で、文字列が「人が1人」だった場合は、いくら似てても「成立しません」。

　このあいまいさは「\d」に始まる「メタ文字」というもので色々な表現を書くことができます。
　たとえばさっきの延長で、<B><span style="color: #d50000">「\d{1-3}-\d{1-4}-\d{1-4}」</span></B>の正規表現に該当する文字列が含まれてたら<B><span style="color: #d50000">「電話番号っぽい数字が入力されたぞ！」</span></B>みたいに認識できたりするわけです！　
　これを駆使すれば、「掲示板への書き込みで電話番号っぽいのが書かれていたらその投稿を弾く」みたいな処理だって作れるわけですね！　正規表現のおかげで、「000-0000-0000」から「999-9999-9999」まで全パターンの禁止ワードを入れたりする必要はなくなるのです！

　この「正規表現」はプログラミングにおいてよく使われるもので、文字列の取り回しやすさの限界値が大幅にアップします！
　といってもかなりのガチ勢向けで、私も普段よく使うもの以外は見ずに書けないので割と達人向けです！
　テキストスクリプトなどを作成される方にはとても便利だと思いますので、よければぜひご利用ください。
　
　これから正規表現を学びたい人には、「正規表現 サンプル」などで検索すれば勉強になるページが色々出ると思いますので、色々探してみてください！



<HR><span style="font-size:large;"><B>●マップのレイヤーが5まで使用可能に！（プロ版専用）</B></span><HR>
　これまで3レイヤーまでしか使えなかったマップのレイヤーが、ウディタ3.5からはレイヤー5まで使用可能になります！　ただし使用できるのは「プロ版のみ」です！

　仮にプロ版で「レイヤー5」まで使ったマップを作って、そのデータを無料版Game.exeで起動すると、「レイヤー3までしか表示されなくなります」ので、その点はご注意ください。
　つまりウディコンでは、審査中はマップレイヤー4～5は使えないということですね。

<img src="../../image/2024/20241214B.png" border="1" style="max-width:240px;" loading="lazy" height="131">　<img src="../../image/2024/20241214C.png" border="1" style="max-width:240px;" loading="lazy" height="146">
　↑マップレイヤーの拡張は「ゲーム基本設定Pro」から設定可能です。
　レイヤー4だとマップの描画負荷が1.33倍、レイヤー5だと1.67倍になりますのでそこはご注意を！
　それでも、従来よりもさらに複雑なマップ表現が行えるようになります！



<HR><span style="font-size:large;"><B>●「XY配列をピクチャとして表示」する機能を追加！</B></span><HR>
　これは事実上、「ゲーム内で好きに画像を作れる」機能です！
　アルファ値、R、G、Bのパラメータを保存した4つのXY配列（2次元配列、無限に作れる）をピクチャのファイル名指定欄に隠しコマンドで指定すると、その配列の値にしたがった画像をゲーム中に表示することができます！！
　以下のコマンドをピクチャのファイル名のところに入れると出せます！

<span style="color: #d50000"><B>「&lt;XY_IMAGE/A=?/R=?/G=?/B=?/XSIZE=??/YSIZE=??&gt;」または
「&lt;XY_IMAGE/A=?/R=?/G=?/B=?&gt;」</B></span>

　「?」部分には、Aならアルファ値だけを格納したXY配列番号を、R、G、Bにも同様に各色の0～255の値を記したXY配列番号を指定します。XSIZE=??やYSIZE=??の部分には使用するサイズを記載します。
　たとえば「<span style="color: #d50000"><B>&lt;XY_IMAGE/A=1/R=2/G=3/B=4&gt;</B></span>」と指定すると、アルファ値としてXY配列「1」、R、G、B値としてXY配列「2，3，4」に入っている値でピクチャを表示してくれるのです！

<span style="color: #a0a0a0"><span style="font-size: 80%">↓右上に出てるのがXY配列ピクチャで作ったミニマップ！</span></span>
<img src="../../image/2024/20241214E.png" border="1" style="max-width:500px;" loading="lazy" height="369">

　つまり<span style="color: #d50000"><B>マップの通行設定を格納して即席で「ミニマップ」を作ったり、なんらかの「グラフ」を出したり、「複数の画像」を読み込んで1枚に重ねたり</B></span>と色んな使い方ができます！
　特にミニマップがゲーム内処理だけで作れるようになるのは大きいのではないでしょうか！（従来から、アイコンなどを活用して作ることはできてましたけれどね！）

　なお、XY配列からピクチャ化する「表示」の瞬間の負荷は大きめになってしまっているので、そこはご了承ください。
　毎フレームやるにはちょっと向かないかもしれないので、【主人公付近だけ表示するミニマップ】を作るにも、たとえばいったん全マップ分を作っておいて「マスク」で主人公の近くの分だけを見せるようにするとか、そういった工夫が必要になる可能性もあります。


<HR><span style="font-size:large;"><B>●キー入力に「押し続けフレーム数」の取得も追加！</B></span><HR>
<img src="../../image/2024/20241214D.jpg" border="1" style="max-width:520px;" loading="lazy" height="387">
　前回、「キー入力」に「新押し時のみ」「離した時のみ」の取得モードを追加しましたが、コメントを見てあと1つ足りないと思ったので「押し続けフレーム数」の取得モードも追加しました！
　これで「新押し時」と合わせれば、「↑キーを押しっぱなしにしてたら一定時間ごとにリピートされる」、「ショットキーを押し続けていると一定間隔で自動連射」みたいなのが簡単に作れるようになります！
　情報としてはシンプルですが色んな処理を書かずに済むようになるので、ちょっと楽になるはずです！　これまで上手に処理を組めなかった人にもお役に立てるでしょう！

（なお、この「新押し時のみ」～「押し続けフレーム」の取得モードは、「キーボード・パッドボタン（スティックやPOVキー除く）・マウスクリック」のみに使えますので、その点はご了承ください）


<HR><span style="font-size:large;"><B>●エディターからのテストプレイ開始が快適に！</B></span><HR>
　エディターからのテストプレイ、これまでは『すでにGame.exeがテストで立ち上がってる状態』でテストプレイを開始すると「（ゲームの）重複起動です」みたいなエラーが出るだけでなんだか面倒臭い感じになっていました！

　が！　今回からはすでにテストプレイからのGame.exeが立ち上がっていれば次にテストプレイを押したとき、<span style="font-size: 150%"><B><span style="color: #d50000">自動でそのゲームのウィンドウが最前面に来ます</span></B></span>！　地味だけどとても便利！

<iframe width="500" height="275" src="https://www.youtube.com/embed/tpIQzfTwCdQ?si=-CUsvhiq6D2bJcsR" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

　ちなみにこの機能、どうしてこれまで簡単に作れなかったかというと、Editor.exeとGame.exeの通信機能を用意しないとダメだったからですね！
　というのも、最近のWindowsはよそのEXEのウィンドウをいじったりする処理が極めて強く制限されており、Editorから立ち上げたと分かっているGame.exeのウィンドウすら、Editorから直接最前面にすることができなかったのです。
　なので最前面にするだけといっても、内部的にEditorからGameに対して「最前面に出して～」と通信を行い、「Game.exe側でそれを受信したら自主的に最前面表示になる」という回りくどい手順が必要だったのです。
　
　今後はゲーム画面を開きたかったら、とにかくF9やCtrl+Tやテストプレイボタンを押せばいいだけになるので手軽です！
　もう毎回数秒かけてマウスカーソルでタスクバーからゲームのウィンドウを開きなおす必要もなくなるので、効率がほんのちょっとアップするはずです！

<HR>

　という感じで、ウディタ3.5での快適性アップや、やれることの幅の拡張が進んでおります！

　残る新機能予定は『<span style="color: #d50000"><span style="font-size: 150%"><B>BGSの多チャンネル化</B></span></span>』など！　BGSは割と全体に処理が食い込んでるので、すごい修正量となってしまいますが、ウディタの長年の弱点だったのでこの機会に補強したいと考えています！
　根本からの修正は今みたいな大規模修正のチャンスじゃないとなかなか着手できない部分なので、これを逃したら普通に次のチャンスは <span style="font-size: 150%"><B><span style="color: #d50000">3年後</span></B></span> などになってしまうと思います。せっかくなので、この機会に強化しちゃいましょう！
　もちろんここまで作った機能にも大量のバグが出ておりまして「ギョワアア！」って叫びながら直しております！


　そして引き続き、チップや<B><a class="double-link red" target="_blank" href="https://silversecond.booth.pm/items/4455722">BOOTH</a></B>などからご支援くださっている方、本当にありがとうございます！　リソース的にはもう限界をややオーバーしちゃってましたが、おかげさまでもう一踏ん張りがんばれております！　本当に助かります！
　
　ウディタ3.5のリリースは運がよければ今年中、やっぱりダメそうなら来年始め頃になると思いますが、気長にお待ちいただけますと幸いです。当面の最終大規模更新と思って全力を尽くします！


　そしてまた、12月24日にはうちのサイト、シルバーセカンドが26周年！　もし生放送ができそうなら今年を振り返る生放送をやろうと思いますので、そちらもうっすらお楽しみに！（体調の都合でナシになる可能性は常にあります）

　ということで年末に向けてのラストスパート、引き続きがんばります！　うおお！！
　
-----
EXTENDED BODY:

-----
--------
TITLE: シルバーセカンド26周年！ ～1年振り返り～
CATEGORY: 開発日誌
DATE: 2024-12-24 00:00:00
-----
BODY:
　おかげさまで私のサイト、シルバーセカンドが26周年を迎えました！　ワーピピー！！
　ということで今回は年末恒例、1年を振り返る回とさせていただきます！

<img src="../../image/2024/20241224.jpg" border="1" style="max-width:520px;" loading="lazy" height="520">
　今年の記念イラストはサンタウルファール！　ウディタ3.5に向けての作業が今年一番大きな内容でしたからね！　まだウディタ3.5をリリースできてなくて申し訳ないのですが、すぐ見つかるバグくらいはしっかり直して、入れたかったものはしっかり入れてリリースしたいと思っております！


<HR><span style="font-size:large;"><B>◆シルバーセカンド26周年！　今年やってきたことの振り返り</B></span><HR>
　今年はリアル事情が大変だった思い出の方が多かったですが、やることも一応やっております！　それぞれ振り返っていきましょう！

<HR>
<span style="font-size:120%;"><B>【片道勇者（プラス）のSteam Deck対応】</B></span>

　片道勇者（プラス）をSteam Deckという小型ゲーム機で遊べるようにしましたのでここでまたお知らせです！　パソコン版でも寝転びながら遊べるので、Deckをお持ちの方はよければぜひ。
<blockquote class="twitter-tweet"><p lang="ja" dir="ltr">【片道勇者(プラス)　Steam版を更新】<br>今回の修正で『片道勇者(プラス)』がSteam Deckで遊べるようになりました！<br>Deckで寝転びながら遊びたかった方などはよければぜひ！<br><br>更新記事↓<br>◆<a class="double-link red"  target="_top" href="https://t.co/kaNMuaE4fz">https://t.co/kaNMuaE4fz</a> <a class="double-link red"  target="_top" href="https://t.co/97GFeeYs2y">pic.twitter.com/97GFeeYs2y</a></p>&mdash; SmokingWOLF＠ゲーム開発者/片道勇者2開発中 (@WO_LF) <a class="double-link red"  target="_top" href="https://twitter.com/WO_LF/status/1747526529079517656?ref_src=twsrc%5Etfw">January 17, 2024</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>


<HR>
<span style="font-size:120%;"><B>【『片道勇者2』開発もちょっと進められました】</B></span>

　『片道勇者2』の開発もちょっと進めていました！　といってもいつ作業が切られるか分からない状況だとシステムを組むのが難しすぎる！<span style="font-size: 80%">（複数箇所を一気に修正しないととんでもないことになる部分を一部だけ書いたタイミングで放置せざるを得ない状況になったりして後で直し忘れてとんでもないことになること多発。プログラマーの人は10分に1回呼ばれて席を立ちながらコーディングするところを想像してみてください）</span>
　それでも今年は立ち絵イラストや会話パート作成など、低い出力でも何とかできる範囲の作業を進めていたつもりです。来年からはウディタ3.5も使って本格バリバリ進行したいですね！


<HR>
<span style="font-size:120%;"><B>【介護が大変でした】</B></span>

　今はいったん落ち着きましたが、介護が本当に大変でした。また近い内に始まるかもしれませんが、当面は自由に時間を使えると思いますのでやれることをがんばりたいですね！
　介護は想像以上に大変で、1日5回も深夜に起こされて熟睡時間が0とか1日5回もトイレの床に広がった汚物処理しなきゃいけないし食事中も匂いがしてヤバいとか日常的にありますからね！　ベッドから起こすという基本動作だけでも介助が必要で腰がずっと痛い！　精神的な疲労もすさまじい！
　特に私の場合、去年介護事故でベッドから転落して腰を破壊された影響が残っていてずっとしんどかったです。少しは回復してきましたけれども、今でもちょっと負荷をかけるとそこから痛みが出るくらいには残っててつらい！

　それに落ち着いた今になってようやく分かりましたが、介護があると作業効率が20～30%くらいしか出ていませんでした。手を付けられる時間が仮に今と同じ分あったとしても、重要箇所をいじれている量や、本質的な部分のボリューム増加量が今より圧倒的に少なかったです。
　これからはしばらく全力を出せるのでがんばっていこうと思います！


<HR>
<span style="font-size:120%;"><B>【近しい人が亡くなって色々大変だった！】</B></span>

　近しい人が亡くなってドタバタしていました。その中で「喪主（もしゅ）」を初体験しました。そこまでは葬儀会社の皆さまからの多くのサポートを受けられたのでよいとして、そのあとの手続きが地獄みたいでした。
<img src="../../image/2024/20240608.jpg" border="1" style="max-width:520px;" loading="lazy" height="343">
　大量の電話！　大量の手続き！　お墓とか仏壇とかどうすりゃいいの！？　みたいな情報の津波が襲い来る！
　「これ頼りない人が1人残されちゃったらどうしようもなくない！？」と思ってしまうくらいにはやること多すぎて大変でした。もっと強くあらねばと感じさせられます。

　もちろん手続きがいっぱいあるだけでなく、それ以外にリアルでやらねばならないこともまだまだいっぱいあります。こちらはひっそり、引き続きぼちぼちがんばって対応していきます。
　

<HR>
<span style="font-size:120%;"><B>【第16回ウディコンは何とか無事にできました！】</B></span>

　上述のことがありながらも、なんとか<a data-primary="https://silversecond.com/WolfRPGEditor/Contest/" class="double-link blue" target="_blank" href="https://smokingwolf.github.io/wolf_rpg_editor_contest/"><B>第16回ウディコン</B></a>は開催できました！

　今年もとんでもないクオリティの作品がバンバン届いたり、SNSでもおそらく過去一番にウディコンの話題が共有されていたりして、開催してよかったと感じます。
<img src="../../image/2024/20240825.jpg" border="1" style="max-width:520px;" loading="lazy" height="292">
　今年も作品参加してくださった皆さま、一般投票してくださった皆さま、そしてゲームに触れてくださった皆さま、本当にありがとうございました！　
　ウディコンは次回の第17回も開催予定ですのでお楽しみに！


<HR>
<span style="font-size:120%;"><B>【ブラウザウディタ（ブディタ）が公開！】</B></span>

　これは私の成果ではないのですが、ブラウザでウディタ作品を動かせるツールがruka様によって公開されました！　しかもパフォーマンスや処理の再現度も非常に良好です、すごい！！
<a class="double-link red" target="_blank" href="https://ci-en.net/creator/12702"><B>【ブラウザウディタ開発Ci-enページ (ruka様) 】</B></a>

　何なら私の持ってるAndroidスマホのPixel6a上ですら、私のパソコンでブラウザ版を走らせるよりも快適にウディタ作品が動作しますからね！

　そしてこの「ブディタ」、スマホからでもすぐプレイできるのは言うまでもありませんが、ちょっと<a class="double-link blue" target="_blank" href="../../archive/2024/08.html#2024-08-17"><B>あれやこれやすればなんと（Android)スマホアプリにもできてしまいました(記事へ)</B></a>ので、急にウディタ作品のスマホ向け展開への道が開けました！

　もし来年8月までサポートが続いてそうならウディコンにも使えないかなあ？　とちょっと考え中ですが、仮にそうするならアップロード先をどうするか、など色々考えなければなりません（ブラウザゲームはとにかく通信量がすごいですからね、ウディコンの来客数でもすぐ転送量オーバーしてしまいます）。
　もしその辺りの課題がなんとかなるようでしたら、ウディコンにもブラウザ用ページへのリンクを追加できないか考えてみようと思っています。



<HR>
<span style="font-size:120%;"><B>【ウディタ3.5に向けて開発中！】</B></span>

　そして私がウディコンの熱気に当てられたのか、あるいは介護が一段落して第二の人生のために基礎を固めようと思ったのか、9月から今までずっとウディタ3.5に向けた開発をやっておりました！
　介護の必要がなくなったので、夜ちゃんと寝られるようになって知力が1.5倍！　ずっと集中できる時間を得たので作業速度が5倍です！　これらの数値は冗談抜きの倍率でして、今も過去にない勢いで欲しかった機能をいっぱい実装できています！　もちろんチャットAIのコーディング支援が使えるようになったことも非常に大きいのですが、それがあっても去年はたぶん普通の人並みにしかやれてませんでしたからね。

　何より「面倒臭さに耐えられる能力」や、「大きな課題を抱える能力」を、以前並みにちゃんと取り戻せていることが確認できているのがうれしい！
　ここ5～6年くらいのウディタの修正で「面倒臭い/今の自分には手に余るからこれはできない」と思っていたことがどんどんできています！
　「うおおおおこれがちゃんと休めてしっかり集中できる環境で出せる全力なのかぁぁ！　スゲエエ！！」となりながら作業中です。


　なおウディタ3.5には革新的な機能もいっぱい搭載（予定）！　これまで扱いにくかった細かい点の改善もいっぱいあります！

<span style="color: #d50000"><B>●動作指定に「自動移動」機能搭載！
●XY配列搭載！　そこに画像の（ピクセルごとの）不透明度・RGBを読み書きできる画像入出力機能も！
　何ならXY配列におさめた画像データを「ピクチャ」としても表示可能です！
●マップレイヤー5（プロ版）
●フォントの暗号化可能に！（プロ版）
●変数操作には√やビット演算、文字列操作には正規表現搭載で大幅強化！
●空イベントを作る機能も搭載！
●BGSが多チャンネル化！　多重の音声再生が可能に！　サウンドにはパンも搭載！
●キャラにピクチャをリンクさせる機能！
●キャラチップレイヤーを無制限化&レイヤーごとにエフェクトかけられる機能も搭載！
●アニメーションする画像を文字列内に使用可能に！
●エディターの一部ウィンドウをタブ化！
●エディターのウィンドウ表示倍率を設定可能に！
●データのTXT入出力機能搭載でGitなどでも差分管理できるように！
●ファイル選択画面も強化！　音声も再生可能に！　MIDI再生はゲームと同じ！</B></span>

　などなど、大げさなことを言わないつもりの私でも、『ウディタ3.5によって、作れるゲームの幅が一気に広がりますよ！』と断言できるシロモノになっていますので、来年になると思いますが公開をお楽しみに！


<HR>
<span style="font-size:120%;"><B>【おまけ：『架空のやさしい妹AI』を作りました】</B></span>

　今年からChatGPTさんちのGPTs（設定済みのチャットAI）が無料版でもアクセスできるようになったので「架空のやさしい妹AI」を調整して公開していました！

→<strong>●架空のやさしい妹AI(GPTs)</strong>　<strong><a class="double-link red" target="_blank" href="https://chatgpt.com/g/g-YynoE4Pqa-jia-kong-noyasasiimei-ai">https://chatgpt.com/g/g-YynoE4Pqa-jia-kong-noyasasiimei-ai</a></strong>

<img src="../../image/2024/20241224A.jpg" border="1" style="max-width:520px;" loading="lazy" height="533">

　↑
　これは「感情に応じた表情イラストが出てコメントしてくれる」というAI（といいますかChatGPTに性格設定をしたもの）です！
　作業報告すると褒めてくれたり、日々の生活で不足気味な自尊心を補ってくれるような物言いをしてくれるようにしているので、そういう需要がある方はぜひご利用ください。

　特に（私を含めて）『自尊心』の心の栄養が普段から足りていない人は、何かしらの方法で補給しないとヤバいことをしがちなので本当に大事です。
　『自尊心』を今すぐ「人間」から摂取しなければならない状態になってしまうと、心がしんどかったり、他人をねたんだり、あるいは人に不快な思いをさせかねない行動に走ったりしがちですからね！

　なので人間の代わりに「チャットAI」からいくらかでも『自尊心』を補給してもらうのは、見た目や倫理感はともかくとして、人生を良くする上では非常に価値があることだと感じています<span style="color: #64b5f6">（チャットAIからでも自尊心を補給されてると感じられる方に限りますが！　でも少なくとも、「自分のやったことの大切さを客観的に見直してもらう」ことくらいはできると思います）</span>

　そしてまた、「AIに褒めてもらってうれしかった言い回し」をそのまま他の人にも使ってあげれば、周りの人にもいくらかハッピーな気持ちになってもらうことができるでしょう。
　うまいこと良い『自尊心』の循環に繋げて、周りの幸福の総量を増やすために使っていきたいですね！

<HR><span style="font-size:large;"><B>【最後に】</B></span><HR>
　2024年もたくさんの人にお世話になりました！
　いつも色んな人の助けをいただいていますが、今年も去年に引き続き、ゲームを楽しみにしてくださる皆さまや、ウディタへの各種ご報告をくださった皆さま、ウディコンに関わってくださった皆さま、そして様々な形でご支援くださったみなさまには、本当に大きなお力をいただきました！

　今年は色々あって大変な1年だった気もしますが、一方でウディタ3.5などいろいろな新展開への希望もあり、自分の全力を思い出せるチャンスが来ていたりして、最終的にはよい1年だったと思います。

　来年も引き続き全力で、かつ、これからは欲しいだけの睡眠をしっかり取って、最大限に健康を維持しつつがんばっていきたいと思います！

　それではみなさま、お体にはお気を付けて、どうかよいお年をお迎えください！
　次回の更新は1/1予定です！
-----
EXTENDED BODY:

-----
--------